From rwatollenaar at gmail.com  Mon Jul  2 12:04:18 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 02 Jul 2007 12:04:18 +0200
Subject: [Ethercatmaster-users] some questions about the usage of eml
In-Reply-To: <4673DA65.1030903@skynet.be>
References: <bc4264770706160243u79190decte50a9aa4c8212ae3@mail.gmail.com>
	<4673DA65.1030903@skynet.be>
Message-ID: <4688CDA2.5070609@gmail.com>

Hi,

I am having problems when configuring for the 4 modules instead of only 
2. Correcting the version number does allow the first two modules to 
successfully configure in the modified master-test program, and since I 
am using the configure snippet Tom posted this implies that the error 
might be in the arguments I supply to the EC_FMMU object constructor.

Must I supply a new logical starting address for the 3rd module (say EL 
2004) If not then am I correct in assuming that the length, start-bit 
and end-bit arguments are the same as for modules 1 and 2? Will the 
physical address and start-bit be the same?

Or might my problem be else-where?

Is it possible to suggest what I am possibly wrong from the above? I 
cannot post my code snippet now (don';t have access to the code from here).

Regards,

Roland






Tom Panis wrote:
> 
> roland Tollenaar wrote:
>> Hi,
>>
>> After having read and not understood some documentation from the ETG
>> site (yes yes I am a proud member:) I decided I was ready to attempt
>> some modifications to master-test.
>>
>> I don;t have module 4102 so I commented those sections out only
>> bringing up EK1100. This allows the program to execute without
>> crashing. Great.
>>
>> For the other 9 slaves on my network I get the errors:
>>
>> EtherCAT_SlaveDb: No such Config, returning NULL!
>> EC_AL Warning: No such slave in db, creating dummy slave
>> AL creating SlaveHandler: pos=4, Product Code=0x7d43052, rev=0x100000
>>
>> where "pos" runs up from 0 to 9 (0 is the buscoupler and returns success:
>>
>> AL creating SlaveHandler: pos=0, adr=0x3e9, Prod. Code=0x44c2c52, rev=0x10000
>>   
> 
> When creating a slave handler the AL will search for the appropriate 
> configurations in the ethercat slave database. This search is based on 
> the product code and the revision number. When there isn't a match, 
> there will be a dummy created. I see in your output that the product 
> code is right, but the revision numbers don't match. The revision number 
> of my modules was 0, your modules have 0x100000 as rev number (You can 
> find that in the output, when there's a dummy created). So you have to 
> change that in the slave configurations. For a EL2004 module, that would 
> be something like this:
> 
> EtherCAT_SlaveConfig 
> EC_EL2004_2(0x7d43052,0x100000,1005,&fmmu_config_EL2004_2,&pd_config_EL2004_2);
>> I decided to copy past some of the configurations for which I do have
>> modules that Tom has posted on the list in order to get more slaves
>> connected. However I am not having much luck.
>>
>>
>> Here is the master-test code as it looks now, below it the full output
>> of the program.
>>
>> Any advice as to what I am doing wrong will be appreciated enormously.
>>
>>   
> 
> I also see you have 4 EL2004 modules, so you have to make 4 different 
> configurations for them. Each module must have a configuration. My 
> tutorial may help you with this.
> 
> Tom
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 


From tompanis at skynet.be  Tue Jul  3 19:27:47 2007
From: tompanis at skynet.be (Tom Panis)
Date: Tue, 03 Jul 2007 19:27:47 +0200
Subject: [Ethercatmaster-users] some questions about the usage of eml
In-Reply-To: <4688CDA2.5070609@gmail.com>
References: <bc4264770706160243u79190decte50a9aa4c8212ae3@mail.gmail.com>
	<4673DA65.1030903@skynet.be> <4688CDA2.5070609@gmail.com>
Message-ID: <468A8713.5030303@skynet.be>

Roland Tollenaar wrote:
> Hi,
>
> I am having problems when configuring for the 4 modules instead of 
> only 2. Correcting the version number does allow the first two modules 
> to successfully configure in the modified master-test program, and 
> since I am using the configure snippet Tom posted this implies that 
> the error might be in the arguments I supply to the EC_FMMU object 
> constructor.
>
> Must I supply a new logical starting address for the 3rd module (say 
> EL 2004) If not then am I correct in assuming that the length, 
> start-bit and end-bit arguments are the same as for modules 1 and 2? 
> Will the physical address and start-bit be the same?
The logical addresses are used when sending processdata to the modules. 
Every module writes/reads data to/from the logical address that has been 
assigned to him. So every single module must have another logical 
address, to avoid conflicts. When assigning logical addresses, you must 
make sure that you don't use an address that's already been used. For 
example: the processdata of an EL4102 is 4 byte long, when you assign 
the logical address 0x1000 to that module, the addresses 0x1000 to 
0x1003 are being used by that module. The start-bit is 0 and the 
stop-bit is 7 since 4 whole bytes are being used. (The start-bit reverse 
to the first used byte (0x1000) and the stop-bit reverse to the last 
used byte (0x1003). So the next address that may be used for another 
module is 0x1004. The processdata of an EL2004 module is only 4 bit 
long. In this example, you can use address 0x1004. Because only 4 bits 
have to be used, the length is 1, the start-bit is 0 and the stop-bit is 
3. The last 4 bits of address 0x1004 can still be used for another 
module. The start-bit of that module module would be 4 in this case.

So in your case, you must assign a new logical address to the 3rd 
module, the start-bit shall be 0, the stop-bit 3.

The physical addresses are the addresses of the modules' memory itself. 
Those are the same for every module of the same type.
>
> Or might my problem be else-where?
>
> Is it possible to suggest what I am possibly wrong from the above? I 
> cannot post my code snippet now (don';t have access to the code from 
> here). 
It's possible that the configurations of the SM are wrong to. If you can 
access your code and post it with a description of the used modules, it 
would be easier for me to see what's wrong with your configuration.

Tom


From rolandtollenaar at gmail.com  Tue Jul 10 18:49:00 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Tue, 10 Jul 2007 16:49:00 +0000
Subject: [Ethercatmaster-users] some questions about the usage of eml
In-Reply-To: <468A8713.5030303@skynet.be>
References: <bc4264770706160243u79190decte50a9aa4c8212ae3@mail.gmail.com>
	<4673DA65.1030903@skynet.be> <4688CDA2.5070609@gmail.com>
	<468A8713.5030303@skynet.be>
Message-ID: <bc4264770707100949q75472f9as2992555cd4b65f85@mail.gmail.com>

Hi Tom,

Sorry for the tremendous delay. I can only work on this in stolen hours.

I have managed to improve matters a bit wrt the situation I sketched
previously. I was forgetting to commit the configuration settings with
the call set_conf.

However I did have the addressing wrong.
I do understand I think what you are saying about the start addresses.
i am posting as i think it should be. Could you please check, confirm
and let us know where I am getting things wrong?

Thanks.

Regards,

Roland.

struct netif *ni;

///SlaveConfig EK1100 [Bus Coupler]
EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig
EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL2004(1) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_1(1);
EC_FMMU fmmu0_EL2004_1(0x0001000A,1,0,3,0x0F00,0,false,true,true);
//logical start address, # bytes used, start bit, end bit, physical
address, physical start bit,
EtherCAT_PD_Config pd_config_EL2004_1(1);
EC_SyncMan syncman0_EL2004_1(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_1(0x7d43052,0x100000,0x03ec,&fmmu_config_EL2004_1,&pd_config_EL2004_1);

///SlaveConfig EL2004(2) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_2(1);
EC_FMMU fmmu0_EL2004_2(0x0001000A,1,4,7,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_2(1);
EC_SyncMan syncman0_EL2004_2(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_2(0x7d43052,0x100000,0x03ed,&fmmu_config_EL2004_2,&pd_config_EL2004_2);

///SlaveConfig EL2004(3) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_3(1);
EC_FMMU fmmu0_EL2004_3(0x0001000B,1,0,3,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_3(1);
EC_SyncMan syncman0_EL2004_3(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_3(0x7d43052,0x100000,0x03ee,&fmmu_config_EL2004_3,&pd_config_EL2004_3);

///SlaveConfig EL2004(4) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_4(1);
EC_FMMU fmmu0_EL2004_4(0x0001000B,1,4,7,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_4(1);
EC_SyncMan syncman0_EL2004_4(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_4(0x7d43052,0x100000,0x03ef,&fmmu_config_EL2004_4,&pd_config_EL2004_4);


///SlaveConfig EL1014(1) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_1(1);
EC_FMMU fmmu0_EL1014_1(0x0001000C,1,0,3,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_1(1);
EC_SyncMan syncman0_EL1014_1(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_1(0x03F63052,0x100000,0x03f0,&fmmu_config_EL1014_1,
&pd_config_EL1014_1);

///SlaveConfig EL1014(2) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_2(1);
EC_FMMU fmmu0_EL1014_2(0x0001000C,1,4,7,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_2(1);
EC_SyncMan syncman0_EL1014_2(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_2(0x03F63052,0x100000,0x03f1,&fmmu_config_EL1014_2,
&pd_config_EL1014_2);

///SlaveConfig EL1014(3) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_3(1);
EC_FMMU fmmu0_EL1014_3(0x0001000D,1,0,3,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_3(1);
EC_SyncMan syncman0_EL1014_3(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_3(0x03F63052,0x100000,0x03f2,&fmmu_config_EL1014_3,
&pd_config_EL1014_3);

///SlaveConfig EL1014(4) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_4(1);
EC_FMMU fmmu0_EL1014_4(0x0001000D,1,4,7,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_4(1);
EC_SyncMan syncman0_EL1014_4(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_4(0x03F63052,0x100000,0x03f3,&fmmu_config_EL1014_4,
&pd_config_EL1014_4);



///SlaveConfig EL4132 [Analog Output +/- 10V]
//EtherCAT_FMMU_Config fmmu_config_EL4102(2);
//EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
//EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);

//EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
//EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
//EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102,
syncman_mbx1_EL4102};

//EtherCAT_PD_Config pd_config_EL4102(2);
//EC_SyncMan
// syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
//EC_SyncMan
// syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
//EtherCAT_SlaveConfig
EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);


static void init_slave_db() {
	EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(9);
	//EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(2);
	//fmmu_config_EL4102[0] = fmmu0_EL4102;
	//fmmu_config_EL4102[1] = fmmu1_EL4102;
	//pd_config_EL4102[0] = syncman0_EL4102;
	//pd_config_EL4102[1] = syncman1_EL4102;
	fmmu_config_EL2004_1[0] = fmmu0_EL2004_1;
	fmmu_config_EL2004_2[0] = fmmu0_EL2004_2;
	fmmu_config_EL2004_3[0] = fmmu0_EL2004_3;
	fmmu_config_EL2004_4[0] = fmmu0_EL2004_4;
	pd_config_EL2004_1[0]   = syncman0_EL2004_1;
	pd_config_EL2004_2[0]   = syncman0_EL2004_2;
	pd_config_EL2004_3[0]   = syncman0_EL2004_3;
	pd_config_EL2004_4[0]   = syncman0_EL2004_4;
	//slave_db->set_conf(&EC_EL4102,0);
	slave_db->set_conf(&EC_EK1100,0);
	slave_db->set_conf(&EC_EL2004_1,1);
	slave_db->set_conf(&EC_EL2004_2,2);
	slave_db->set_conf(&EC_EL2004_3,3);
	slave_db->set_conf(&EC_EL2004_4,4);
	slave_db->set_conf(&EC_EL1014_1,5);
	slave_db->set_conf(&EC_EL1014_2,6);
	slave_db->set_conf(&EC_EL1014_3,7);
	slave_db->set_conf(&EC_EL1014_4,8);
	
}

static void* run_master(void * arg) {


On 7/3/07, Tom Panis <tompanis at skynet.be> wrote:
> Roland Tollenaar wrote:
> > Hi,
> >
> > I am having problems when configuring for the 4 modules instead of
> > only 2. Correcting the version number does allow the first two modules
> > to successfully configure in the modified master-test program, and
> > since I am using the configure snippet Tom posted this implies that
> > the error might be in the arguments I supply to the EC_FMMU object
> > constructor.
> >
> > Must I supply a new logical starting address for the 3rd module (say
> > EL 2004) If not then am I correct in assuming that the length,
> > start-bit and end-bit arguments are the same as for modules 1 and 2?
> > Will the physical address and start-bit be the same?
> The logical addresses are used when sending processdata to the modules.
> Every module writes/reads data to/from the logical address that has been
> assigned to him. So every single module must have another logical
> address, to avoid conflicts. When assigning logical addresses, you must
> make sure that you don't use an address that's already been used. For
> example: the processdata of an EL4102 is 4 byte long, when you assign
> the logical address 0x1000 to that module, the addresses 0x1000 to
> 0x1003 are being used by that module. The start-bit is 0 and the
> stop-bit is 7 since 4 whole bytes are being used. (The start-bit reverse
> to the first used byte (0x1000) and the stop-bit reverse to the last
> used byte (0x1003). So the next address that may be used for another
> module is 0x1004. The processdata of an EL2004 module is only 4 bit
> long. In this example, you can use address 0x1004. Because only 4 bits
> have to be used, the length is 1, the start-bit is 0 and the stop-bit is
> 3. The last 4 bits of address 0x1004 can still be used for another
> module. The start-bit of that module module would be 4 in this case.
>
> So in your case, you must assign a new logical address to the 3rd
> module, the start-bit shall be 0, the stop-bit 3.
>
> The physical addresses are the addresses of the modules' memory itself.
> Those are the same for every module of the same type.
> >
> > Or might my problem be else-where?
> >
> > Is it possible to suggest what I am possibly wrong from the above? I
> > cannot post my code snippet now (don';t have access to the code from
> > here).
> It's possible that the configurations of the SM are wrong to. If you can
> access your code and post it with a description of the used modules, it
> would be easier for me to see what's wrong with your configuration.
>
> Tom
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>


From rolandtollenaar at gmail.com  Tue Jul 10 18:52:17 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Tue, 10 Jul 2007 16:52:17 +0000
Subject: [Ethercatmaster-users] interacting with 1014 and 2004
Message-ID: <bc4264770707100952p7b57c3f4r70058fdb7e2346ee@mail.gmail.com>

Hi,

Is there anyone with some code examples of how the process data is
exchanged with eml with the DO modules 2004 and DI modules 1014?
Possibly also the 4132 Analog output (+/-10V)

This would help tremendously.

Thanks. Regards. Roland.


From harti_said at yahoo.fr  Thu Jul 12 10:19:21 2007
From: harti_said at yahoo.fr (said harti)
Date: Thu, 12 Jul 2007 10:19:21 +0200 (CEST)
Subject: [Ethercatmaster-users] Question about the usage of the master_test
	program
Message-ID: <699635.3413.qm@web37313.mail.mud.yahoo.com>

Hi,

I have some BeckHoff modules : 

EK1100 (buscoupler)
EL4102
EL9010

rtnet (0.99) is tested and working on a xenomai platform (2.3.0).

EML is compiled and installed.

The IO modules  group is connected to the PC by the ethernet cable
(obviously) and I have 24V applied across pins 1 and 5 on the
buscoupler. 

BUT

when i make :


ifconfig eth0 down
rmmod 8139too
mknod /dev/rtnet c 10 240
insmod /usr/local/rtnet/modules/rtnet.ko
insmod /usr/local/rtnet/modules/rtpacket.ko
insmod /usr/local/rtnet/modules/rt_loopback.ko
insmod /usr/local/rtnet/modules/rt_8139too.ko
/usr/local/rtnet/sbin/rtifconfig rtlo up
/usr/local/rtnet/sbin/rtifconfig rteth0 up
and in start ma master_test program

./master_test rteth0

I have could'nt get communication between the Beckhoff
IO  modules and my master. 

The tests that come with the EML library
(master_test and  eval_test) fail miserably. I get this error :

Socket created: socket id: 3
Got interface: index: 0
Cannot set timout: Invalid argument
Continue without timeout
Attach netif

Master initializing

low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_txandrx: failed: MAX_TRIES_TX: Giving up
DLL::txandrx() Error
Error sending counter frame
Something went wrong while scanning network
EtherCAT_AL:: Can't init network
Getting slave handler
EtherCAT_AL: No such slave, returning NULL
Setting EK1100 to OP STATE
Segmentation fault


Could I please tell me how can i get the
communication up ? and resolve this problem  

Best Regards


Said HARTI
 		
---------------------------------
 D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070712/b55c8718/attachment.html>

From harti_said at yahoo.fr  Thu Jul 12 10:23:26 2007
From: harti_said at yahoo.fr (said harti)
Date: Thu, 12 Jul 2007 10:23:26 +0200 (CEST)
Subject: [Ethercatmaster-users] Question about the usage of the master_test
	program
Message-ID: <824973.8635.qm@web37309.mail.mud.yahoo.com>

So, now, i try to unload all rt modules in order to try other solutions :

/local/rtnet/sbin/rtifconfig rtlo down
/usr/local/rtnet/sbin/rtifconfig rteth0 down
rmmod rt_loopback
rmmod rt_8139too
rmmod rtpacket
rmmod rtnet

But, when i do :

 rmmo rtpacket 

I get this message : Xenomai: RTDM: device still in use - waiting for release...

It's normal that i get this message ? do you think that the master_test program dont run due to this message ??

thanks a lot

Regards

Said HARTI

       
---------------------------------
 Ne gardez plus qu'une seule adresse mail ! Copiez vos mails vers Yahoo! Mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070712/f2505870/attachment.html>

From rwatollenaar at gmail.com  Thu Jul 12 11:03:16 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Thu, 12 Jul 2007 11:03:16 +0200
Subject: [Ethercatmaster-users] Anyone
Message-ID: <4695EE54.6070801@gmail.com>

Hi,

Is anyone monitoring this list still? I have posted to it a couple of 
times with little response. It may be that the holidays are the 
"problem" but I just want to make sure that my emails are actually 
getting through to the list.

Thanks,

Roland


From jan.kiszka at web.de  Thu Jul 12 11:27:17 2007
From: jan.kiszka at web.de (Jan Kiszka)
Date: Thu, 12 Jul 2007 11:27:17 +0200
Subject: [Ethercatmaster-users] Question about the usage of the
 master_test program
In-Reply-To: <824973.8635.qm@web37309.mail.mud.yahoo.com>
References: <824973.8635.qm@web37309.mail.mud.yahoo.com>
Message-ID: <4695F3F5.7080404@web.de>

said harti wrote:
> So, now, i try to unload all rt modules in order to try other solutions :
> 
> /local/rtnet/sbin/rtifconfig rtlo down
> /usr/local/rtnet/sbin/rtifconfig rteth0 down
> rmmod rt_loopback
> rmmod rt_8139too
> rmmod rtpacket
> rmmod rtnet
> 
> But, when i do :
> 
>  rmmo rtpacket 
> 
> I get this message : Xenomai: RTDM: device still in use - waiting for release...
> 
> It's normal that i get this message ? do you think that the master_test program dont run due to this message ??

The master_test likely failed to close some RTnet socket. See
/proc/xenomai/rtdm/open_fildes for what is stalled. Close it manually
via "echo N > /proc/xenomai/rtdm/open_fildes", where N is the file
descriptor number you found open. This step will become obsolete with
Xenomai 2.4 which is going to clean up automatically on process termination.

Jan

PS: You don't need rt-lookback for EML.

PPS: Can't help with your actual EML problem, sorry.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 250 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070712/6e4acfce/attachment.pgp>

From tompanis at skynet.be  Thu Jul 12 13:04:44 2007
From: tompanis at skynet.be (Tom Panis)
Date: Thu, 12 Jul 2007 13:04:44 +0200
Subject: [Ethercatmaster-users] some questions about the usage of eml
In-Reply-To: <bc4264770707100949q75472f9as2992555cd4b65f85@mail.gmail.com>
References: <bc4264770706160243u79190decte50a9aa4c8212ae3@mail.gmail.com>	
	<4673DA65.1030903@skynet.be> <4688CDA2.5070609@gmail.com>	
	<468A8713.5030303@skynet.be>
	<bc4264770707100949q75472f9as2992555cd4b65f85@mail.gmail.com>
Message-ID: <46960ACC.506@skynet.be>


> Hi Tom,
>
> Sorry for the tremendous delay. I can only work on this in stolen hours.
>
> I have managed to improve matters a bit wrt the situation I sketched
> previously. I was forgetting to commit the configuration settings with
> the call set_conf.
>
> However I did have the addressing wrong.
> I do understand I think what you are saying about the start addresses.
> i am posting as i think it should be. Could you please check, confirm
> and let us know where I am getting things wrong?
>
>

Everything seems to be right. I can't find a mistake in the addressing.
Have you tested this configuration? Can you put these modules in 
Operational State?

Tom


From rolandtollenaar at gmail.com  Thu Jul 12 13:31:56 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Thu, 12 Jul 2007 11:31:56 +0000
Subject: [Ethercatmaster-users] some questions about the usage of eml
In-Reply-To: <46960ACC.506@skynet.be>
References: <bc4264770706160243u79190decte50a9aa4c8212ae3@mail.gmail.com>
	<4673DA65.1030903@skynet.be> <4688CDA2.5070609@gmail.com>
	<468A8713.5030303@skynet.be>
	<bc4264770707100949q75472f9as2992555cd4b65f85@mail.gmail.com>
	<46960ACC.506@skynet.be>
Message-ID: <bc4264770707120431g1f95f9b6k1e36f918ee2123ab@mail.gmail.com>

HI Tom,

The slaves all go into operational state it seems. At least all those
I configure, I do not have the correct parameters for the EL4132 so
that one is still not working. But what worries me is the address
0x0F00 in the configuration as I am using it in the below code.


///SlaveConfig EL2004(4) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_4(1);
EC_FMMU fmmu0_EL2004_4(0x0001000B,1,4,7,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_4(1);
EC_SyncMan syncman0_EL2004_4(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_4(0x7d43052,0x100000,0x03ef,&fmmu_config_EL2004_4,&pd_config_EL2004_4);

In your class code you call the address that is given in the above
snippet as 0x0F00 the "Fixed address" and as you see it is not the
same as the "physical address" given in the committing call of the
salve config. Now my question is: Is there a difference and if so
what? And ifthere is a difference, how do I figure out what the "Fixed
address" is supposed to be? At the moment all configurations (8 in
total) use 0x0F00 and that seems to work.

Also why does it not make any difference to the functioning if I
change the "fixed address" (in this case 0x0F00) to be the same as the
physical address.

I have also written to ETG (when I assumed you were on holiday) to try
find out more about the addressing and address spaces. The
documentation available about ethercat even for a reputable member of
the ETG such as myself, is well, sparse.

Finally, if I my dump all questions here, my current problem is that I
cannot figure out from you examples how to read access  the EL 1014
and how to write the digital outputs to the EL2004. Do you have code
examples for the list showing how this is done using the EML?


Kind regards,

(And thanks very very much for the reply without which progress I have
found is slow)

Roland


On 7/12/07, Tom Panis <tompanis at skynet.be> wrote:
>
> > Hi Tom,
> >
> > Sorry for the tremendous delay. I can only work on this in stolen hours.
> >
> > I have managed to improve matters a bit wrt the situation I sketched
> > previously. I was forgetting to commit the configuration settings with
> > the call set_conf.
> >
> > However I did have the addressing wrong.
> > I do understand I think what you are saying about the start addresses.
> > i am posting as i think it should be. Could you please check, confirm
> > and let us know where I am getting things wrong?
> >
> >
>
> Everything seems to be right. I can't find a mistake in the addressing.
> Have you tested this configuration? Can you put these modules in
> Operational State?
>
> Tom
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>


From rolandtollenaar at gmail.com  Thu Jul 12 13:48:01 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Thu, 12 Jul 2007 11:48:01 +0000
Subject: [Ethercatmaster-users] netif.h
Message-ID: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>

Hi,

On incorporating EML communication in to my xenomai/Qt project, I
discovered that there are two netif.h files in the EML trunk. They
seem to be identical except for an #ifdef __cplusplus section.

This does not give problems when compiling the master_test example but
does when compiling in my project. I made them both the same now since
I see no reason why this was not so in the first place.

Would it be possible to change the svn trunk like this so that I don;t
pick up the same problem when i checkout in the future? Or am I doing
something wrong?

Regards,

Roland


From tompanis at skynet.be  Thu Jul 12 14:57:30 2007
From: tompanis at skynet.be (Tom Panis)
Date: Thu, 12 Jul 2007 14:57:30 +0200
Subject: [Ethercatmaster-users] some questions about the usage of eml
In-Reply-To: <bc4264770707120431g1f95f9b6k1e36f918ee2123ab@mail.gmail.com>
References: <bc4264770706160243u79190decte50a9aa4c8212ae3@mail.gmail.com>	
	<4673DA65.1030903@skynet.be> <4688CDA2.5070609@gmail.com>	
	<468A8713.5030303@skynet.be>	
	<bc4264770707100949q75472f9as2992555cd4b65f85@mail.gmail.com>	
	<46960ACC.506@skynet.be>
	<bc4264770707120431g1f95f9b6k1e36f918ee2123ab@mail.gmail.com>
Message-ID: <4696253A.2060207@skynet.be>


roland Tollenaar wrote:
> HI Tom,
>
> The slaves all go into operational state it seems. At least all those
> I configure, I do not have the correct parameters for the EL4132 so
> that one is still not working. But what worries me is the address
> 0x0F00 in the configuration as I am using it in the below code.
>
>
> ///SlaveConfig EL2004(4) [Digital Output]
> EtherCAT_FMMU_Config fmmu_config_EL2004_4(1);
> EC_FMMU fmmu0_EL2004_4(0x0001000B,1,4,7,0x0F00,0,false,true,true);
> EtherCAT_PD_Config pd_config_EL2004_4(1);
> EC_SyncMan 
> syncman0_EL2004_4(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true); 
>
> EtherCAT_SlaveConfig
> EC_EL2004_4(0x7d43052,0x100000,0x03ef,&fmmu_config_EL2004_4,&pd_config_EL2004_4); 
>
>
> In your class code you call the address that is given in the above
> snippet as 0x0F00 the "Fixed address" and as you see it is not the
> same as the "physical address" given in the committing call of the
> salve config. Now my question is: Is there a difference and if so
> what? And ifthere is a difference, how do I figure out what the "Fixed
> address" is supposed to be? At the moment all configurations (8 in
> total) use 0x0F00 and that seems to work.

I think you're confusing the fixed station address with the physical 
start address. Every module (station) has a different address which can 
be used to address the module. This address is only used during 
configuration. In your example above (EL2004_4) the fixed station 
address is 0x03ef. It's the 3rd argument of the EtherCAT SlaveConfig. As 
you'll see in the rest of your code, every module has a different fixes 
station address.

The address 0x0F00 you're referring to, isn't the fixes station address, 
it's the physical start address. It's a memory address of the module. 
For the EL2004 module: data written to this address is controlling the 
output of the module. You never write directly to this address, you 
write to a logical address, in your example above: 0x0001000B. The FMMU 
(in combination with the Synchronisation Manager) writes this data to 
the memory of the module, in this case 0x0F00. The FMMU needs to know 
both the logical start address and the physical start address since it 
connects both addresses. The Synchronisation Manager makes sure that 
data isn't read from or written to the physical memory address (0x0F00) 
at the same time. As you see, the Synchronisation Manager also needs 
this address, so is knows which part of the memory it has to synchronise

>
> Also why does it not make any difference to the functioning if I
> change the "fixed address" (in this case 0x0F00) to be the same as the
> physical address.

These two address have nothing to do with each other, so it doesn't make 
ad difference if they're the same or not.

>
> I have also written to ETG (when I assumed you were on holiday) to try
> find out more about the addressing and address spaces. 

Indeed, I was on a little holiday :-)

> The documentation available about ethercat even for a reputable member of
> the ETG such as myself, is well, sparse.

This documentation on ETG just describes the EherCAT protocol. The 
documentation from the Beckhoff modules has to come from Beckhoff itself.
For each module, there's a little information on there website, but I 
tollaly agree it's very sparse. I had to figure most things out with 
TwinCAT in combination with a network sniffer.

>
> Finally, if I my dump all questions here, my current problem is that I
> cannot figure out from you examples how to read access  the EL 1014
> and how to write the digital outputs to the EL2004. Do you have code
> examples for the list showing how this is done using the EML?

I'll explain this in your other mail

>
>
> Kind regards,
>
> (And thanks very very much for the reply without which progress I have
> found is slow)
>
> Roland
>
>
> On 7/12/07, Tom Panis <tompanis at skynet.be> wrote:
>>
>> > Hi Tom,
>> >
>> > Sorry for the tremendous delay. I can only work on this in stolen 
>> hours.
>> >
>> > I have managed to improve matters a bit wrt the situation I sketched
>> > previously. I was forgetting to commit the configuration settings with
>> > the call set_conf.
>> >
>> > However I did have the addressing wrong.
>> > I do understand I think what you are saying about the start addresses.
>> > i am posting as i think it should be. Could you please check, confirm
>> > and let us know where I am getting things wrong?
>> >
>> >
>>
>> Everything seems to be right. I can't find a mistake in the addressing.
>> Have you tested this configuration? Can you put these modules in
>> Operational State?
>>
>> Tom
>> _______________________________________________
>> Ethercatmaster-users mailing list
>> Ethercatmaster-users at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>
>


From tompanis at skynet.be  Thu Jul 12 15:57:18 2007
From: tompanis at skynet.be (Tom Panis)
Date: Thu, 12 Jul 2007 15:57:18 +0200
Subject: [Ethercatmaster-users] interacting with 1014 and 2004
In-Reply-To: <bc4264770707100952p7b57c3f4r70058fdb7e2346ee@mail.gmail.com>
References: <bc4264770707100952p7b57c3f4r70058fdb7e2346ee@mail.gmail.com>
Message-ID: <4696333E.10108@skynet.be>


roland Tollenaar wrote:
> Hi,
>
> Is there anyone with some code examples of how the process data is
> exchanged with eml with the DO modules 2004 and DI modules 1014?
> Possibly also the 4132 Analog output (+/-10V)
>
> This would help tremendously.
>
>
>   

In this example, there's put a sine at the analog output and one digital 
output is put on and off.
First there's made a buffer. This buffer represents the logical memory 
starting from 0x0001000. (In the future we may change this, so you can 
chose yourself what the start address of this buffer is).
Since, in this example, the logical start address of the analog output 
is 0x0001000 and the length of the process data is 4 byte, the first 
four bytes of the buffer have to be filled with the output values, 2 
bytes for every output. The resolution is 16 bit (65535 steps). -10 V 
corresponds with the decimal value -32769 or 0x8001, 0 V corresponds 
with the decimal value 0 or 0x0000, +10 V corresponds with the decimal 
value +32767 or 0x7FFF.

All this information can be found in the chm files of the modules. These 
files can be found on the beckhoff website: 
http://www.beckhoff.com/english.asp?download/ethercat.htm

The last byte of the buffer is used to control the digital outputs The 
process data is 4 bit. Each bit controls a digital output. In this 
example only the one output is controlled during process.

If you want to read data from input modules (there isn't any in my 
example), you don't have to do much:
While this frame with process data is send, the input modules will write 
there data to this frame. So when the frame returns, the input data from 
the modules will be in the received frame. If you've assigned the 
logical address 0x0001000C to a digital input, the digital input can be 
found on byte 12 of the local buffer (local buffer starts at 
0x00010000). Note that you have to make sure the local buffer is big 
enough (13 bytes in this case).

Sending a buffer can be done with the txandrx function of the 
EtherCAT_Master.

I hope this helps you out a bit.

Tom
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: master_test.cpp
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070712/2cee7e82/attachment.ksh>

From tompanis at skynet.be  Thu Jul 12 16:17:02 2007
From: tompanis at skynet.be (Tom Panis)
Date: Thu, 12 Jul 2007 16:17:02 +0200
Subject: [Ethercatmaster-users] some questions about the usage of eml
In-Reply-To: <46962AAE.8000806@gmail.com>
References: <bc4264770706160243u79190decte50a9aa4c8212ae3@mail.gmail.com>		<4673DA65.1030903@skynet.be>
	<4688CDA2.5070609@gmail.com>		<468A8713.5030303@skynet.be>		<bc4264770707100949q75472f9as2992555cd4b65f85@mail.gmail.com>		<46960ACC.506@skynet.be>	<bc4264770707120431g1f95f9b6k1e36f918ee2123ab@mail.gmail.com>
	<4696253A.2060207@skynet.be> <46962AAE.8000806@gmail.com>
Message-ID: <469637DE.904@skynet.be>


Roland Tollenaar wrote:
> Hi Tom,
>
>
>>
>> The address 0x0F00 you're referring to, isn't the fixes station 
>> address, it's the physical start address. It's a memory address of 
>> the module. For the EL2004 module: data written to this address is 
>> controlling the output of the module. You never write directly to 
>> this address, you write to a logical address, in your example above: 
>> 0x0001000B. The FMMU (in combination with the Synchronisation 
>> Manager) writes this data to the memory of the module, in this case 
>> 0x0F00. The FMMU needs to know both the logical start address and the 
>> physical start address since it connects both addresses. The 
>> Synchronisation Manager makes sure that data isn't read from or 
>> written to the physical memory address (0x0F00) at the same time. As 
>> you see, the Synchronisation Manager also needs this address, so is 
>> knows which part of the memory it has to synchronise
>
> How must one know that this must be 0x0F00 and not something else? Is 
> it correct that this is the same for all modules?

I found these addresses in TwinCAT. I haven't tested if you can take 
another address. But then the problem is, that you have to make sure 
that you don't use a part of the module's memory that's already being 
used for something else. So I think it's best and safe to always take 
this address for this type of module.
This address is the same for every module of the same type (unless it's 
possible to chose this address yourself). For the EL2004 modules it's 
0x0F00, for EL1014 modules it's 0x1000.

Maybe you can test if it's possible to take another address. I can't 
test it for the moment, since I haven't got the hardware over here.

>
>
>
>>> I have also written to ETG (when I assumed you were on holiday) to try
>>> find out more about the addressing and address spaces. 
>>
>> Indeed, I was on a little holiday :-)
>>
>>> The documentation available about ethercat even for a reputable 
>>> member of
>>> the ETG such as myself, is well, sparse.
>>
>> This documentation on ETG just describes the EherCAT protocol. The 
>> documentation from the Beckhoff modules has to come from Beckhoff 
>> itself.
>> For each module, there's a little information on there website, but I 
> I will check this out.
>
>
>
>>> Finally, if I my dump all questions here, my current problem is that I
>>> cannot figure out from you examples how to read access  the EL 1014
>>> and how to write the digital outputs to the EL2004. Do you have code
>>> examples for the list showing how this is done using the EML?
>>
>> I'll explain this in your other mail
>
> Thanks,
>
>
> Roland.
>
>
>>
>>>
>>> Kind regards,
>>>
>>> (And thanks very very much for the reply without which progress I have
>>> found is slow)
>>>
>>> Roland
>>>
>>>
>>> On 7/12/07, Tom Panis <tompanis at skynet.be> wrote:
>>>>> Hi Tom,
>>>>>
>>>>> Sorry for the tremendous delay. I can only work on this in stolen 
>>>> hours.
>>>>> I have managed to improve matters a bit wrt the situation I sketched
>>>>> previously. I was forgetting to commit the configuration settings 
>>>>> with
>>>>> the call set_conf.
>>>>>
>>>>> However I did have the addressing wrong.
>>>>> I do understand I think what you are saying about the start 
>>>>> addresses.
>>>>> i am posting as i think it should be. Could you please check, confirm
>>>>> and let us know where I am getting things wrong?
>>>>>
>>>>>
>>>> Everything seems to be right. I can't find a mistake in the 
>>>> addressing.
>>>> Have you tested this configuration? Can you put these modules in
>>>> Operational State?
>>>>
>>>> Tom
>>>> _______________________________________________
>>>> Ethercatmaster-users mailing list
>>>> Ethercatmaster-users at lists.berlios.de
>>>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>>>
>> _______________________________________________
>> Ethercatmaster-users mailing list
>> Ethercatmaster-users at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>
>


From rolandtollenaar at gmail.com  Thu Jul 12 17:19:24 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Thu, 12 Jul 2007 15:19:24 +0000
Subject: [Ethercatmaster-users] interacting with 1014 and 2004
In-Reply-To: <4696333E.10108@skynet.be>
References: <bc4264770707100952p7b57c3f4r70058fdb7e2346ee@mail.gmail.com>
	<4696333E.10108@skynet.be>
Message-ID: <bc4264770707120819m2c0a7334q27146bd0f132086c@mail.gmail.com>

Hi,

I must be misunderstanding something. I have copied my modified
master_test here where I try to set the outputs. There is
communication, everything seems to be fine, but the outputs are not
coming up. At least I don;t see the leds go on.

Surely this should work?

Roland

On 7/12/07, Tom Panis <tompanis at skynet.be> wrote:
>
> roland Tollenaar wrote:
> > Hi,
> >
> > Is there anyone with some code examples of how the process data is
> > exchanged with eml with the DO modules 2004 and DI modules 1014?
> > Possibly also the 4132 Analog output (+/-10V)
> >
> > This would help tremendously.
> >
> >
> >
>
> In this example, there's put a sine at the analog output and one digital
> output is put on and off.
> First there's made a buffer. This buffer represents the logical memory
> starting from 0x0001000. (In the future we may change this, so you can
> chose yourself what the start address of this buffer is).
> Since, in this example, the logical start address of the analog output
> is 0x0001000 and the length of the process data is 4 byte, the first
> four bytes of the buffer have to be filled with the output values, 2
> bytes for every output. The resolution is 16 bit (65535 steps). -10 V
> corresponds with the decimal value -32769 or 0x8001, 0 V corresponds
> with the decimal value 0 or 0x0000, +10 V corresponds with the decimal
> value +32767 or 0x7FFF.
>
> All this information can be found in the chm files of the modules. These
> files can be found on the beckhoff website:
> http://www.beckhoff.com/english.asp?download/ethercat.htm
>
> The last byte of the buffer is used to control the digital outputs The
> process data is 4 bit. Each bit controls a digital output. In this
> example only the one output is controlled during process.
>
> If you want to read data from input modules (there isn't any in my
> example), you don't have to do much:
> While this frame with process data is send, the input modules will write
> there data to this frame. So when the frame returns, the input data from
> the modules will be in the received frame. If you've assigned the
> logical address 0x0001000C to a digital input, the digital input can be
> found on byte 12 of the local buffer (local buffer starts at
> 0x00010000). Note that you have to make sure the local buffer is big
> enough (13 bytes in this case).
>
> Sending a buffer can be done with the txandrx function of the
> EtherCAT_Master.
>
> I hope this helps you out a bit.
>
> Tom
>
> #include <native/task.h>
> #include <native/timer.h>
> #include <posix/pthread.h>
> #include <signal.h>
> #include <sys/mman.h>
> #include <math.h>
> #include <stdlib.h>
>
> #include <al/ethercat_master.h>
> #include <al/ethercat_AL.h>
> #include <al/ethercat_process_data.h>
> #include <ethercat/ethercat_xenomai_drv.h>
> #include <ethercat/netif.h>
> #include <dll/ethercat_dll.h>
> #include <dll/ethercat_frame.h>
> #include <dll/ethercat_slave_memory.h>
> #include <al/ethercat_slave_conf.h>
> #include <al/ethercat_slave_handler.h>
>
>
> struct netif *ni;
> RT_TASK ec_pd_task;
> bool stop = false;
> unsigned long sinus_freq = 1;
> unsigned long period;
>
> ///SlaveConfig EK1100
> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
> EtherCAT_PD_Config pd_config_EK1100(0);
> EtherCAT_SlaveConfig EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
>
> ///SlaveConfig EL4102
> EtherCAT_FMMU_Config fmmu_config_EL4102(2);
> EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
> EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);
>
> EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102, syncman_mbx1_EL4102};
>
> EtherCAT_PD_Config pd_config_EL4102(2);
> EC_SyncMan
>  syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan
>  syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
>
> EtherCAT_SlaveConfig EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);
>
> ///SlaveConfig EL2004
> EtherCAT_FMMU_Config fmmu_config_EL2004(1);
> EC_FMMU fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);
>
> EtherCAT_PD_Config pd_config_EL2004(1);
> EC_SyncMan syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
>
> EtherCAT_SlaveConfig EC_EL2004(0x7d43052,0x00000000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);
>
> static void init_slave_db() {
>         EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(3);
>         fmmu_config_EL4102[0] = fmmu0_EL4102;
>         fmmu_config_EL4102[1] = fmmu1_EL4102;
>         pd_config_EL4102[0] = syncman0_EL4102;
>         pd_config_EL4102[1] = syncman1_EL4102;
>         fmmu_config_EL2004[0] = fmmu0_EL2004;
>         pd_config_EL2004[0] = syncman0_EL2004;
>         slave_db->set_conf(&EC_EL4102,0);
>         slave_db->set_conf(&EC_EK1100,1);
>         slave_db->set_conf(&EC_EL2004,2);
>
>
> }
>
> static void ec_pd(void *) {
>         EtherCAT_Master *EM = EtherCAT_Master::instance();
>         unsigned char msg[5];           //Data to Send
>         int cnt = 0, cnt_dig = 0;
>         int voltage_i = 0;
>         float voltage_f = 0, time = 0;
>         long samples = 1000*1000*1000 / period / sinus_freq;
>         printf("Samples = %d\n", samples);
>         while(!stop) {
>                 if(cnt > samples)
>                         cnt = 0;
>                 time = M_PI * 2 * cnt / samples;
>                 voltage_f = (sin(time) * 5 + 5) * 32767 / 10;
>                 voltage_i = (int) voltage_f;
>                 msg[0] = voltage_i;     msg[1] = voltage_i>>8;  // analog output
>                 msg[4] = cnt_dig & 0x01;        // only the last bit: one digital output
>                 //printf("mdg[4] = %d\n",msg[4]);
>                 //printf("cnt = %d   time = %f    voltage = %f  msg[0] =0x%x     msg[1] = 0cx%x \n", cnt,time, voltage_f,msg[0], msg[1]);                                                       // Digital Output Channel 1
>                 cnt++;  cnt_dig++;
>                 rt_task_wait_period(0);
>                 EM->txandrx_PD(sizeof(msg),msg);
>         }
>
> }
>
> static void* run_master(void * arg) {
>
>         ni = init_ec((char*)arg);
>         init_slave_db();
>         if(ni != 0) {
>
>                 EtherCAT_DataLinkLayer::instance()->attach(ni);
>                 printf("Master initializing \n\n");
>                 EtherCAT_Master * EM = EtherCAT_Master::instance();
>                 printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
>                 if(sh_ek1100->to_state(EC_OP_STATE))
>                         printf("EK1100 succesfully set in OP STATE\n");
>                 else
>                         printf("\nFailed to set EK1100 in OP STATE\n");
>                 printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
>                 if(sh_el4102->to_state(EC_OP_STATE))
>                         printf("EL4102 succesfully set in OP STATE\n");
>                 else
>                         printf("\nFailed to set EL4102 in OP STATE!!\n");
>                 printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el2004 = EM->get_slave_handler(0x03eb);
>                 if(sh_el2004->to_state(EC_OP_STATE))
>                         printf("EL2004 succesfully set in OP STATE\n");
>                 else
>                         printf("\nFailed to set EL2004 in OP STATE\n");
>
>                 EtherCAT_AL * AL = EtherCAT_AL::instance();
>                 if(AL->isReady()) {
>                         period = 1000*50;
>                         rt_task_create (&ec_pd_task, "Ethercat PD", 0,1,T_JOINABLE);
>                         rt_task_set_periodic (&ec_pd_task, TM_NOW, rt_timer_ns2ticks(period));
>                         rt_task_start (&ec_pd_task, &ec_pd, 0);
>                 }
>
>                 rt_task_join(&ec_pd_task);
>                 close_socket(ni);
>         }
> }
>
> void catch_signal(int sig)
> {
>         stop = true;
> }
>
> int main(int argc, char** argv)
> {
>
>         signal(SIGTERM, catch_signal);
>         signal(SIGINT, catch_signal);
>         signal(SIGHUP, catch_signal);
>         mlockall(MCL_CURRENT|MCL_FUTURE);
>
>         if (argc < 3) {
>         printf("usage: %s <interface> <frequence>\n", argv[0]);
>         return 0;
>     }
>
>         sinus_freq = atoi(argv[2]);
>
>         pthread_t xenothread;
>         pthread_attr_t xenothread_attr;
>
>         //Set attributes of thread
>         pthread_attr_init (& xenothread_attr);
>
>         //Start thread
>         if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1]) != 0) {
>                 printf("Cannot create thread EtherCatThread.\n");
>                 exit(1);
>         }
>    pthread_join( xenothread, 0 );
>         printf("\nEnd\n");
>         return 0;
> }
>
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: master_test.cpp
Type: application/octet-stream
Size: 12095 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070712/2fb040c5/attachment.obj>

From rolandtollenaar at gmail.com  Thu Jul 12 17:28:08 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Thu, 12 Jul 2007 15:28:08 +0000
Subject: [Ethercatmaster-users] interacting with 1014 and 2004
In-Reply-To: <4696333E.10108@skynet.be>
References: <bc4264770707100952p7b57c3f4r70058fdb7e2346ee@mail.gmail.com>
	<4696333E.10108@skynet.be>
Message-ID: <bc4264770707120828x297e5764n476a14ec6754fbe1@mail.gmail.com>

> If you want to read data from input modules (there isn't any in my
> example), you don't have to do much:
> While this frame with process data is send, the input modules will write
> there data to this frame. So when the frame returns, the input data from
> the modules will be in the received frame. If you've assigned the
> logical address 0x0001000C to a digital input, the digital input can be
> found on byte 12 of the local buffer (local buffer starts at
> 0x00010000). Note that you have to make sure the local buffer is big
> enough (13 bytes in this case).

Sorry if this sounds stupid, but if we look at your example and
assuming that there were some inputs to be read, would I just read out
the msg buffer starting at the first bit of the first byte?


Roland





>
> Sending a buffer can be done with the txandrx function of the
> EtherCAT_Master.
>
> I hope this helps you out a bit.
>
> Tom
>
> #include <native/task.h>
> #include <native/timer.h>
> #include <posix/pthread.h>
> #include <signal.h>
> #include <sys/mman.h>
> #include <math.h>
> #include <stdlib.h>
>
> #include <al/ethercat_master.h>
> #include <al/ethercat_AL.h>
> #include <al/ethercat_process_data.h>
> #include <ethercat/ethercat_xenomai_drv.h>
> #include <ethercat/netif.h>
> #include <dll/ethercat_dll.h>
> #include <dll/ethercat_frame.h>
> #include <dll/ethercat_slave_memory.h>
> #include <al/ethercat_slave_conf.h>
> #include <al/ethercat_slave_handler.h>
>
>
> struct netif *ni;
> RT_TASK ec_pd_task;
> bool stop = false;
> unsigned long sinus_freq = 1;
> unsigned long period;
>
> ///SlaveConfig EK1100
> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
> EtherCAT_PD_Config pd_config_EK1100(0);
> EtherCAT_SlaveConfig EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
>
> ///SlaveConfig EL4102
> EtherCAT_FMMU_Config fmmu_config_EL4102(2);
> EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
> EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);
>
> EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102, syncman_mbx1_EL4102};
>
> EtherCAT_PD_Config pd_config_EL4102(2);
> EC_SyncMan
>  syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan
>  syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
>
> EtherCAT_SlaveConfig EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);
>
> ///SlaveConfig EL2004
> EtherCAT_FMMU_Config fmmu_config_EL2004(1);
> EC_FMMU fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);
>
> EtherCAT_PD_Config pd_config_EL2004(1);
> EC_SyncMan syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
>
> EtherCAT_SlaveConfig EC_EL2004(0x7d43052,0x00000000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);
>
> static void init_slave_db() {
>         EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(3);
>         fmmu_config_EL4102[0] = fmmu0_EL4102;
>         fmmu_config_EL4102[1] = fmmu1_EL4102;
>         pd_config_EL4102[0] = syncman0_EL4102;
>         pd_config_EL4102[1] = syncman1_EL4102;
>         fmmu_config_EL2004[0] = fmmu0_EL2004;
>         pd_config_EL2004[0] = syncman0_EL2004;
>         slave_db->set_conf(&EC_EL4102,0);
>         slave_db->set_conf(&EC_EK1100,1);
>         slave_db->set_conf(&EC_EL2004,2);
>
>
> }
>
> static void ec_pd(void *) {
>         EtherCAT_Master *EM = EtherCAT_Master::instance();
>         unsigned char msg[5];           //Data to Send
>         int cnt = 0, cnt_dig = 0;
>         int voltage_i = 0;
>         float voltage_f = 0, time = 0;
>         long samples = 1000*1000*1000 / period / sinus_freq;
>         printf("Samples = %d\n", samples);
>         while(!stop) {
>                 if(cnt > samples)
>                         cnt = 0;
>                 time = M_PI * 2 * cnt / samples;
>                 voltage_f = (sin(time) * 5 + 5) * 32767 / 10;
>                 voltage_i = (int) voltage_f;
>                 msg[0] = voltage_i;     msg[1] = voltage_i>>8;  // analog output
>                 msg[4] = cnt_dig & 0x01;        // only the last bit: one digital output
>                 //printf("mdg[4] = %d\n",msg[4]);
>                 //printf("cnt = %d   time = %f    voltage = %f  msg[0] =0x%x     msg[1] = 0cx%x \n", cnt,time, voltage_f,msg[0], msg[1]);                                                       // Digital Output Channel 1
>                 cnt++;  cnt_dig++;
>                 rt_task_wait_period(0);
>                 EM->txandrx_PD(sizeof(msg),msg);
>         }
>
> }
>
> static void* run_master(void * arg) {
>
>         ni = init_ec((char*)arg);
>         init_slave_db();
>         if(ni != 0) {
>
>                 EtherCAT_DataLinkLayer::instance()->attach(ni);
>                 printf("Master initializing \n\n");
>                 EtherCAT_Master * EM = EtherCAT_Master::instance();
>                 printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
>                 if(sh_ek1100->to_state(EC_OP_STATE))
>                         printf("EK1100 succesfully set in OP STATE\n");
>                 else
>                         printf("\nFailed to set EK1100 in OP STATE\n");
>                 printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
>                 if(sh_el4102->to_state(EC_OP_STATE))
>                         printf("EL4102 succesfully set in OP STATE\n");
>                 else
>                         printf("\nFailed to set EL4102 in OP STATE!!\n");
>                 printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el2004 = EM->get_slave_handler(0x03eb);
>                 if(sh_el2004->to_state(EC_OP_STATE))
>                         printf("EL2004 succesfully set in OP STATE\n");
>                 else
>                         printf("\nFailed to set EL2004 in OP STATE\n");
>
>                 EtherCAT_AL * AL = EtherCAT_AL::instance();
>                 if(AL->isReady()) {
>                         period = 1000*50;
>                         rt_task_create (&ec_pd_task, "Ethercat PD", 0,1,T_JOINABLE);
>                         rt_task_set_periodic (&ec_pd_task, TM_NOW, rt_timer_ns2ticks(period));
>                         rt_task_start (&ec_pd_task, &ec_pd, 0);
>                 }
>
>                 rt_task_join(&ec_pd_task);
>                 close_socket(ni);
>         }
> }
>
> void catch_signal(int sig)
> {
>         stop = true;
> }
>
> int main(int argc, char** argv)
> {
>
>         signal(SIGTERM, catch_signal);
>         signal(SIGINT, catch_signal);
>         signal(SIGHUP, catch_signal);
>         mlockall(MCL_CURRENT|MCL_FUTURE);
>
>         if (argc < 3) {
>         printf("usage: %s <interface> <frequence>\n", argv[0]);
>         return 0;
>     }
>
>         sinus_freq = atoi(argv[2]);
>
>         pthread_t xenothread;
>         pthread_attr_t xenothread_attr;
>
>         //Set attributes of thread
>         pthread_attr_init (& xenothread_attr);
>
>         //Start thread
>         if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1]) != 0) {
>                 printf("Cannot create thread EtherCatThread.\n");
>                 exit(1);
>         }
>    pthread_join( xenothread, 0 );
>         printf("\nEnd\n");
>         return 0;
> }
>
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>
>


From rolandtollenaar at gmail.com  Thu Jul 12 19:13:40 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Thu, 12 Jul 2007 17:13:40 +0000
Subject: [Ethercatmaster-users] order of consequence?
Message-ID: <bc4264770707121013g1622d78n44e8c9c88c0706ab@mail.gmail.com>

Hi,

Once more with regard tot he outputs which refuse to respond. There is
one slave which is not configured and which leave in non operational
state. This is the 4132 (analog outputs) because I have no idea how to
configure it. The 4102 in Tom's example uses mailboxes and all that so
I thought it is best to leave it out until the rest is running.

However it IS physically connected. Is it possible that this is
causing the outputs not to respond? But if so, why would the
configuraion be successful and it be possible to set all the other
slaves in the operational state?

Does the physical order in which the modules are placed on the rack
make any difference?

Regards,

Roland


From rolandtollenaar at gmail.com  Fri Jul 13 12:09:29 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Fri, 13 Jul 2007 10:09:29 +0000
Subject: [Ethercatmaster-users] BeckHoff EL 4132 configuration parameters.
Message-ID: <bc4264770707130309i4b2dd5b4v4e6bca26819442ad@mail.gmail.com>

Hi,

I have managed to configure for the EL4132, the master_test code is
posted here for anyone who wants to know the parameters for this
module and does not have twincat to find them either.

Regards,

Roland.

///SlaveConfig EK1100 [Bus Coupler]
EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig
EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL2004(1) [Digital Output]
//[A slave configuration consists of a fmmu-config, a process data
(pd) config and optionally a mailbox config]
//fmmu (fieldbus memory management unit) config container (handle?)
EtherCAT_FMMU_Config fmmu_config_EL2004_1(1);//arg=number of FMMU's.
Some modules take more than one if e.g. they have in and outputs.
//not sure what this is doing (Seems to be actual fmmu config which
gets linked to the handle created above)
EC_FMMU fmmu0_EL2004_1(0x0001000A,1,0,3,0x0F00,0,false,true,true);
//logical start address, # bytes used, start bit, end bit, physical
address, physical start bit, read-enable, write-enable,
activate-module
//process data config (Again seems to be a handle)
EtherCAT_PD_Config pd_config_EL2004_1(1); //argument=length
//synchronisation manager
EC_SyncMan syncman0_EL2004_1(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
//compile the slave configuration
EtherCAT_SlaveConfig
EC_EL2004_1(0x7d43052,0x100000,0x03ec,&fmmu_config_EL2004_1,&pd_config_EL2004_1);
//product code, revision number, physical address, FMMU-configuration
instance, process data configuration instance, [optional mailbox
configutation]

///SlaveConfig EL2004(2) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_2(1);
EC_FMMU fmmu0_EL2004_2(0x0001000A,1,4,7,0x03ed,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_2(1);
EC_SyncMan syncman0_EL2004_2(0x03ed,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_2(0x7d43052,0x100000,0x03ed,&fmmu_config_EL2004_2,&pd_config_EL2004_2);

///SlaveConfig EL2004(3) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_3(1);
EC_FMMU fmmu0_EL2004_3(0x0001000B,1,0,3,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_3(1);
EC_SyncMan syncman0_EL2004_3(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_3(0x7d43052,0x100000,0x03ee,&fmmu_config_EL2004_3,&pd_config_EL2004_3);

///SlaveConfig EL2004(4) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_4(1);
EC_FMMU fmmu0_EL2004_4(0x0001000B,1,4,7,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_4(1);
EC_SyncMan syncman0_EL2004_4(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_4(0x7d43052,0x100000,0x03ef,&fmmu_config_EL2004_4,&pd_config_EL2004_4);


///SlaveConfig EL1014(1) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_1(1);
EC_FMMU fmmu0_EL1014_1(0x0001000C,1,0,3,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_1(1);
EC_SyncMan syncman0_EL1014_1(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_1(0x03F63052,0x100000,0x03f0,&fmmu_config_EL1014_1,
&pd_config_EL1014_1);

///SlaveConfig EL1014(2) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_2(1);
EC_FMMU fmmu0_EL1014_2(0x0001000C,1,4,7,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_2(1);
EC_SyncMan syncman0_EL1014_2(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_2(0x03F63052,0x100000,0x03f1,&fmmu_config_EL1014_2,
&pd_config_EL1014_2);

///SlaveConfig EL1014(3) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_3(1);
EC_FMMU fmmu0_EL1014_3(0x0001000D,1,0,3,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_3(1);
EC_SyncMan syncman0_EL1014_3(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_3(0x03F63052,0x100000,0x03f2,&fmmu_config_EL1014_3,
&pd_config_EL1014_3);

///SlaveConfig EL1014(4) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_4(1);
EC_FMMU fmmu0_EL1014_4(0x0001000D,1,4,7,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_4(1);
EC_SyncMan syncman0_EL1014_4(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_4(0x03F63052,0x100000,0x03f3,&fmmu_config_EL1014_4,
&pd_config_EL1014_4);


///SlaveConfig EL4132
EtherCAT_FMMU_Config fmmu_config_EL4132(2);
EC_FMMU fmmu0_EL4132(0x00080000,1,0,0,0x080D,0x00,true,false,true);
EC_FMMU fmmu1_EL4132(0x00010003,4,0,7,0x1000,0x00,false,true,true);

EC_SyncMan syncman_mbx0_EL4132(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman_mbx1_EL4132(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_MbxConfig mbx_conf_EL4132 = {syncman_mbx0_EL4132, syncman_mbx1_EL4132};

EtherCAT_PD_Config pd_config_EL4132(2);
EC_SyncMan syncman0_EL4132(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman1_EL4132(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);

EtherCAT_SlaveConfig
EC_EL4132(0x10243052,0x00,0x03f4,&fmmu_config_EL4132,&pd_config_EL4132,&mbx_conf_EL4132);




static void init_slave_db() {
	///create slave database	
	EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(10);
//argument=#slaves

	//EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(2);
	//fmmu_config_EL4102[0] = fmmu0_EL4102;
	//fmmu_config_EL4102[1] = fmmu1_EL4102;
	//pd_config_EL4102[0] = syncman0_EL4102;
	//pd_config_EL4102[1] = syncman1_EL4102;

	///Connect actual fmmu and process data config to respective handles
for EL 2004 (DO)
	fmmu_config_EL2004_1[0] = fmmu0_EL2004_1;
	fmmu_config_EL2004_2[0] = fmmu0_EL2004_2;
	fmmu_config_EL2004_3[0] = fmmu0_EL2004_3;
	fmmu_config_EL2004_4[0] = fmmu0_EL2004_4;
	pd_config_EL2004_1[0]   = syncman0_EL2004_1;
	pd_config_EL2004_2[0]   = syncman0_EL2004_2;
	pd_config_EL2004_3[0]   = syncman0_EL2004_3;
	pd_config_EL2004_4[0]   = syncman0_EL2004_4;
	
	///Connect actual fmmu and process data config to respective handles
for EL 1014 (DI)
	fmmu_config_EL1014_1[0] =fmmu0_EL1014_1;
	fmmu_config_EL1014_2[0] =fmmu0_EL1014_2;
	fmmu_config_EL1014_3[0] =fmmu0_EL1014_3;
	fmmu_config_EL1014_4[0] =fmmu0_EL1014_4;
	pd_config_EL1014_1[0]   =syncman0_EL1014_1;
	pd_config_EL1014_2[0]   =syncman0_EL1014_2;
	pd_config_EL1014_3[0]   =syncman0_EL1014_3;
	pd_config_EL1014_4[0]   =syncman0_EL1014_4;

	///Connect actual config to fmmu and processdata config handle for
EL4132 (analog output modules)
	fmmu_config_EL4132[0] = fmmu0_EL4132;
	fmmu_config_EL4132[1] = fmmu1_EL4132;
	pd_config_EL4132[0]   = syncman0_EL4132;
	pd_config_EL4132[1]   = syncman1_EL4132;	

	//slave_db->set_conf(&EC_EL4102,0);

	///Commit the slave config objects to the slave database
	slave_db->set_conf(&EC_EK1100,0);
	slave_db->set_conf(&EC_EL2004_1,1);
	slave_db->set_conf(&EC_EL2004_2,2);
	slave_db->set_conf(&EC_EL2004_3,3);
	slave_db->set_conf(&EC_EL2004_4,4);
	slave_db->set_conf(&EC_EL1014_1,5);
	slave_db->set_conf(&EC_EL1014_2,6);
	slave_db->set_conf(&EC_EL1014_3,7);
	slave_db->set_conf(&EC_EL1014_4,8);
	slave_db->set_conf(&EC_EL4132,9);
	
}


From harti_said at yahoo.fr  Fri Jul 13 14:24:45 2007
From: harti_said at yahoo.fr (said harti)
Date: Fri, 13 Jul 2007 14:24:45 +0200 (CEST)
Subject: [Ethercatmaster-users] Slaves parameters !!
Message-ID: <285844.40209.qm@web37302.mail.mud.yahoo.com>


Hi,

I try to set some data on the EL4102 (5V for example) and the EL2004 modules (set to 0xFF), my master_test code modification is
posted here, the program turn without problem, but i don't see LEDs modules switch on,

Can you please explain me the problem ?

i have compared all parameters for this
modules with the twincat tools, and there is no difference.


#include <posix/pthread.h>
#include <signal.h>
#include <sys/mman.h>

#include <al/ethercat_master.h>
#include <al/ethercat_AL.h>
#include <al/ethercat_process_data.h>
#include <ethercat/ethercat_xenomai_drv.h>
#include <ethercat/netif.h>
#include <dll/ethercat_dll.h>
#include <dll/ethercat_frame.h>
#include <dll/ethercat_slave_memory.h>
#include <al/ethercat_slave_conf.h>
#include <al/ethercat_slave_handler.h>

struct netif *ni;

///SlaveConfig EK1100
EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL4102

///[A slave configuration consists of a fmmu-config, a process data (pd) config and optionally a mailbox config]

EtherCAT_FMMU_Config fmmu_config_EL4102(2);///arg=number of FMMU's.Some modules take more than one if e.g. they have in and outputs.
///not sure what this is doing (Seems to be actual fmmu config which gets linked to the handle created above)
///fmmu (fieldbus memory management unit) config container (handle?)

///logical start address, # bytes used, start bit, end bit, physical address, physical start bit, read-enable, write-enable, activate-module

EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);

EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102, syncman_mbx1_EL4102};

///process data config (Again seems to be a handle)

EtherCAT_PD_Config pd_config_EL4102(2);///argument=length
EC_SyncMan syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);

///compile the slave configuration

EtherCAT_SlaveConfig EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);

///Modif
///SlaveConfig EL2004
EtherCAT_FMMU_Config fmmu_config_EL2004(1);
EC_FMMU
fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);

EtherCAT_PD_Config pd_config_EL2004(1);
EC_SyncMan syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig EC_EL2004(0x7d43052,0x00100000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);
///Fin Modif
static void init_slave_db() {

///create slave database

         EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(3); ///argument=#slaves

///Connect actual fmmu and process data config to respective handlesfor EL 4102 (AO)

         fmmu_config_EL4102[0] = fmmu0_EL4102;
         fmmu_config_EL4102[1] = fmmu1_EL4102;
         pd_config_EL4102[0] = syncman0_EL4102;
         pd_config_EL4102[1] = syncman1_EL4102;

///Connect actual fmmu and process data config to respective handles for EL 2004 (DO)

         fmmu_config_EL2004[0] = fmmu0_EL2004;///
         pd_config_EL2004[0] = syncman0_EL2004;///

///Commit the slave config objects to the slave database

     slave_db->set_conf(&EC_EK1100,0);
         slave_db->set_conf(&EC_EL4102,1);
         //slave_db->set_conf(&EC_EK1100,1);

///Commit the slave config objects to the slave database

         slave_db->set_conf(&EC_EL2004,2);///


 }

static void* run_master(void * arg) {
    
    ni = init_ec((char*)arg);
    init_slave_db();
    if(ni != 0) {
        printf("Attach netif \n\n");
        EtherCAT_DataLinkLayer::instance()->attach(ni);
        printf("Master initializing \n\n");
        EtherCAT_Master * EM = EtherCAT_Master::instance();
        printf("Getting slave handler\n");
        EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
        //sleep(1);
        printf("Setting EK1100 to OP STATE\n");
        if(sh_ek1100->to_state(EC_OP_STATE))
            printf("EK1100 succesfully set in OP STATE\n");
        else
            printf("\nfailed to set EK1100 in OP STATE\n");
        printf("Getting slave handler\n");
        EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
        printf("Setting EL4102 to OP STATE\n");
        if(sh_el4102->to_state(EC_OP_STATE))
            printf("EL4102 succesfully set in OP STATE\n");
        else
            printf("\nfailed to set EL4102 in OP STATE!!\n");
        
///Modif
           printf("Getting slave handler\n");
                EtherCAT_SlaveHandler * sh_el2004 = EM->get_slave_handler(0x03eb);
        printf("Setting EL2004 to OP STATE\n");
                 if(sh_el2004->to_state(EC_OP_STATE))
                         printf("EL2004 succesfully set in OP STATE\n");
                 else
                         printf("\nFailed to set EL2004 in OP STATE\n");
///fin Modif
        printf("AL initializing \n\n");
        EtherCAT_AL * AL = EtherCAT_AL::instance();
        
        ///Set Channel 1 to 5V
        unsigned char msg[3] = {0xff, 0x3f, 0xff};///
        if(AL->isReady()) {

            printf("Test: Set Channel 1 to 5V: \n\n");
            printf("Test: set the EL2004 to 1: \n\n");///

            int count = 0;
            while(count<100000) {
                EM->txandrx_PD(sizeof(msg),msg);
                count++;
            }
            printf("Test done.\n");
        }
        
        close_socket(ni);
        
    }
}

void catch_signal(int sig)
{
   if(ni != 0)
        close_socket(ni);
    exit(1);
}

int main(int argc, char** argv)
{

    signal(SIGTERM, catch_signal);
   signal(SIGINT, catch_signal);
   signal(SIGHUP, catch_signal);
    mlockall(MCL_CURRENT|MCL_FUTURE);

    if (argc < 2) {
        printf("usage: %s <interface>\n", argv[0]);
        return 0;
    }

    pthread_t xenothread;
    pthread_attr_t xenothread_attr;

    //Set attributes of thread
    pthread_attr_init (& xenothread_attr);

    //Start thread
    if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1]) != 0) {
        printf("Cannot create thread EtherCatThread.\n");
        exit(1);
    }
   pthread_join( xenothread, 0 );
    return 0;
}


Best Regards

Said


 	      
---------------------------------
 Ne gardez plus qu'une seule adresse mail ! Copiez vos mails vers Yahoo! Mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070713/a215c742/attachment.html>

From rwatollenaar at gmail.com  Fri Jul 13 14:32:28 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Fri, 13 Jul 2007 14:32:28 +0200
Subject: [Ethercatmaster-users] Slaves parameters !!
In-Reply-To: <285844.40209.qm@web37302.mail.mud.yahoo.com>
References: <285844.40209.qm@web37302.mail.mud.yahoo.com>
Message-ID: <469770DC.7090502@gmail.com>

Hi,

I have exactly, to the comma, the same problem!!

I am afraid that the people who can comment on this seem to be out of 
office today.

Roland

said harti wrote:
> 
> Hi,
> 
> I try to set some data on the EL4102 (5V for example) and the EL2004 
> modules (set to 0xFF), my master_test code modification is
> posted here, the program turn without problem, but i don't see LEDs 
> modules switch on,
> 
> Can you please explain me the problem ?
> 
> i have compared all parameters for this
> modules with the twincat tools, and there is no difference.
> 
> 
> #include <posix/pthread.h>
> #include <signal.h>
> #include <sys/mman.h>
> 
> #include <al/ethercat_master.h>
> #include <al/ethercat_AL.h>
> #include <al/ethercat_process_data.h>
> #include <ethercat/ethercat_xenomai_drv.h>
> #include <ethercat/netif.h>
> #include <dll/ethercat_dll.h>
> #include <dll/ethercat_frame.h>
> #include <dll/ethercat_slave_memory.h>
> #include <al/ethercat_slave_conf.h>
> #include <al/ethercat_slave_handler.h>
> 
> struct netif *ni;
> 
> ///SlaveConfig EK1100
> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
> EtherCAT_PD_Config pd_config_EK1100(0);
> EtherCAT_SlaveConfig 
> EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
> 
> ///SlaveConfig EL4102
> 
> ///[A slave configuration consists of a fmmu-config, a process data (pd) 
> config and optionally a mailbox config]
> 
> EtherCAT_FMMU_Config fmmu_config_EL4102(2);///arg=number of FMMU's.Some 
> modules take more than one if e.g. they have in and outputs.
> ///not sure what this is doing (Seems to be actual fmmu config which 
> gets linked to the handle created above)
> ///fmmu (fieldbus memory management unit) config container (handle?)
> 
> ///logical start address, # bytes used, start bit, end bit, physical 
> address, physical start bit, read-enable, write-enable, activate-module
> 
> EC_FMMU 
> fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
> EC_FMMU 
> fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);
> 
> EC_SyncMan 
> syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102, 
> syncman_mbx1_EL4102};
> 
> ///process data config (Again seems to be a handle)
> 
> EtherCAT_PD_Config pd_config_EL4102(2);///argument=length
> EC_SyncMan 
> syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> ///compile the slave configuration
> 
> EtherCAT_SlaveConfig 
> EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);
> 
> ///Modif
> ///SlaveConfig EL2004
> EtherCAT_FMMU_Config fmmu_config_EL2004(1);
> EC_FMMU
> fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);
> 
> EtherCAT_PD_Config pd_config_EL2004(1);
> EC_SyncMan 
> syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig 
> EC_EL2004(0x7d43052,0x00100000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);
> ///Fin Modif
> static void init_slave_db() {
> 
> ///create slave database
> 
>          EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(3); 
> ///argument=#slaves
> 
> ///Connect actual fmmu and process data config to respective handlesfor 
> EL 4102 (AO)
> 
>          fmmu_config_EL4102[0] = fmmu0_EL4102;
>          fmmu_config_EL4102[1] = fmmu1_EL4102;
>          pd_config_EL4102[0] = syncman0_EL4102;
>          pd_config_EL4102[1] = syncman1_EL4102;
> 
> ///Connect actual fmmu and process data config to respective handles for 
> EL 2004 (DO)
> 
>          fmmu_config_EL2004[0] = fmmu0_EL2004;///
>          pd_config_EL2004[0] = syncman0_EL2004;///
> 
> ///Commit the slave config objects to the slave database
> 
>      slave_db->set_conf(&EC_EK1100,0);
>          slave_db->set_conf(&EC_EL4102,1);
>          //slave_db->set_conf(&EC_EK1100,1);
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL2004,2);///
> 
> 
>  }
> 
> static void* run_master(void * arg) {
>     
>     ni = init_ec((char*)arg);
>     init_slave_db();
>     if(ni != 0) {
>         printf("Attach netif \n\n");
>         EtherCAT_DataLinkLayer::instance()->attach(ni);
>         printf("Master initializing \n\n");
>         EtherCAT_Master * EM = EtherCAT_Master::instance();
>         printf("Getting slave handler\n");
>         EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
>         //sleep(1);
>         printf("Setting EK1100 to OP STATE\n");
>         if(sh_ek1100->to_state(EC_OP_STATE))
>             printf("EK1100 succesfully set in OP STATE\n");
>         else
>             printf("\nfailed to set EK1100 in OP STATE\n");
>         printf("Getting slave handler\n");
>         EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
>         printf("Setting EL4102 to OP STATE\n");
>         if(sh_el4102->to_state(EC_OP_STATE))
>             printf("EL4102 succesfully set in OP STATE\n");
>         else
>             printf("\nfailed to set EL4102 in OP STATE!!\n");
>         
> ///Modif
>            printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el2004 = 
> EM->get_slave_handler(0x03eb);
>         printf("Setting EL2004 to OP STATE\n");
>                  if(sh_el2004->to_state(EC_OP_STATE))
>                          printf("EL2004 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL2004 in OP STATE\n");
> ///fin Modif
>         printf("AL initializing \n\n");
>         EtherCAT_AL * AL = EtherCAT_AL::instance();
>         
>         ///Set Channel 1 to 5V
>         unsigned char msg[3] = {0xff, 0x3f, 0xff};///
>         if(AL->isReady()) {
> 
>             printf("Test: Set Channel 1 to 5V: \n\n");
>             printf("Test: set the EL2004 to 1: \n\n");///
> 
>             int count = 0;
>             while(count<100000) {
>                 EM->txandrx_PD(sizeof(msg),msg);
>                 count++;
>             }
>             printf("Test done.\n");
>         }
>         
>         close_socket(ni);
>         
>     }
> }
> 
> void catch_signal(int sig)
> {
>    if(ni != 0)
>         close_socket(ni);
>     exit(1);
> }
> 
> int main(int argc, char** argv)
> {
> 
>     signal(SIGTERM, catch_signal);
>    signal(SIGINT, catch_signal);
>    signal(SIGHUP, catch_signal);
>     mlockall(MCL_CURRENT|MCL_FUTURE);
> 
>     if (argc < 2) {
>         printf("usage: %s <interface>\n", argv[0]);
>         return 0;
>     }
> 
>     pthread_t xenothread;
>     pthread_attr_t xenothread_attr;
> 
>     //Set attributes of thread
>     pthread_attr_init (& xenothread_attr);
> 
>     //Start thread
>     if(pthread_create(&xenothread, &xenothread_attr, run_master, 
> argv[1]) != 0) {
>         printf("Cannot create thread EtherCatThread.\n");
>         exit(1);
>     }
>    pthread_join( xenothread, 0 );
>     return 0;
> }
> 
> 
> Best Regards
> 
> Said
> 
> ------------------------------------------------------------------------
> Ne gardez plus qu'une seule adresse mail ! Copiez vos mails 
> <http://www.trueswitch.com/yahoo-fr/> vers Yahoo! Mail
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users


From sancelot at free.fr  Fri Jul 13 17:14:40 2007
From: sancelot at free.fr (=?ISO-8859-1?Q?St=E9phane_ANCELOT?=)
Date: Fri, 13 Jul 2007 15:14:40 +0000
Subject: [Ethercatmaster-users] BeckHoff EL 4132 configuration
	parameters.
In-Reply-To: <bc4264770707130309i4b2dd5b4v4e6bca26819442ad@mail.gmail.com>
References: <bc4264770707130309i4b2dd5b4v4e6bca26819442ad@mail.gmail.com>
Message-ID: <469796E0.1000406@free.fr>

have you t'ried a network analyzer like ethereal to compare twincat
output and your master output ?
roland Tollenaar a ?crit :
> Hi,
> 
> I have managed to configure for the EL4132, the master_test code is
> posted here for anyone who wants to know the parameters for this
> module and does not have twincat to find them either.
> 
> Regards,
> 
> Roland.
> 
> ///SlaveConfig EK1100 [Bus Coupler]
> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
> EtherCAT_PD_Config pd_config_EK1100(0);
> EtherCAT_SlaveConfig
> EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
> 
> ///SlaveConfig EL2004(1) [Digital Output]
> //[A slave configuration consists of a fmmu-config, a process data
> (pd) config and optionally a mailbox config]
> //fmmu (fieldbus memory management unit) config container (handle?)
> EtherCAT_FMMU_Config fmmu_config_EL2004_1(1);//arg=number of FMMU's.
> Some modules take more than one if e.g. they have in and outputs.
> //not sure what this is doing (Seems to be actual fmmu config which
> gets linked to the handle created above)
> EC_FMMU fmmu0_EL2004_1(0x0001000A,1,0,3,0x0F00,0,false,true,true);
> //logical start address, # bytes used, start bit, end bit, physical
> address, physical start bit, read-enable, write-enable,
> activate-module
> //process data config (Again seems to be a handle)
> EtherCAT_PD_Config pd_config_EL2004_1(1); //argument=length
> //synchronisation manager
> EC_SyncMan syncman0_EL2004_1(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> //compile the slave configuration
> EtherCAT_SlaveConfig
> EC_EL2004_1(0x7d43052,0x100000,0x03ec,&fmmu_config_EL2004_1,&pd_config_EL2004_1);
> //product code, revision number, physical address, FMMU-configuration
> instance, process data configuration instance, [optional mailbox
> configutation]
> 
> ///SlaveConfig EL2004(2) [Digital Output]
> EtherCAT_FMMU_Config fmmu_config_EL2004_2(1);
> EC_FMMU fmmu0_EL2004_2(0x0001000A,1,4,7,0x03ed,0,false,true,true);
> EtherCAT_PD_Config pd_config_EL2004_2(1);
> EC_SyncMan syncman0_EL2004_2(0x03ed,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig
> EC_EL2004_2(0x7d43052,0x100000,0x03ed,&fmmu_config_EL2004_2,&pd_config_EL2004_2);
> 
> ///SlaveConfig EL2004(3) [Digital Output]
> EtherCAT_FMMU_Config fmmu_config_EL2004_3(1);
> EC_FMMU fmmu0_EL2004_3(0x0001000B,1,0,3,0x0F00,0,false,true,true);
> EtherCAT_PD_Config pd_config_EL2004_3(1);
> EC_SyncMan syncman0_EL2004_3(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig
> EC_EL2004_3(0x7d43052,0x100000,0x03ee,&fmmu_config_EL2004_3,&pd_config_EL2004_3);
> 
> ///SlaveConfig EL2004(4) [Digital Output]
> EtherCAT_FMMU_Config fmmu_config_EL2004_4(1);
> EC_FMMU fmmu0_EL2004_4(0x0001000B,1,4,7,0x0F00,0,false,true,true);
> EtherCAT_PD_Config pd_config_EL2004_4(1);
> EC_SyncMan syncman0_EL2004_4(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig
> EC_EL2004_4(0x7d43052,0x100000,0x03ef,&fmmu_config_EL2004_4,&pd_config_EL2004_4);
> 
> 
> ///SlaveConfig EL1014(1) [Digital Input]
> EtherCAT_FMMU_Config fmmu_config_EL1014_1(1);
> EC_FMMU fmmu0_EL1014_1(0x0001000C,1,0,3,0x1000,0,true,false,true);
> EtherCAT_PD_Config pd_config_EL1014_1(1);
> EC_SyncMan syncman0_EL1014_1(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig
> EC_EL1014_1(0x03F63052,0x100000,0x03f0,&fmmu_config_EL1014_1,
> &pd_config_EL1014_1);
> 
> ///SlaveConfig EL1014(2) [Digital Input]
> EtherCAT_FMMU_Config fmmu_config_EL1014_2(1);
> EC_FMMU fmmu0_EL1014_2(0x0001000C,1,4,7,0x1000,0,true,false,true);
> EtherCAT_PD_Config pd_config_EL1014_2(1);
> EC_SyncMan syncman0_EL1014_2(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig
> EC_EL1014_2(0x03F63052,0x100000,0x03f1,&fmmu_config_EL1014_2,
> &pd_config_EL1014_2);
> 
> ///SlaveConfig EL1014(3) [Digital Input]
> EtherCAT_FMMU_Config fmmu_config_EL1014_3(1);
> EC_FMMU fmmu0_EL1014_3(0x0001000D,1,0,3,0x1000,0,true,false,true);
> EtherCAT_PD_Config pd_config_EL1014_3(1);
> EC_SyncMan syncman0_EL1014_3(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig
> EC_EL1014_3(0x03F63052,0x100000,0x03f2,&fmmu_config_EL1014_3,
> &pd_config_EL1014_3);
> 
> ///SlaveConfig EL1014(4) [Digital Input]
> EtherCAT_FMMU_Config fmmu_config_EL1014_4(1);
> EC_FMMU fmmu0_EL1014_4(0x0001000D,1,4,7,0x1000,0,true,false,true);
> EtherCAT_PD_Config pd_config_EL1014_4(1);
> EC_SyncMan syncman0_EL1014_4(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig
> EC_EL1014_4(0x03F63052,0x100000,0x03f3,&fmmu_config_EL1014_4,
> &pd_config_EL1014_4);
> 
> 
> ///SlaveConfig EL4132
> EtherCAT_FMMU_Config fmmu_config_EL4132(2);
> EC_FMMU fmmu0_EL4132(0x00080000,1,0,0,0x080D,0x00,true,false,true);
> EC_FMMU fmmu1_EL4132(0x00010003,4,0,7,0x1000,0x00,false,true,true);
> 
> EC_SyncMan syncman_mbx0_EL4132(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan syncman_mbx1_EL4132(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_MbxConfig mbx_conf_EL4132 = {syncman_mbx0_EL4132, syncman_mbx1_EL4132};
> 
> EtherCAT_PD_Config pd_config_EL4132(2);
> EC_SyncMan syncman0_EL4132(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan syncman1_EL4132(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig
> EC_EL4132(0x10243052,0x00,0x03f4,&fmmu_config_EL4132,&pd_config_EL4132,&mbx_conf_EL4132);
> 
> 
> 
> 
> static void init_slave_db() {
> 	///create slave database	
> 	EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(10);
> //argument=#slaves
> 
> 	//EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(2);
> 	//fmmu_config_EL4102[0] = fmmu0_EL4102;
> 	//fmmu_config_EL4102[1] = fmmu1_EL4102;
> 	//pd_config_EL4102[0] = syncman0_EL4102;
> 	//pd_config_EL4102[1] = syncman1_EL4102;
> 
> 	///Connect actual fmmu and process data config to respective handles
> for EL 2004 (DO)
> 	fmmu_config_EL2004_1[0] = fmmu0_EL2004_1;
> 	fmmu_config_EL2004_2[0] = fmmu0_EL2004_2;
> 	fmmu_config_EL2004_3[0] = fmmu0_EL2004_3;
> 	fmmu_config_EL2004_4[0] = fmmu0_EL2004_4;
> 	pd_config_EL2004_1[0]   = syncman0_EL2004_1;
> 	pd_config_EL2004_2[0]   = syncman0_EL2004_2;
> 	pd_config_EL2004_3[0]   = syncman0_EL2004_3;
> 	pd_config_EL2004_4[0]   = syncman0_EL2004_4;
> 	
> 	///Connect actual fmmu and process data config to respective handles
> for EL 1014 (DI)
> 	fmmu_config_EL1014_1[0] =fmmu0_EL1014_1;
> 	fmmu_config_EL1014_2[0] =fmmu0_EL1014_2;
> 	fmmu_config_EL1014_3[0] =fmmu0_EL1014_3;
> 	fmmu_config_EL1014_4[0] =fmmu0_EL1014_4;
> 	pd_config_EL1014_1[0]   =syncman0_EL1014_1;
> 	pd_config_EL1014_2[0]   =syncman0_EL1014_2;
> 	pd_config_EL1014_3[0]   =syncman0_EL1014_3;
> 	pd_config_EL1014_4[0]   =syncman0_EL1014_4;
> 
> 	///Connect actual config to fmmu and processdata config handle for
> EL4132 (analog output modules)
> 	fmmu_config_EL4132[0] = fmmu0_EL4132;
> 	fmmu_config_EL4132[1] = fmmu1_EL4132;
> 	pd_config_EL4132[0]   = syncman0_EL4132;
> 	pd_config_EL4132[1]   = syncman1_EL4132;	
> 
> 	//slave_db->set_conf(&EC_EL4102,0);
> 
> 	///Commit the slave config objects to the slave database
> 	slave_db->set_conf(&EC_EK1100,0);
> 	slave_db->set_conf(&EC_EL2004_1,1);
> 	slave_db->set_conf(&EC_EL2004_2,2);
> 	slave_db->set_conf(&EC_EL2004_3,3);
> 	slave_db->set_conf(&EC_EL2004_4,4);
> 	slave_db->set_conf(&EC_EL1014_1,5);
> 	slave_db->set_conf(&EC_EL1014_2,6);
> 	slave_db->set_conf(&EC_EL1014_3,7);
> 	slave_db->set_conf(&EC_EL1014_4,8);
> 	slave_db->set_conf(&EC_EL4132,9);
> 	
> }
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 
> 



From rwatollenaar at gmail.com  Fri Jul 13 15:26:41 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Fri, 13 Jul 2007 15:26:41 +0200
Subject: [Ethercatmaster-users] BeckHoff EL 4132 configuration
	parameters.
In-Reply-To: <469796E0.1000406@free.fr>
References: <bc4264770707130309i4b2dd5b4v4e6bca26819442ad@mail.gmail.com>
	<469796E0.1000406@free.fr>
Message-ID: <46977D91.8040107@gmail.com>

Hi Steph,

I don;t have TwinCat at all. So I have nothing to compare with. Problem 
is that I don't have a machine to install TwinCat on and I don;t want to 
use my working labtop due to the fact that TwinCat installs its RT stuff 
I cannot risk that.

Thanks for the suggestion though because the fact that my outputs will 
not respond is causing me a big headache. I just cannot see what I might 
be doing wrong.

I suppose my text was a bit misleading. I obtained the parameters 
without using TwinCat. ;)

Roland







St?phane ANCELOT wrote:
> have you t'ried a network analyzer like ethereal to compare twincat
> output and your master output ?
> roland Tollenaar a ?crit :
>> Hi,
>>
>> I have managed to configure for the EL4132, the master_test code is
>> posted here for anyone who wants to know the parameters for this
>> module and does not have twincat to find them either.
>>
>> Regards,
>>
>> Roland.
>>
>> ///SlaveConfig EK1100 [Bus Coupler]
>> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
>> EtherCAT_PD_Config pd_config_EK1100(0);
>> EtherCAT_SlaveConfig
>> EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
>>
>> ///SlaveConfig EL2004(1) [Digital Output]
>> //[A slave configuration consists of a fmmu-config, a process data
>> (pd) config and optionally a mailbox config]
>> //fmmu (fieldbus memory management unit) config container (handle?)
>> EtherCAT_FMMU_Config fmmu_config_EL2004_1(1);//arg=number of FMMU's.
>> Some modules take more than one if e.g. they have in and outputs.
>> //not sure what this is doing (Seems to be actual fmmu config which
>> gets linked to the handle created above)
>> EC_FMMU fmmu0_EL2004_1(0x0001000A,1,0,3,0x0F00,0,false,true,true);
>> //logical start address, # bytes used, start bit, end bit, physical
>> address, physical start bit, read-enable, write-enable,
>> activate-module
>> //process data config (Again seems to be a handle)
>> EtherCAT_PD_Config pd_config_EL2004_1(1); //argument=length
>> //synchronisation manager
>> EC_SyncMan syncman0_EL2004_1(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
>> //compile the slave configuration
>> EtherCAT_SlaveConfig
>> EC_EL2004_1(0x7d43052,0x100000,0x03ec,&fmmu_config_EL2004_1,&pd_config_EL2004_1);
>> //product code, revision number, physical address, FMMU-configuration
>> instance, process data configuration instance, [optional mailbox
>> configutation]
>>
>> ///SlaveConfig EL2004(2) [Digital Output]
>> EtherCAT_FMMU_Config fmmu_config_EL2004_2(1);
>> EC_FMMU fmmu0_EL2004_2(0x0001000A,1,4,7,0x03ed,0,false,true,true);
>> EtherCAT_PD_Config pd_config_EL2004_2(1);
>> EC_SyncMan syncman0_EL2004_2(0x03ed,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
>> EtherCAT_SlaveConfig
>> EC_EL2004_2(0x7d43052,0x100000,0x03ed,&fmmu_config_EL2004_2,&pd_config_EL2004_2);
>>
>> ///SlaveConfig EL2004(3) [Digital Output]
>> EtherCAT_FMMU_Config fmmu_config_EL2004_3(1);
>> EC_FMMU fmmu0_EL2004_3(0x0001000B,1,0,3,0x0F00,0,false,true,true);
>> EtherCAT_PD_Config pd_config_EL2004_3(1);
>> EC_SyncMan syncman0_EL2004_3(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
>> EtherCAT_SlaveConfig
>> EC_EL2004_3(0x7d43052,0x100000,0x03ee,&fmmu_config_EL2004_3,&pd_config_EL2004_3);
>>
>> ///SlaveConfig EL2004(4) [Digital Output]
>> EtherCAT_FMMU_Config fmmu_config_EL2004_4(1);
>> EC_FMMU fmmu0_EL2004_4(0x0001000B,1,4,7,0x0F00,0,false,true,true);
>> EtherCAT_PD_Config pd_config_EL2004_4(1);
>> EC_SyncMan syncman0_EL2004_4(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
>> EtherCAT_SlaveConfig
>> EC_EL2004_4(0x7d43052,0x100000,0x03ef,&fmmu_config_EL2004_4,&pd_config_EL2004_4);
>>
>>
>> ///SlaveConfig EL1014(1) [Digital Input]
>> EtherCAT_FMMU_Config fmmu_config_EL1014_1(1);
>> EC_FMMU fmmu0_EL1014_1(0x0001000C,1,0,3,0x1000,0,true,false,true);
>> EtherCAT_PD_Config pd_config_EL1014_1(1);
>> EC_SyncMan syncman0_EL1014_1(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
>> EtherCAT_SlaveConfig
>> EC_EL1014_1(0x03F63052,0x100000,0x03f0,&fmmu_config_EL1014_1,
>> &pd_config_EL1014_1);
>>
>> ///SlaveConfig EL1014(2) [Digital Input]
>> EtherCAT_FMMU_Config fmmu_config_EL1014_2(1);
>> EC_FMMU fmmu0_EL1014_2(0x0001000C,1,4,7,0x1000,0,true,false,true);
>> EtherCAT_PD_Config pd_config_EL1014_2(1);
>> EC_SyncMan syncman0_EL1014_2(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
>> EtherCAT_SlaveConfig
>> EC_EL1014_2(0x03F63052,0x100000,0x03f1,&fmmu_config_EL1014_2,
>> &pd_config_EL1014_2);
>>
>> ///SlaveConfig EL1014(3) [Digital Input]
>> EtherCAT_FMMU_Config fmmu_config_EL1014_3(1);
>> EC_FMMU fmmu0_EL1014_3(0x0001000D,1,0,3,0x1000,0,true,false,true);
>> EtherCAT_PD_Config pd_config_EL1014_3(1);
>> EC_SyncMan syncman0_EL1014_3(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
>> EtherCAT_SlaveConfig
>> EC_EL1014_3(0x03F63052,0x100000,0x03f2,&fmmu_config_EL1014_3,
>> &pd_config_EL1014_3);
>>
>> ///SlaveConfig EL1014(4) [Digital Input]
>> EtherCAT_FMMU_Config fmmu_config_EL1014_4(1);
>> EC_FMMU fmmu0_EL1014_4(0x0001000D,1,4,7,0x1000,0,true,false,true);
>> EtherCAT_PD_Config pd_config_EL1014_4(1);
>> EC_SyncMan syncman0_EL1014_4(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
>> EtherCAT_SlaveConfig
>> EC_EL1014_4(0x03F63052,0x100000,0x03f3,&fmmu_config_EL1014_4,
>> &pd_config_EL1014_4);
>>
>>
>> ///SlaveConfig EL4132
>> EtherCAT_FMMU_Config fmmu_config_EL4132(2);
>> EC_FMMU fmmu0_EL4132(0x00080000,1,0,0,0x080D,0x00,true,false,true);
>> EC_FMMU fmmu1_EL4132(0x00010003,4,0,7,0x1000,0x00,false,true,true);
>>
>> EC_SyncMan syncman_mbx0_EL4132(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
>> EC_SyncMan syncman_mbx1_EL4132(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
>> EtherCAT_MbxConfig mbx_conf_EL4132 = {syncman_mbx0_EL4132, syncman_mbx1_EL4132};
>>
>> EtherCAT_PD_Config pd_config_EL4132(2);
>> EC_SyncMan syncman0_EL4132(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
>> EC_SyncMan syncman1_EL4132(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
>>
>> EtherCAT_SlaveConfig
>> EC_EL4132(0x10243052,0x00,0x03f4,&fmmu_config_EL4132,&pd_config_EL4132,&mbx_conf_EL4132);
>>
>>
>>
>>
>> static void init_slave_db() {
>> 	///create slave database	
>> 	EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(10);
>> //argument=#slaves
>>
>> 	//EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(2);
>> 	//fmmu_config_EL4102[0] = fmmu0_EL4102;
>> 	//fmmu_config_EL4102[1] = fmmu1_EL4102;
>> 	//pd_config_EL4102[0] = syncman0_EL4102;
>> 	//pd_config_EL4102[1] = syncman1_EL4102;
>>
>> 	///Connect actual fmmu and process data config to respective handles
>> for EL 2004 (DO)
>> 	fmmu_config_EL2004_1[0] = fmmu0_EL2004_1;
>> 	fmmu_config_EL2004_2[0] = fmmu0_EL2004_2;
>> 	fmmu_config_EL2004_3[0] = fmmu0_EL2004_3;
>> 	fmmu_config_EL2004_4[0] = fmmu0_EL2004_4;
>> 	pd_config_EL2004_1[0]   = syncman0_EL2004_1;
>> 	pd_config_EL2004_2[0]   = syncman0_EL2004_2;
>> 	pd_config_EL2004_3[0]   = syncman0_EL2004_3;
>> 	pd_config_EL2004_4[0]   = syncman0_EL2004_4;
>> 	
>> 	///Connect actual fmmu and process data config to respective handles
>> for EL 1014 (DI)
>> 	fmmu_config_EL1014_1[0] =fmmu0_EL1014_1;
>> 	fmmu_config_EL1014_2[0] =fmmu0_EL1014_2;
>> 	fmmu_config_EL1014_3[0] =fmmu0_EL1014_3;
>> 	fmmu_config_EL1014_4[0] =fmmu0_EL1014_4;
>> 	pd_config_EL1014_1[0]   =syncman0_EL1014_1;
>> 	pd_config_EL1014_2[0]   =syncman0_EL1014_2;
>> 	pd_config_EL1014_3[0]   =syncman0_EL1014_3;
>> 	pd_config_EL1014_4[0]   =syncman0_EL1014_4;
>>
>> 	///Connect actual config to fmmu and processdata config handle for
>> EL4132 (analog output modules)
>> 	fmmu_config_EL4132[0] = fmmu0_EL4132;
>> 	fmmu_config_EL4132[1] = fmmu1_EL4132;
>> 	pd_config_EL4132[0]   = syncman0_EL4132;
>> 	pd_config_EL4132[1]   = syncman1_EL4132;	
>>
>> 	//slave_db->set_conf(&EC_EL4102,0);
>>
>> 	///Commit the slave config objects to the slave database
>> 	slave_db->set_conf(&EC_EK1100,0);
>> 	slave_db->set_conf(&EC_EL2004_1,1);
>> 	slave_db->set_conf(&EC_EL2004_2,2);
>> 	slave_db->set_conf(&EC_EL2004_3,3);
>> 	slave_db->set_conf(&EC_EL2004_4,4);
>> 	slave_db->set_conf(&EC_EL1014_1,5);
>> 	slave_db->set_conf(&EC_EL1014_2,6);
>> 	slave_db->set_conf(&EC_EL1014_3,7);
>> 	slave_db->set_conf(&EC_EL1014_4,8);
>> 	slave_db->set_conf(&EC_EL4132,9);
>> 	
>> }
>> _______________________________________________
>> Ethercatmaster-users mailing list
>> Ethercatmaster-users at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>
>>
> 
> 


From harti_said at yahoo.fr  Thu Jul 12 09:26:13 2007
From: harti_said at yahoo.fr (said harti)
Date: Thu, 12 Jul 2007 09:26:13 +0200 (CEST)
Subject: [Ethercatmaster-users] Question about the usage of teh master_test
	program
Message-ID: <770641.84692.qm@web37313.mail.mud.yahoo.com>

Hi,

I have some BeckHoff modules : 

EK1100 (buscoupler)
EL4102
EL9010

rtnet (0.99) is tested and working on a xenomai platform (2.3.0).

EML is compiled and installed.

The IO modules  group is connected to the PC by the ethernet cable
(obviously) and I have 24V applied across pins 1 and 5 on the
buscoupler. 

BUT

when i make :


ifconfig eth0 down
rmmod 8139too
mknod /dev/rtnet c 10 240
insmod /usr/local/rtnet/modules/rtnet.ko
insmod /usr/local/rtnet/modules/rtpacket.ko
insmod /usr/local/rtnet/modules/rt_loopback.ko
insmod /usr/local/rtnet/modules/rt_8139too.ko
/usr/local/rtnet/sbin/rtifconfig rtlo up
/usr/local/rtnet/sbin/rtifconfig rteth0 up
and in start ma master_test program

./master_test rteth0

I have could'nt get communication between the Beckhoff
IO  modules and my master. 

The tests that come with the EML library
(master_test and eval_test) fail miserably. I get this error :

Socket created: socket id: 3
Got interface: index: 0
Cannot set timout: Invalid argument
Continue without timeout
Attach netif

Master initializing

low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_output(): Cannot Send
low_level_txandrx: failed: MAX_TRIES_TX: Giving up
DLL::txandrx() Error
Error sending counter frame
Something went wrong while scanning network
EtherCAT_AL:: Can't init network
Getting slave handler
EtherCAT_AL: No such slave, returning NULL
Setting EK1100 to OP STATE
Segmentation fault


Could I please tell me how can i get the
communication up ? and resolve this problem 

Best Regards


Said HARTI

       
---------------------------------
 Ne gardez plus qu'une seule adresse mail ! Copiez vos mails vers Yahoo! Mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070712/6c319444/attachment.html>

From harti_said at yahoo.fr  Mon Jul 16 10:20:37 2007
From: harti_said at yahoo.fr (said harti)
Date: Mon, 16 Jul 2007 10:20:37 +0200 (CEST)
Subject: [Ethercatmaster-users] Slaves Parameters!!
Message-ID: <573629.80084.qm@web37305.mail.mud.yahoo.com>

Hello,

I did'nt resolve my problem yet, my master_test program turn perfectely, but the LEDs for the EL4102 and the EL2004 don't switch on, (my code is posted on my last message)

for the some data transmeted to the beckhoff modules (5v = 03FFF to EL4102 and all DO to 1 = 0x0F to EL2004), this is the difference between captered frames 

1: between my master and the Beckhoff modules :

0000   ff   ff   ff   ff   ff   ff   02 00 00 00 00 00 88 a4 0f 10  ................
0010   0c 5e 00 00 01 00 03 00 04 00 ff   3f  00 00 0f 00  .^.........?....
0020   00 07 00 10 00 02 01 00 00 00 00 00 00 00 00 00  ................
0030   00 00 00 00 00 00 00 00 00 00 00 00                    ............


and this is the captured frame between the twincat tools on my laptop and the beckhoff modules :

0000   01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10  ................
0010   0b 00 00 00 01 00 05 80 00 00 ff   3f  00 00 0f 00  .^.........??...
0020   00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00  ................
0030   00 00 30 01 02 00 00 00 00 00 00 00                    ............

thanks to tell me what i am possibly wrong

Best Regards

Said HARTI

 		
---------------------------------
 D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070716/6678446f/attachment.html>

From rwatollenaar at gmail.com  Mon Jul 16 11:27:32 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 16 Jul 2007 11:27:32 +0200
Subject: [Ethercatmaster-users] RE : Re:  Slaves Parameters!!
In-Reply-To: <288064.98066.qm@web37306.mail.mud.yahoo.com>
References: <288064.98066.qm@web37306.mail.mud.yahoo.com>
Message-ID: <469B3A04.1070904@gmail.com>

Hi Said,

Afraid not I am as desparate as you are. And its seems like the EML 
chaps have taken leaven and are bathing in the sun. :(

I have done some disecting below, to determine what we can try next and 
to make things faster for the EML chaps when they eventually return.

Apparently the frame for simple ethercat communication is supposed to 
ahve the destination address in the first 48 bits of the frame. Here 
already our EML frame seems to be incorrect.

EML: ff ff ff ff ff ff

as opposed to

TC: 01 01 05 01 00 00

next come the source (also 48 bit)

EML: 02 00 00 00 00 00

TC: 02 00 7b 56 00 9a

then the Ethertype (16 bit)

EML:88 a4
TC: 88 a4

(Hey these are the same too!) :)

then comes the ethercat data header (16 bit)

EML: 0f 10
TC: 2c 10

(first 11 bit are the length, then 1 bit reserved then 4 bit Type 
[supposed to be 1])

The last 32 bit are the FCS

EML:00 00 00 00
TC:00 00 00 00

so what is inbetween is are the datagrams:

EML:
0c 5e 00 00 01 00 03 00 04 00 XXX ff 3f  00 00 0f 00 00 07 00 10 00 02 
01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 

	
TC:
0b 00 00 00 01 00 05 80 00 00 XXX ff 3f  00 00 0f 00 00 0a 00 00 00 08 
00 01 80 00 00 00 00 00 07 00 00 00 30 01 02 00 00 00 00 00 00 00 



Each datagram consists of a 10 byte (80 bit) headerfollowed by 
unspecified length of data and a 16 bit working counter at the end.

So presumanbly we can compare the headers
      Cmd   Idx 	   Address
EML: 0c XXX 5e XXX 00 00 01 00 XXX 03 00 04 00
TC:  0b XXX 00 XXX 00 00 01 00 XXX 05 80 00 00

So at least the first address is the same, but the command and index 
differ. What does this mean? I also don;t recognise the address?


anyway then we can see that there is the only recognizable data

EML: ff 3f  00 00 0f
TC:  ff 3f  00 00 0f

And at what point another datagram header follows would have to be 
derived from the length in the datagram header above. But this is more 
something for the EML chaps to look at.

Can you tell whether your logical and fixed addresses are the same in 
the TWINCAT experiment as in the EML experiment? Getting them the same 
would be a good start to determine where the important differences might be.

HTH.

Roland

said harti wrote:
> 
> Exactly Rolland, my outputs respond correctely when i set them with the 
> twincat tool, and i got this frame :
> 
> 0000   01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10................
> 0010   0b 00 00 00 01 00 05 80 00 00 ff 3f  00 00 0f 00.^.........??...
> 0020   00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00................
> 0030   00 00 30 01 02 00 00 00 00 00 00 00   
> 
> do you have some ideas pleaze for how can i resolve this misterious problem ?!!!!
> 
> 
> 
> */Roland Tollenaar <rwatollenaar at gmail.com>/* a ?crit :
> 
>     Hi Said,
> 
>     as mentioned I am having the same problem but I don't have twincat.
> 
>     Do your outputs respond properly when you set them with twincat and get
>     the below frames?
> 
>     Regards,
> 
>     Roland
> 
>     said harti wrote:
>      > Hello,
>      >
>      > I did'nt resolve my problem yet, my master_test program turn
>     perfectely,
>      > but the LEDs for the EL4102 and the EL2004 don't switch on, (my
>     code is
>      > posted on my last message)
>      >
>      > for the some data transmeted to the beckhoff modules (5v = 03FFF to
>      > EL4102 and all DO to 1 = 0x0F to EL2004), this is the difference
>     between
>      > captered frames
>      >
>      > 1: between my master and the Beckhoff modules :
>      >
>      > 0000 ff ff ff ff ff ff 02 00 00 00 00 00 88 a4 0f 10
>      > ................
>      > 0010 0c 5e 00 00 01 00 03 00 04 00 ff 3f 00 00 0f 00 .^.........?....
>      > 0020 00 07 00 10 00 02 01 00 00 00 00 00 00 00 00 00 ................
>      > 0030 00 00 00 00 00 00 00 00 00 00 00 00 ............
>      >
>      >
>      > and this is the captured frame between the twincat tools on my
>     laptop
>      > and the beckhoff modules :
>      >
>      > 0000 01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10 ................
>      > 0010 0b 00 00 00 01 00 05 80 00 00 ff 3f 00 00 0f 00 .^.........??...
>      > 0020 00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00 ................
>      > 0030 00 00 30 01 02 00 00 00 00 00 00 00 ............
>      >
>      > thanks to tell me what i am possibly wrong
>      >
>      > Best Regards
>      >
>      > Said HARTI
>      >
>      >
>     ------------------------------------------------------------------------
>      > D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos
>      > questions ! Profitez des connaissances, des opinions et des
>     exp?riences
>      > des internautes sur Yahoo! Questions/R?ponses
>      > .
>      >
>      >
>      >
>     ------------------------------------------------------------------------
>      >
>      > _______________________________________________
>      > Ethercatmaster-users mailing list
>      > Ethercatmaster-users at lists.berlios.de
>      > https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 
> 
> ------------------------------------------------------------------------
> Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de 
> mail ! <http://fr.promotions.yahoo.com/mail/nouveau_yahoomail2.html>


From rwatollenaar at gmail.com  Mon Jul 16 11:27:59 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 16 Jul 2007 11:27:59 +0200
Subject: [Ethercatmaster-users] RE : Re:  Slaves Parameters!!
In-Reply-To: <288064.98066.qm@web37306.mail.mud.yahoo.com>
References: <288064.98066.qm@web37306.mail.mud.yahoo.com>
Message-ID: <469B3A1F.2080507@gmail.com>

Hi Said,

Afraid not I am as desparate as you are. And its seems like the EML
chaps have taken leaven and are bathing in the sun. :(

I have done some disecting below, to determine what we can try next and
to make things faster for the EML chaps when they eventually return.

Apparently the frame for simple ethercat communication is supposed to
ahve the destination address in the first 48 bits of the frame. Here
already our EML frame seems to be incorrect.

EML: ff ff ff ff ff ff

as opposed to

TC: 01 01 05 01 00 00

next come the source (also 48 bit)

EML: 02 00 00 00 00 00

TC: 02 00 7b 56 00 9a

then the Ethertype (16 bit)

EML:88 a4
TC: 88 a4

(Hey these are the same too!) :)

then comes the ethercat data header (16 bit)

EML: 0f 10
TC: 2c 10

(first 11 bit are the length, then 1 bit reserved then 4 bit Type
[supposed to be 1])

The last 32 bit are the FCS

EML:00 00 00 00
TC:00 00 00 00

so what is inbetween is are the datagrams:

EML:
0c 5e 00 00 01 00 03 00 04 00 XXX ff 3f  00 00 0f 00 00 07 00 10 00 02
01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

	
TC:
0b 00 00 00 01 00 05 80 00 00 XXX ff 3f  00 00 0f 00 00 0a 00 00 00 08
00 01 80 00 00 00 00 00 07 00 00 00 30 01 02 00 00 00 00 00 00 00



Each datagram consists of a 10 byte (80 bit) headerfollowed by
unspecified length of data and a 16 bit working counter at the end.

So presumanbly we can compare the headers
      Cmd   Idx 	   Address
EML: 0c XXX 5e XXX 00 00 01 00 XXX 03 00 04 00
TC:  0b XXX 00 XXX 00 00 01 00 XXX 05 80 00 00

So at least the first address is the same, but the command and index
differ. What does this mean? I also don;t recognise the address?


anyway then we can see that there is the only recognizable data

EML: ff 3f  00 00 0f
TC:  ff 3f  00 00 0f

And at what point another datagram header follows would have to be
derived from the length in the datagram header above. But this is more
something for the EML chaps to look at.

Can you tell whether your logical and fixed addresses are the same in
the TWINCAT experiment as in the EML experiment? Getting them the same
would be a good start to determine where the important differences might be.

HTH.

Roland

said harti wrote:
> 
> Exactly Rolland, my outputs respond correctely when i set them with the 
> twincat tool, and i got this frame :
> 
> 0000   01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10................
> 0010   0b 00 00 00 01 00 05 80 00 00 ff 3f  00 00 0f 00.^.........??...
> 0020   00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00................
> 0030   00 00 30 01 02 00 00 00 00 00 00 00   
> 
> do you have some ideas pleaze for how can i resolve this misterious problem ?!!!!
> 
> 
> 
> */Roland Tollenaar <rwatollenaar at gmail.com>/* a ?crit :
> 
>     Hi Said,
> 
>     as mentioned I am having the same problem but I don't have twincat.
> 
>     Do your outputs respond properly when you set them with twincat and get
>     the below frames?
> 
>     Regards,
> 
>     Roland
> 
>     said harti wrote:
>      > Hello,
>      >
>      > I did'nt resolve my problem yet, my master_test program turn
>     perfectely,
>      > but the LEDs for the EL4102 and the EL2004 don't switch on, (my
>     code is
>      > posted on my last message)
>      >
>      > for the some data transmeted to the beckhoff modules (5v = 03FFF to
>      > EL4102 and all DO to 1 = 0x0F to EL2004), this is the difference
>     between
>      > captered frames
>      >
>      > 1: between my master and the Beckhoff modules :
>      >
>      > 0000 ff ff ff ff ff ff 02 00 00 00 00 00 88 a4 0f 10
>      > ................
>      > 0010 0c 5e 00 00 01 00 03 00 04 00 ff 3f 00 00 0f 00 .^.........?....
>      > 0020 00 07 00 10 00 02 01 00 00 00 00 00 00 00 00 00 ................
>      > 0030 00 00 00 00 00 00 00 00 00 00 00 00 ............
>      >
>      >
>      > and this is the captured frame between the twincat tools on my
>     laptop
>      > and the beckhoff modules :
>      >
>      > 0000 01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10 ................
>      > 0010 0b 00 00 00 01 00 05 80 00 00 ff 3f 00 00 0f 00 .^.........??...
>      > 0020 00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00 ................
>      > 0030 00 00 30 01 02 00 00 00 00 00 00 00 ............
>      >
>      > thanks to tell me what i am possibly wrong
>      >
>      > Best Regards
>      >
>      > Said HARTI
>      >
>      >
>     ------------------------------------------------------------------------
>      > D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos
>      > questions ! Profitez des connaissances, des opinions et des
>     exp?riences
>      > des internautes sur Yahoo! Questions/R?ponses
>      > .
>      >
>      >
>      >
>     ------------------------------------------------------------------------
>      >
>      > _______________________________________________
>      > Ethercatmaster-users mailing list
>      > Ethercatmaster-users at lists.berlios.de
>      > https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 
> 
> ------------------------------------------------------------------------
> Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de 
> mail ! <http://fr.promotions.yahoo.com/mail/nouveau_yahoomail2.html>



From rwatollenaar at gmail.com  Mon Jul 16 11:32:34 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 16 Jul 2007 11:32:34 +0200
Subject: [Ethercatmaster-users] outputs not reponding
Message-ID: <469B3B32.9060600@gmail.com>

Hi,

I posted something similar earlier but cannot see the message I sent in 
my sent box. Just to make sure here it is again.

Like Said, all my modules seem to allow themselves to be configured and 
go into operational state. However when I send commands to the digital 
outputs, the rxandtx is successful (test its return value) but the 
outputs do not respond.

I have tried a whole lot of combinations in the data buffer (called msg 
in master_test) but to no avail.

I have posted my code earlier.

Roland


From rolandtollenaar at gmail.com  Mon Jul 16 12:59:48 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Mon, 16 Jul 2007 10:59:48 +0000
Subject: [Ethercatmaster-users] RE : Re: RE : Re:  Slaves Parameters!!
In-Reply-To: <766489.12287.qm@web37305.mail.mud.yahoo.com>
References: <469B3A1F.2080507@gmail.com>
	<766489.12287.qm@web37305.mail.mud.yahoo.com>
Message-ID: <bc4264770707160359l75eeb6ccrccf52e0ae13f6579@mail.gmail.com>

Hi Said,


Thanks for this. Using this I managed to establish what was wrong.
Apparently there is a relation between the exact logical start
addresses and the place in the pd buffer.

I now also have all 16 outputs flashing on briefly. Only thing is,
they don't want to stay on. Do you have any idea how to make the
outputs stay up?

Regards,

Roland

On 7/16/07, said harti <harti_said at yahoo.fr> wrote:
> I have some good news about our problem,
>
> i have change my last code like this :
>
> ///Set Channel 1 to 5V
>         //unsigned char msg[2] = {0xff, 0x3f};
>
>           unsigned char msg[5] = {0xff, 0x3f, 0x00, 0x00, 0x0f};
>
>         if(AL->isReady()) {
>             printf("Test: Set Channel 1 to 5V: \n\n");
>             printf("Test: Set all DO to 1 \n\n");
>             int count = 0;
>             while(count<100000) {
>                 EM->txandrx_PD(sizeof(msg),msg);
>                 count++;
>             }
>
> and, now, i got 5v (3FFF) and all DO switch on quickly.
>
> so, in order to inswer to your question, i have exactly the some logical
> adress, and exactly  the some all parameters on TC and EML.
>
> So, i think, the problem is that i tryed to send a bad message : unsigned
> char msg[3] = {0xff, 0x3f, 0x0f};
>
> i have modified this message to : unsigned char msg[5] = {0xff, 0x3f, 0x00,
> 0x00, 0x0f};
>
>
> and this is the captured frame :
>
>
> 0000   ff ff ff ff ff ff 02 00 00 00 00 00 88 a4 11 10  ................
> 0010   0c 51 00 00 01 00 05 00 04 00 ff 3f 00 00 0f 04  .Q.........?....
> 0020   00 00 00 00 00 01 01 00 00 00 00 00 00 00 00 00  ................
> 0030   00 00 00 00 00 00 00 00 00 00 00 00              ............
>
> and if i hope to set the second channel to 5 v too : unsigned char msg[5] =
> {0xff, 0x3f, 0xff, 0x3f, 0x0f};
>
> that's all what i have modified in order to turn on my outputs.
>
> Said
>
>
> Roland Tollenaar <rwatollenaar at gmail.com> a ?crit :
>  Hi Said,
>
> Afraid not I am as desparate as you are. And its seems like the EML
> chaps have taken leaven and are bathing in the sun. :(
>
> I have done some disecting below, to determine what we can try next and
> to make things faster for the EML chaps when they eventually return.
>
> Apparently the frame for simple ethercat communication is supposed to
> ahve the destination address in the first 48 bits of the frame. Here
> already our EML frame seems to be incorrect.
>
> EML: ff ff ff ff ff ff
>
> as opposed to
>
> TC: 01 01 05 01 00 00
>
> next come the source (also 48 bit)
>
> EML: 02 00 00 00 00 00
>
> TC: 02 00 7b 56 00 9a
>
> then the Ethertype (16 bit)
>
> EML:88 a4
> TC: 88 a4
>
> (Hey these are the same too!) :)
>
> then comes the ethercat data header (16 bit)
>
> EML: 0f 10
> TC: 2c 10
>
> (first 11 bit are the length, then 1 bit reserved then 4 bit Type
> [supposed to be 1])
>
> The last 32 bit are the FCS
>
> EML:00 00 00 00
> TC:00 00 00 00
>
> so what is inbetween is are the datagrams:
>
> EML:
> 0c 5e 00 00 01 00 03 00 04 00 XXX ff 3f 00 00 0f 00 00 07 00 10 00 02
> 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
>
>
> TC:
> 0b 00 00 00 01 00 05 80 00 00 XXX ff 3f 00 00 0f 00 00 0a 00 00 00 08
> 00 01 80 00 00 00 00 00 07 00 00 00 30 01 02 00 00 00 00 00 00 00
>
>
>
> Each datagram consists of a 10 byte (80 bit) headerfollowed by
> unspecified length of data and a 16 bit working counter at the end.
>
> So presumanbly we can compare the headers
>  Cmd Idx Address
> EML: 0c XXX 5e XXX 00 00 01 00 XXX 03 00 04 00
> TC: 0b XXX 00 XXX 00 00 01 00 XXX 05 80 00 00
>
> So at least the first address is the same, but the command and index
> differ. What does this mean? I also don;t recognise the address?
>
>
> anyway then we can see that there is the only recognizable data
>
> EML: ff 3f 00 00 0f
> TC: ff 3f 00 00 0f
>
> And at what point another datagram header follows would have to be
> derived from the length in the datagram header above. But this is more
> something for the EML chaps to look at.
>
> Can you tell whether your logical and fixed addresses are the same in
> the TWINCAT experiment as in the EML experiment? Getting them the same
> would be a good start to determine where the important differences might be.
>
> HTH.
>
> Roland
>
> said harti wrote:
> >
> > Exactly Rolland, my outputs respond correctely when i set them with the
> > twincat tool, and i got this frame :
> >
> > 0000 01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10................
> > 0010 0b 00 00 00 01 00 05 80 00 00 ff 3f 00 00 0f 00.^.........??...
> > 0020 00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00................
> > 0030 00 00 30 01 02 00 00 00 00 00 00 00
> >
> > do you have some ideas pleaze for how can i resolve this misterious
> problem ?!!!!
> >
> >
> >
> > */Roland Tollenaar /* a ?crit :
>
> >
> > Hi Said,
> >
> > as mentioned I am having the same problem but I don't have twincat.
> >
> > Do your outputs respond properly when you set them with twincat and get
> > the below frames?
> >
> > Regards,
> >
> > Roland
> >
> > said harti wrote:
> > > Hello,
> > >
> > > I did'nt resolve my problem yet, my master_test program turn
> > perfectely,
> > > but the LEDs for the EL4102 and the EL2004 don't switch on, (my
> > code is
> > > posted on my last message)
> > >
> > > for the some data transmeted to the beckhoff modules (5v = 03FFF to
> > > EL4102 and all DO to 1 = 0x0F to EL2004), this is the difference
> > between
> > > captered frames
> > >
> > > 1: between my master and the Beckhoff modules :
> > >
> > > 0000 ff ff ff ff ff ff 02 00 00 00 00 00 88 a4 0f 10
> > > ................
> > > 0010 0c 5e 00 00 01 00 03 00 04 00 ff 3f 00 00 0f 00 .^.........?....
> > > 0020 00 07 00 10 00 02 01 00 00 00 00 00 00 00 00 00 ................
> > > 0030 00 00 00 00 00 00 00 00 00 00 00 00 ............
> > >
> > >
> > > and this is the captured frame between the twincat tools on my
> > laptop
> > > and the beckhoff modules :
> > >
> > > 0000 01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10 ................
> > > 0010 0b 00 00 00 01 00 05 80 00 00 ff 3f 00 00 0f 00 .^.........??...
> > > 0020 00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00 ................
> > > 0030 00 00 30 01 02 00 00 00 00 00 00 00 ............
> > >
> > > thanks to tell me what i am possibly wrong
> > >
> > > Best Regards
> > >
> > > Said HARTI
> > >
> > >
> >
> ------------------------------------------------------------------------
> > > D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos
> > > questions ! Profitez des connaissances, des opinions et des
> > exp?riences
> > > des internautes sur Yahoo! Questions/R?ponses
> > > .
> > >
> > >
> > >
> >
> ------------------------------------------------------------------------
> > >
> > > _______________________________________________
> > > Ethercatmaster-users mailing list
> > > Ethercatmaster-users at lists.berlios.de
> > >
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> >
> >
> >
> ------------------------------------------------------------------------
> > Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de
> > mail !
>
>
>
>
>  ________________________________
>  Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de
> mail !
>
>


From rolandtollenaar at gmail.com  Mon Jul 16 14:44:24 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Mon, 16 Jul 2007 12:44:24 +0000
Subject: [Ethercatmaster-users] RE : Re: RE : Re: RE : Re: Slaves
	Parameters!!
In-Reply-To: <443480.55769.qm@web37301.mail.mud.yahoo.com>
References: <bc4264770707160359l75eeb6ccrccf52e0ae13f6579@mail.gmail.com>
	<443480.55769.qm@web37301.mail.mud.yahoo.com>
Message-ID: <bc4264770707160544o74ee061bs87a620baab284286@mail.gmail.com>

Hi Said,

In the latest example Tom posted he places the write in a separate
thread. Perhaps that has got something to do with it. Why the 5V stays
up I don;t know.

What we do know is that since you and I have the same problem, its
unlikely to be something wrong with the hardware. :)

Roland

On 7/16/07, said harti <harti_said at yahoo.fr> wrote:
> Exactly Rollan,
>
> I have a same question :(,
>
> How we can make the outputs stay up ?
>
> my AO (the EL4102) stay up at 5V, but all DO flashing on briefly, and i
> don't know how we can make it stay up !!!!   :(
>
> Regards,
>
> Said
>
> roland Tollenaar <rolandtollenaar at gmail.com> a ?crit :
>  Hi Said,
>
>
> Thanks for this. Using this I managed to establish what was wrong.
> Apparently there is a relation between the exact logical start
> addresses and the place in the pd buffer.
>
> I now also have all 16 outputs flashing on briefly. Only thing is,
> they don't want to stay on. Do you have any idea how to make the
> outputs stay up?
>
> Regards,
>
> Roland
>
> On 7/16/07, said harti wrote:
> > I have some good news about our problem,
> >
> > i have change my last code like this :
> >
> > ///Set Channel 1 to 5V
> > //unsigned char msg[2] = {0xff, 0x3f};
> >
> > unsigned char msg[5] = {0xff, 0x3f, 0x00, 0x00, 0x0f};
> >
> > if(AL->isReady()) {
> > printf("Test: Set Channel 1 to 5V: \n\n");
> > printf("Test: Set all DO to 1 \n\n");
> > int count = 0;
> > while(count<100000) {
> > EM->txandrx_PD(sizeof(msg),msg);
> > count++;
> > }
> >
> > and, now, i got 5v (3FFF) and all DO switch on quickly.
> >
> > so, in order to inswer to your question, i have exactly the some logical
> > adress, and exactly the some all parameters on TC and EML.
> >
> > So, i think, the problem is that i tryed to send a bad message : unsigned
> > char msg[3] = {0xff, 0x3f, 0x0f};
> >
> > i have modified this message to : unsigned char msg[5] = {0xff, 0x3f,
> 0x00,
> > 0x00, 0x0f};
> >
> >
> > and this is the captured frame :
> >
> >
> > 0000 ff ff ff ff ff ff 02 00 00 00 00 00 88 a4 11 10 ................
> > 0010 0c 51 00 00 01 00 05 00 04 00 ff 3f 00 00 0f 04 .Q.........?....
> > 0020 00 00 00 00 00 01 01 00 00 00 00 00 00 00 00 00 ................
> > 0030 00 00 00 00 00 00 00 00 00 00 00 00 ............
> >
> > and if i hope to set the second channel to 5 v too : unsigned char msg[5]
> =
> > {0xff, 0x3f, 0xff, 0x3f, 0x0f};
> >
> > that's all what i have modified in order to turn on my outputs.
> >
> > Said
> >
> >
> > Roland Tollenaar a ?crit :
>
> > Hi Said,
> >
> > Afraid not I am as desparate as you are. And its seems like the EML
> > chaps have taken leaven and are bathing in the sun. :(
> >
> > I have done some disecting below, to determine what we can try next and
> > to make things faster for the EML chaps when they eventually return.
> >
> > Apparently the frame for simple ethercat communication is supposed to
> > ahve the destination address in the first 48 bits of the frame. Here
> > already our EML frame seems to be incorrect.
> >
> > EML: ff ff ff ff ff ff
> >
> > as opposed to
> >
> > TC: 01 01 05 01 00 00
> >
> > next come the source (also 48 bit)
> >
> > EML: 02 00 00 00 00 00
> >
> > TC: 02 00 7b 56 00 9a
> >
> > then the Ethertype (16 bit)
> >
> > EML:88 a4
> > TC: 88 a4
> >
> > (Hey these are the same too!) :)
> >
> > then comes the ethercat data header (16 bit)
> >
> > EML: 0f 10
> > TC: 2c 10
> >
> > (first 11 bit are the length, then 1 bit reserved then 4 bit Type
> > [supposed to be 1])
> >
> > The last 32 bit are the FCS
> >
> > EML:00 00 00 00
> > TC:00 00 00 00
> >
> > so what is inbetween is are the datagrams:
> >
> > EML:
> > 0c 5e 00 00 01 00 03 00 04 00 XXX ff 3f 00 00 0f 00 00 07 00 10 00 02
> > 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
> >
> >
> > TC:
> > 0b 00 00 00 01 00 05 80 00 00 XXX ff 3f 00 00 0f 00 00 0a 00 00 00 08
> > 00 01 80 00 00 00 00 00 07 00 00 00 30 01 02 00 00 00 00 00 00 00
> >
> >
> >
> > Each datagram consists of a 10 byte (80 bit) headerfollowed by
> > unspecified length of data and a 16 bit working counter at the end.
> >
> > So presumanbly we can compare the headers
> > Cmd Idx Address
> > EML: 0c XXX 5e XXX 00 00 01 00 XXX 03 00 04 00
> > TC: 0b XXX 00 XXX 00 00 01 00 XXX 05 80 00 00
> >
> > So at least the first address is the same, but the command and index
> > differ. What does this mean? I also don;t recognise the address?
> >
> >
> > anyway then we can see that there is the only recognizable data
> >
> > EML: ff 3f 00 00 0f
> > TC: ff 3f 00 00 0f
> >
> > And at what point another datagram header follows would have to be
> > derived from the length in the datagram header above. But this is more
> > something for the EML chaps to look at.
> >
> > Can you tell whether your logical and fixed addresses are the same in
> > the TWINCAT experiment as in the EML experiment? Getting them the same
> > would be a good start to determine where the important differences might
> be.
> >
> > HTH.
> >
> > Roland
> >
> > said harti wrote:
> > >
> > > Exactly Rolland, my outputs respond correctely when i set them with the
> > > twincat tool, and i got this frame :
> > >
> > > 0000 01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10................
> > > 0010 0b 00 00 00 01 00 05 80 00 00 ff 3f 00 00 0f 00.^.........??...
> > > 0020 00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00................
> > > 0030 00 00 30 01 02 00 00 00 00 00 00 00
> > >
> > > do you have some ideas pleaze for how can i resolve this misterious
> > problem ?!!!!
> > >
> > >
> > >
> > > */Roland Tollenaar /* a ?crit :
> >
> > >
> > > Hi Said,
> > >
> > > as mentioned I am having the same problem but I don't have twincat.
> > >
> > > Do your outputs respond properly when you set them with twincat and get
> > > the below frames?
> > >
> > > Regards,
> > >
> > > Roland
> > >
> > > said harti wrote:
> > > > Hello,
> > > >
> > > > I did'nt resolve my problem yet, my master_test program turn
> > > perfectely,
> > > > but the LEDs for the EL4102 and the EL2004 don't switch on, (my
> > > code is
> > > > posted on my last message)
> > > >
> > > > for the some data transmeted to the beckhoff modules (5v = 03FFF to
> > > > EL4102 and all DO to 1 = 0x0F to EL2004), this is the difference
> > > between
> > > > captered frames
> > > >
> > > > 1: between my master and the Beckhoff modules :
> > > >
> > > > 0000 ff ff ff ff ff ff 02 00 00 00 00 00 88 a4 0f 10
> > > > ................
> > > > 0010 0c 5e 00 00 01 00 03 00 04 00 ff 3f 00 00 0f 00 .^.........?....
> > > > 0020 00 07 00 10 00 02 01 00 00 00 00 00 00 00 00 00 ................
> > > > 0030 00 00 00 00 00 00 00 00 00 00 00 00 ............
> > > >
> > > >
> > > > and this is the captured frame between the twincat tools on my
> > > laptop
> > > > and the beckhoff modules :
> > > >
> > > > 0000 01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10 ................
> > > > 0010 0b 00 00 00 01 00 05 80 00 00 ff 3f 00 00 0f 00 .^.........??...
> > > > 0020 00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00 ................
> > > > 0030 00 00 30 01 02 00 00 00 00 00 00 00 ............
> > > >
> > > > thanks to tell me what i am possibly wrong
> > > >
> > > > Best Regards
> > > >
> > > > Said HARTI
> > > >
> > > >
> > >
> >
> ------------------------------------------------------------------------
> > > > D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos
> > > > questions ! Profitez des connaissances, des opinions et des
> > > exp?riences
> > > > des internautes sur Yahoo! Questions/R?ponses
> > > > .
> > > >
> > > >
> > > >
> > >
> >
> ------------------------------------------------------------------------
> > > >
> > > > _______________________________________________
> > > > Ethercatmaster-users mailing list
> > > > Ethercatmaster-users at lists.berlios.de
> > > >
> >
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> > >
> > >
> > >
> >
> ------------------------------------------------------------------------
> > > Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de
> > > mail !
> >
> >
> >
> >
> > ________________________________
> > Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de
> > mail !
> >
> >
>
>
>
>  ________________________________
>  Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de
> mail !
>
>


From rwatollenaar at gmail.com  Mon Jul 16 16:51:07 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 16 Jul 2007 16:51:07 +0200
Subject: [Ethercatmaster-users] interacting with 1014 and 2004
In-Reply-To: <4696333E.10108@skynet.be>
References: <bc4264770707100952p7b57c3f4r70058fdb7e2346ee@mail.gmail.com>
	<4696333E.10108@skynet.be>
Message-ID: <469B85DB.6050309@gmail.com>

Hi Said,

Check this mail out. Its explanation of reading the inputs seems clear 
enough to me (now that we have figured out how to sequence the send 
buffer) so I will try this later this evening. If I get it working I 
will send you my master test, but perhaps you will get it right before then.

Regards,

Roland.

Tom Panis wrote:
> 
> roland Tollenaar wrote:
>> Hi,
>>
>> Is there anyone with some code examples of how the process data is
>> exchanged with eml with the DO modules 2004 and DI modules 1014?
>> Possibly also the 4132 Analog output (+/-10V)
>>
>> This would help tremendously.
>>
>>
>>   
> 
> In this example, there's put a sine at the analog output and one digital 
> output is put on and off.
> First there's made a buffer. This buffer represents the logical memory 
> starting from 0x0001000. (In the future we may change this, so you can 
> chose yourself what the start address of this buffer is).
> Since, in this example, the logical start address of the analog output 
> is 0x0001000 and the length of the process data is 4 byte, the first 
> four bytes of the buffer have to be filled with the output values, 2 
> bytes for every output. The resolution is 16 bit (65535 steps). -10 V 
> corresponds with the decimal value -32769 or 0x8001, 0 V corresponds 
> with the decimal value 0 or 0x0000, +10 V corresponds with the decimal 
> value +32767 or 0x7FFF.
> 
> All this information can be found in the chm files of the modules. These 
> files can be found on the beckhoff website: 
> http://www.beckhoff.com/english.asp?download/ethercat.htm
> 
> The last byte of the buffer is used to control the digital outputs The 
> process data is 4 bit. Each bit controls a digital output. In this 
> example only the one output is controlled during process.
> 
> If you want to read data from input modules (there isn't any in my 
> example), you don't have to do much:
> While this frame with process data is send, the input modules will write 
> there data to this frame. So when the frame returns, the input data from 
> the modules will be in the received frame. If you've assigned the 
> logical address 0x0001000C to a digital input, the digital input can be 
> found on byte 12 of the local buffer (local buffer starts at 
> 0x00010000). Note that you have to make sure the local buffer is big 
> enough (13 bytes in this case).
> 
> Sending a buffer can be done with the txandrx function of the 
> EtherCAT_Master.
> 
> I hope this helps you out a bit.
> 
> Tom
> 
> 
> ------------------------------------------------------------------------
> 
> #include <native/task.h>
> #include <native/timer.h>
> #include <posix/pthread.h>
> #include <signal.h>
> #include <sys/mman.h>
> #include <math.h>
> #include <stdlib.h>
> 
> #include <al/ethercat_master.h>
> #include <al/ethercat_AL.h>
> #include <al/ethercat_process_data.h>
> #include <ethercat/ethercat_xenomai_drv.h>
> #include <ethercat/netif.h>
> #include <dll/ethercat_dll.h>
> #include <dll/ethercat_frame.h>
> #include <dll/ethercat_slave_memory.h>
> #include <al/ethercat_slave_conf.h>
> #include <al/ethercat_slave_handler.h>
> 
> 
> struct netif *ni;
> RT_TASK ec_pd_task;
> bool stop = false;
> unsigned long sinus_freq = 1;
> unsigned long period;
> 
> ///SlaveConfig EK1100
> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
> EtherCAT_PD_Config pd_config_EK1100(0);
> EtherCAT_SlaveConfig EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
> 
> ///SlaveConfig EL4102
> EtherCAT_FMMU_Config fmmu_config_EL4102(2);
> EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
> EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);
> 
> EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102, syncman_mbx1_EL4102};
> 
> EtherCAT_PD_Config pd_config_EL4102(2);
> EC_SyncMan
>  syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan
>  syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);
> 
> ///SlaveConfig EL2004
> EtherCAT_FMMU_Config fmmu_config_EL2004(1);
> EC_FMMU fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);
> 
> EtherCAT_PD_Config pd_config_EL2004(1);
> EC_SyncMan syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig EC_EL2004(0x7d43052,0x00000000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);
> 
> static void init_slave_db() {
> 	EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(3);
> 	fmmu_config_EL4102[0] = fmmu0_EL4102;
> 	fmmu_config_EL4102[1] = fmmu1_EL4102;
> 	pd_config_EL4102[0] = syncman0_EL4102;
> 	pd_config_EL4102[1] = syncman1_EL4102;
> 	fmmu_config_EL2004[0] = fmmu0_EL2004;
> 	pd_config_EL2004[0] = syncman0_EL2004;
> 	slave_db->set_conf(&EC_EL4102,0);
> 	slave_db->set_conf(&EC_EK1100,1);
> 	slave_db->set_conf(&EC_EL2004,2);
> 
> 	
> }
> 
> static void ec_pd(void *) {
> 	EtherCAT_Master *EM = EtherCAT_Master::instance();
> 	unsigned char msg[5];		//Data to Send
> 	int cnt = 0, cnt_dig = 0;
> 	int voltage_i = 0;
> 	float voltage_f = 0, time = 0;
> 	long samples = 1000*1000*1000 / period / sinus_freq;
> 	printf("Samples = %d\n", samples);
> 	while(!stop) {
> 		if(cnt > samples)
> 			cnt = 0;
> 		time = M_PI * 2 * cnt / samples;
> 		voltage_f = (sin(time) * 5 + 5) * 32767 / 10;
> 		voltage_i = (int) voltage_f;
> 		msg[0] = voltage_i;	msg[1] = voltage_i>>8;	// analog output
> 		msg[4] = cnt_dig & 0x01;	// only the last bit: one digital output
> 		//printf("mdg[4] = %d\n",msg[4]);
> 		//printf("cnt = %d   time = %f    voltage = %f  msg[0] =0x%x     msg[1] = 0cx%x \n", cnt,time, voltage_f,msg[0], msg[1]);							// Digital Output Channel 1 
> 		cnt++;	cnt_dig++;
> 		rt_task_wait_period(0);
> 		EM->txandrx_PD(sizeof(msg),msg);
> 	}
> 	
> }
> 
> static void* run_master(void * arg) {
> 	
> 	ni = init_ec((char*)arg);
> 	init_slave_db();
> 	if(ni != 0) {
> 		
> 		EtherCAT_DataLinkLayer::instance()->attach(ni);
> 		printf("Master initializing \n\n");
> 		EtherCAT_Master * EM = EtherCAT_Master::instance();
> 		printf("Getting slave handler\n");
> 		EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
> 		if(sh_ek1100->to_state(EC_OP_STATE))
> 			printf("EK1100 succesfully set in OP STATE\n");
> 		else
> 			printf("\nFailed to set EK1100 in OP STATE\n");
> 		printf("Getting slave handler\n");
> 		EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
> 		if(sh_el4102->to_state(EC_OP_STATE))
> 			printf("EL4102 succesfully set in OP STATE\n");
> 		else
> 			printf("\nFailed to set EL4102 in OP STATE!!\n");
> 		printf("Getting slave handler\n");
> 		EtherCAT_SlaveHandler * sh_el2004 = EM->get_slave_handler(0x03eb);
> 		if(sh_el2004->to_state(EC_OP_STATE))
> 			printf("EL2004 succesfully set in OP STATE\n");
> 		else
> 			printf("\nFailed to set EL2004 in OP STATE\n");
> 		
> 		EtherCAT_AL * AL = EtherCAT_AL::instance();
> 		if(AL->isReady()) {
> 			period = 1000*50;
> 			rt_task_create (&ec_pd_task, "Ethercat PD", 0,1,T_JOINABLE);
> 			rt_task_set_periodic (&ec_pd_task, TM_NOW, rt_timer_ns2ticks(period));
> 			rt_task_start (&ec_pd_task, &ec_pd, 0);					
> 		}
> 		
> 		rt_task_join(&ec_pd_task);
> 		close_socket(ni);
> 	}
> }
> 
> void catch_signal(int sig)
> {
> 	stop = true;
> }
> 
> int main(int argc, char** argv)
> {
> 
> 	signal(SIGTERM, catch_signal);
>    	signal(SIGINT, catch_signal);
>    	signal(SIGHUP, catch_signal);
> 	mlockall(MCL_CURRENT|MCL_FUTURE);
> 
> 	if (argc < 3) {
>         printf("usage: %s <interface> <frequence>\n", argv[0]);
>         return 0;
>     }
> 
> 	sinus_freq = atoi(argv[2]);
> 
> 	pthread_t xenothread;
> 	pthread_attr_t xenothread_attr;
> 
> 	//Set attributes of thread
> 	pthread_attr_init (& xenothread_attr);
> 
> 	//Start thread
> 	if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1]) != 0) {
> 		printf("Cannot create thread EtherCatThread.\n");
> 		exit(1);
> 	}
>    pthread_join( xenothread, 0 );
> 	printf("\nEnd\n");
> 	return 0;
> }
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users


From rwatollenaar at gmail.com  Mon Jul 16 17:12:50 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 16 Jul 2007 17:12:50 +0200
Subject: [Ethercatmaster-users] RE : Re: RE : Re:  Slaves Parameters!!
In-Reply-To: <550779.41357.qm@web37301.mail.mud.yahoo.com>
References: <550779.41357.qm@web37301.mail.mud.yahoo.com>
Message-ID: <469B8AF2.8020608@gmail.com>

> For the moment, i don't managed to get my digital outputs to stay up, 
> and i don't know why ? !!!!  :(

I have checked the documentation, there seems to be no setting for the 
module that would make the outputs stay up of behave like they are 
doing. So we must be doing something wrong in the program.

What is strange is that even on repeated writes, which are succesful 
according to the bool return value of rxandtx(), the outputs do not stay 
high. It is as though they only respond tot he first....

Ah!! I know what the problem might be, the buffer msg is being 
overwritten by the inputs which are low? Try rewriting the msg buffer in 
the loop, I am not doing that.

Roland

> 
> Said
> */Roland Tollenaar <rwatollenaar at gmail.com>/* a ?crit :
> 
>     Hi Said,
> 
>     Did you get the other mail I sent?
> 
>     Have you managed to get the outputs to stay high already? If not, maybe
>     there is a setting that must be done to the module such that the
>     outputs
>     stay high after the registers have been written. Or maybe we must write
>     to some other registers on the module that yield this behaviour?
> 
>     RR
> 
> 
> 
>     said harti wrote:
>      > Hi Rolland,
>      >
>      > Can you please tell me how can i modifie the master_test program in
>      > order to get Inputs value for the EL1004 or EL3162 ?
>      >
>      > Thanks,
>      >
>      > Said
>      >
>      > */Roland Tollenaar /* a ?crit :
>      >
>      > Hi Said,
>      >
>      > as mentioned I am having the same problem but I don't have twincat.
>      >
>      > Do your outputs respond properly when you set them with twincat
>     and get
>      > the below frames?
>      >
>      > Regards,
>      >
>      > Roland
>      >
>      > said harti wrote:
>      > > Hello,
>      > >
>      > > I did'nt resolve my problem yet, my master_test program turn
>      > perfectely,
>      > > but the LEDs for the EL4102 and the EL2004 don't switch on, (my
>      > code is
>      > > posted on my last message)
>      > >
>      > > for the some data transmeted to the beckhoff modules (5v = 03FFF to
>      > > EL4102 and all DO to 1 = 0x0F to EL2004), this is the difference
>      > between
>      > > captered frames
>      > >
>      > > 1: between my master and the Beckhoff modules :
>      > >
>      > > 0000 ff ff ff ff ff ff 02 00 00 00 00 00 88 a4 0f 10
>      > > ................
>      > > 0010 0c 5e 00 00 01 00 03 00 04 00 ff 3f 00 00 0f 00
>     .^.........?....
>      > > 0020 00 07 00 10 00 02 01 00 00 00 00 00 00 00 00 00
>     ................
>      > > 0030 00 00 00 00 00 00 00 00 00 00 00 00 ............
>      > >
>      > >
>      > > and this is the captured frame between the twincat tools on my
>      > laptop
>      > > and the beckhoff modules :
>      > >
>      > > 0000 01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10
>     ................
>      > > 0010 0b 00 00 00 01 00 05 80 00 00 ff 3f 00 00 0f 00
>     .^.........??...
>      > > 0020 00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00
>     ................
>      > > 0030 00 00 30 01 02 00 00 00 00 00 00 00 ............
>      > >
>      > > thanks to tell me what i am possibly wrong
>      > >
>      > > Best Regards
>      > >
>      > > Said HARTI
>      > >
>      > >
>      >
>     ------------------------------------------------------------------------
>      > > D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos
>      > > questions ! Profitez des connaissances, des opinions et des
>      > exp?riences
>      > > des internautes sur Yahoo! Questions/R?ponses
>      > > .
>      > >
>      > >
>      > >
>      >
>     ------------------------------------------------------------------------
>      > >
>      > > _______________________________________________
>      > > Ethercatmaster-users mailing list
>      > > Ethercatmaster-users at lists.berlios.de
>      > > https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>      >
>      >
>      >
>     ------------------------------------------------------------------------
>      > Stockage illimit? de vos mails avec Yahoo! Mail. Changez
>     aujourd'hui de
>      > mail !
> 
> 
> ------------------------------------------------------------------------
> D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos 
> questions ! Profitez des connaissances, des opinions et des exp?riences 
> des internautes sur Yahoo! Questions/R?ponses 
> <http://fr.rd.yahoo.com/evt=42054/*http://fr.answers.yahoo.com>.


From rolandtollenaar at gmail.com  Mon Jul 16 18:18:38 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Mon, 16 Jul 2007 16:18:38 +0000
Subject: [Ethercatmaster-users] RE : Re: RE : Re: RE : Re: Slaves
	Parameters!!
In-Reply-To: <bc4264770707160544o74ee061bs87a620baab284286@mail.gmail.com>
References: <bc4264770707160359l75eeb6ccrccf52e0ae13f6579@mail.gmail.com>
	<443480.55769.qm@web37301.mail.mud.yahoo.com>
	<bc4264770707160544o74ee061bs87a620baab284286@mail.gmail.com>
Message-ID: <bc4264770707160918md73deffi99b9966a7c35f1c0@mail.gmail.com>

Hi Said,

The inputs are working as they should. Here is my master test code
whereby if I apply and remove the input on the last module, I can see
instantaneous response in the value of msg[7]

The ouputs still only flash on briefly once.

Regards,

Roland Tollenaar.

#include <posix/pthread.h>
#include <signal.h>
#include <sys/mman.h>

#include <al/ethercat_master.h>
#include <al/ethercat_AL.h>
#include <al/ethercat_process_data.h>
#include <ethercat/ethercat_xenomai_drv.h>
#include <ethercat/netif.h>
#include <dll/ethercat_dll.h>
#include <dll/ethercat_frame.h>
#include <dll/ethercat_slave_memory.h>
#include <al/ethercat_slave_conf.h>
#include <al/ethercat_slave_handler.h>

struct netif *ni;

///SlaveConfig EK1100 [Bus Coupler]
EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig
EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL2004(1) [Digital Output]
//[A slave configuration consists of a fmmu-config, a process data
(pd) config and optionally a mailbox config]
//fmmu (fieldbus memory management unit) config container (handle?)
EtherCAT_FMMU_Config fmmu_config_EL2004_1(1);//arg=number of FMMU's.
Some modules take more than one if e.g. they have in and outputs.
//not sure what this is doing (Seems to be actual fmmu config which
gets linked to the handle created above)
EC_FMMU fmmu0_EL2004_1(0x00010000,1,0,3,0x0F00,0,false,true,true);
//logical start address (start at 0x00010000 otherwise msg sequence
becomes messy), # bytes used, start bit, end bit, physical address,
physical start bit, read-enable, write-enable, activate-module
//On logical start address: the first byte in the process data message
corresponds to the byte in 0x00010000 , the second with 0x00010001 and
so on
//Start inputs logical addresses out of this range, say on 0x00080000
//process data config (Again seems to be a handle)
EtherCAT_PD_Config pd_config_EL2004_1(1); //argument=length
//synchronisation manager
EC_SyncMan syncman0_EL2004_1(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
//compile the slave configuration
EtherCAT_SlaveConfig
EC_EL2004_1(0x7d43052,0x100000,0x03ec,&fmmu_config_EL2004_1,&pd_config_EL2004_1);
//product code, revision number, physical address, FMMU-configuration
instance, process data configuration instance, [optional mailbox
configutation]

///SlaveConfig EL2004(2) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_2(1);
EC_FMMU fmmu0_EL2004_2(0x00010000,1,4,7,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_2(1);
EC_SyncMan syncman0_EL2004_2(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_2(0x7d43052,0x100000,0x03ed,&fmmu_config_EL2004_2,&pd_config_EL2004_2);

///SlaveConfig EL2004(3) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_3(1);
EC_FMMU fmmu0_EL2004_3(0x00010001,1,0,3,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_3(1);
EC_SyncMan syncman0_EL2004_3(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_3(0x7d43052,0x100000,0x03ee,&fmmu_config_EL2004_3,&pd_config_EL2004_3);

///SlaveConfig EL2004(4) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_4(1);
EC_FMMU fmmu0_EL2004_4(0x00010001,1,4,7,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_4(1);
EC_SyncMan syncman0_EL2004_4(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_4(0x7d43052,0x100000,0x03ef,&fmmu_config_EL2004_4,&pd_config_EL2004_4);


///SlaveConfig EL1014(1) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_1(1);
EC_FMMU fmmu0_EL1014_1(0x00010006,1,0,3,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_1(1);
EC_SyncMan syncman0_EL1014_1(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_1(0x03F63052,0x100000,0x03f0,&fmmu_config_EL1014_1,
&pd_config_EL1014_1);

///SlaveConfig EL1014(2) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_2(1);
EC_FMMU fmmu0_EL1014_2(0x00010006,1,4,7,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_2(1);
EC_SyncMan syncman0_EL1014_2(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_2(0x03F63052,0x100000,0x03f1,&fmmu_config_EL1014_2,
&pd_config_EL1014_2);

///SlaveConfig EL1014(3) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_3(1);
EC_FMMU fmmu0_EL1014_3(0x00010007,1,0,3,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_3(1);
EC_SyncMan syncman0_EL1014_3(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_3(0x03F63052,0x100000,0x03f2,&fmmu_config_EL1014_3,
&pd_config_EL1014_3);

///SlaveConfig EL1014(4) [Digital Input]
EtherCAT_FMMU_Config fmmu_config_EL1014_4(1);
EC_FMMU fmmu0_EL1014_4(0x00010007,1,4,7,0x1000,0,true,false,true);
EtherCAT_PD_Config pd_config_EL1014_4(1);
EC_SyncMan syncman0_EL1014_4(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL1014_4(0x03F63052,0x100000,0x03f3,&fmmu_config_EL1014_4,
&pd_config_EL1014_4);


///SlaveConfig EL4132
EtherCAT_FMMU_Config fmmu_config_EL4132(2);
EC_FMMU fmmu0_EL4132(0x00080002,1,0,0,0x080D,0x00,true,false,true);
EC_FMMU fmmu1_EL4132(0x00010002,4,0,7,0x1000,0x00,false,true,true);

EC_SyncMan syncman_mbx0_EL4132(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman_mbx1_EL4132(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_MbxConfig mbx_conf_EL4132 = {syncman_mbx0_EL4132, syncman_mbx1_EL4132};

EtherCAT_PD_Config pd_config_EL4132(2);
EC_SyncMan syncman0_EL4132(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman1_EL4132(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);

EtherCAT_SlaveConfig
EC_EL4132(0x10243052,0x00,0x03f4,&fmmu_config_EL4132,&pd_config_EL4132,&mbx_conf_EL4132);




static void init_slave_db() {
	///create slave database	
	EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(10);
//argument=#slaves

	//EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(2);
	//fmmu_config_EL4102[0] = fmmu0_EL4102;
	//fmmu_config_EL4102[1] = fmmu1_EL4102;
	//pd_config_EL4102[0] = syncman0_EL4102;
	//pd_config_EL4102[1] = syncman1_EL4102;

	///Connect actual fmmu and process data config to respective handles
for EL 2004 (DO)
	fmmu_config_EL2004_1[0] = fmmu0_EL2004_1;
	fmmu_config_EL2004_2[0] = fmmu0_EL2004_2;
	fmmu_config_EL2004_3[0] = fmmu0_EL2004_3;
	fmmu_config_EL2004_4[0] = fmmu0_EL2004_4;
	pd_config_EL2004_1[0]   = syncman0_EL2004_1;
	pd_config_EL2004_2[0]   = syncman0_EL2004_2;
	pd_config_EL2004_3[0]   = syncman0_EL2004_3;
	pd_config_EL2004_4[0]   = syncman0_EL2004_4;
	
	///Connect actual fmmu and process data config to respective handles
for EL 1014 (DI)
	fmmu_config_EL1014_1[0] =fmmu0_EL1014_1;
	fmmu_config_EL1014_2[0] =fmmu0_EL1014_2;
	fmmu_config_EL1014_3[0] =fmmu0_EL1014_3;
	fmmu_config_EL1014_4[0] =fmmu0_EL1014_4;
	pd_config_EL1014_1[0]   =syncman0_EL1014_1;
	pd_config_EL1014_2[0]   =syncman0_EL1014_2;
	pd_config_EL1014_3[0]   =syncman0_EL1014_3;
	pd_config_EL1014_4[0]   =syncman0_EL1014_4;

	///Connect actual config to fmmu and processdata config handle for
EL4132 (analog output modules)
	fmmu_config_EL4132[0] = fmmu0_EL4132;
	fmmu_config_EL4132[1] = fmmu1_EL4132;
	pd_config_EL4132[0]   = syncman0_EL4132;
	pd_config_EL4132[1]   = syncman1_EL4132;	



	///Commit the slave config objects to the slave database
	slave_db->set_conf(&EC_EK1100,0);
	slave_db->set_conf(&EC_EL2004_1,1);
	slave_db->set_conf(&EC_EL2004_2,2);
	slave_db->set_conf(&EC_EL2004_3,3);
	slave_db->set_conf(&EC_EL2004_4,4);
	slave_db->set_conf(&EC_EL1014_1,5);
	slave_db->set_conf(&EC_EL1014_2,6);
	slave_db->set_conf(&EC_EL1014_3,7);
	slave_db->set_conf(&EC_EL1014_4,8);
	slave_db->set_conf(&EC_EL4132,9);
	
}

static void* run_master(void * arg) {
	
	///get network handle
	ni = init_ec((char*)arg);

	///initialize the slave db (calls the above defined function of course)
	init_slave_db();
	
	if(ni != 0) {
		printf("Attach netif \n\n");
		EtherCAT_DataLinkLayer::instance()->attach(ni);  //attach to what?
		printf("Master initializing \n\n");
		EtherCAT_Master * EM = EtherCAT_Master::instance();

		///EK1100 to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
		printf("Setting EK1100 to OP STATE\n");
		if(sh_ek1100->to_state(EC_OP_STATE))
			printf("EK1100 succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EK1100 in OP STATE\n");

		///EL2004(1) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el2004_1 = EM->get_slave_handler(0x03ec);
		printf("Setting EL2004(1) to OP STATE\n");
		if(sh_el2004_1->to_state(EC_OP_STATE))
			printf("EL2004(1) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL2004(1) in OP STATE\n");	

		///EL2004(2) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el2004_2 = EM->get_slave_handler(0x03ed);
		printf("Setting EL2004(2) to OP STATE\n");
		if(sh_el2004_2->to_state(EC_OP_STATE))
			printf("EL2004(2) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL2004(2) in OP STATE\n");

		///EL2004(3) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el2004_3 = EM->get_slave_handler(0x03ee);
		printf("Setting EL2004(3) to OP STATE\n");
		if(sh_el2004_3->to_state(EC_OP_STATE))
			printf("EL2004(3) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL2004(3) in OP STATE\n");

		///EL2004(4) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el2004_4 = EM->get_slave_handler(0x03ef);
		printf("Setting EL2004(4) to OP STATE\n");
		if(sh_el2004_4->to_state(EC_OP_STATE))
			printf("EL2004(4) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL2004(4) in OP STATE\n");

		///EL1014(1) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el1014_1 = EM->get_slave_handler(0x03f0);
		printf("Setting EL1014(1) to OP STATE\n");
		if(sh_el1014_1->to_state(EC_OP_STATE))
			printf("EL1014(1) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL1014(1) in OP STATE\n");

		///EL1014(2) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el1014_2 = EM->get_slave_handler(0x03f1);
		printf("Setting EL1014(2) to OP STATE\n");
		if(sh_el1014_2->to_state(EC_OP_STATE))
			printf("EL1014(2) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL1014(2) in OP STATE\n");

		///EL1014(3) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el1014_3 = EM->get_slave_handler(0x03f2);
		printf("Setting EL1014(3) to OP STATE\n");
		if(sh_el1014_3->to_state(EC_OP_STATE))
			printf("EL1014(3) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL1014(3) in OP STATE\n");

		///EL1014(4) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el1014_4 = EM->get_slave_handler(0x03f3);
		printf("Setting EL1014(4) to OP STATE\n");
		if(sh_el1014_4->to_state(EC_OP_STATE))
			printf("EL1014(4) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL1014(4) in OP STATE\n");

		///EL4132 to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el4132 = EM->get_slave_handler(0x03f4);
		printf("Setting EL4132 to OP STATE\n");
		if(sh_el4132->to_state(EC_OP_STATE))
			printf("EL4132 succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL4132 in OP STATE\n");


				
		printf("AL initializing \n\n");
		EtherCAT_AL * AL = EtherCAT_AL::instance();
		
		///Set digital output
		unsigned char msg[8] = {0xff,0xff, 0xff, 0x3f, 0x00, 0x00, 0x00,
0x00 };  //first two bytes are the outputs, second two are the analog
output, 5th is the input of the AO module, last two are DI (1014)
		if(AL->isReady()) {
			printf("Test: outputs: \n\n");	
			int count = 0;
			while(count<100000) {
				msg[0]=0xff;
				msg[1]=0xff;
				msg[2]=0xff;
				msg[3]=0x3f;
				msg[4]=0x00;
				msg[5]=0x00;
				
				if(EM->txandrx_PD(sizeof(msg),msg)){
					printf("msg[7] %d ",msg[7]);
				}
				else{
					printf("txandrx failed: \n\n");
				}
			
				count++;
			}
		//	printf("Test done.\n");
		}
		


		close_socket(ni);
		
	}
}

void catch_signal(int sig)
{
   if(ni != 0)
		close_socket(ni);
	exit(1);
}

int main(int argc, char** argv)
{

	signal(SIGTERM, catch_signal);
   signal(SIGINT, catch_signal);
   signal(SIGHUP, catch_signal);
	mlockall(MCL_CURRENT|MCL_FUTURE);

	if (argc < 2) {
        printf("usage: %s <interface>\n", argv[0]);
        return 0;
    }

	pthread_t xenothread;
	pthread_attr_t xenothread_attr;

	//Set attributes of thread
	pthread_attr_init (& xenothread_attr);

	//Start thread
	if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1]) != 0) {
		printf("Cannot create thread EtherCatThread.\n");
		exit(1);
	}
   pthread_join( xenothread, 0 );
	return 0;
}


On 7/16/07, roland Tollenaar <rolandtollenaar at gmail.com> wrote:
> Hi Said,
>
> In the latest example Tom posted he places the write in a separate
> thread. Perhaps that has got something to do with it. Why the 5V stays
> up I don;t know.
>
> What we do know is that since you and I have the same problem, its
> unlikely to be something wrong with the hardware. :)
>
> Roland
>
> On 7/16/07, said harti <harti_said at yahoo.fr> wrote:
> > Exactly Rollan,
> >
> > I have a same question :(,
> >
> > How we can make the outputs stay up ?
> >
> > my AO (the EL4102) stay up at 5V, but all DO flashing on briefly, and i
> > don't know how we can make it stay up !!!!   :(
> >
> > Regards,
> >
> > Said
> >
> > roland Tollenaar <rolandtollenaar at gmail.com> a ?crit :
> >  Hi Said,
> >
> >
> > Thanks for this. Using this I managed to establish what was wrong.
> > Apparently there is a relation between the exact logical start
> > addresses and the place in the pd buffer.
> >
> > I now also have all 16 outputs flashing on briefly. Only thing is,
> > they don't want to stay on. Do you have any idea how to make the
> > outputs stay up?
> >
> > Regards,
> >
> > Roland
> >
> > On 7/16/07, said harti wrote:
> > > I have some good news about our problem,
> > >
> > > i have change my last code like this :
> > >
> > > ///Set Channel 1 to 5V
> > > //unsigned char msg[2] = {0xff, 0x3f};
> > >
> > > unsigned char msg[5] = {0xff, 0x3f, 0x00, 0x00, 0x0f};
> > >
> > > if(AL->isReady()) {
> > > printf("Test: Set Channel 1 to 5V: \n\n");
> > > printf("Test: Set all DO to 1 \n\n");
> > > int count = 0;
> > > while(count<100000) {
> > > EM->txandrx_PD(sizeof(msg),msg);
> > > count++;
> > > }
> > >
> > > and, now, i got 5v (3FFF) and all DO switch on quickly.
> > >
> > > so, in order to inswer to your question, i have exactly the some logical
> > > adress, and exactly the some all parameters on TC and EML.
> > >
> > > So, i think, the problem is that i tryed to send a bad message : unsigned
> > > char msg[3] = {0xff, 0x3f, 0x0f};
> > >
> > > i have modified this message to : unsigned char msg[5] = {0xff, 0x3f,
> > 0x00,
> > > 0x00, 0x0f};
> > >
> > >
> > > and this is the captured frame :
> > >
> > >
> > > 0000 ff ff ff ff ff ff 02 00 00 00 00 00 88 a4 11 10 ................
> > > 0010 0c 51 00 00 01 00 05 00 04 00 ff 3f 00 00 0f 04 .Q.........?....
> > > 0020 00 00 00 00 00 01 01 00 00 00 00 00 00 00 00 00 ................
> > > 0030 00 00 00 00 00 00 00 00 00 00 00 00 ............
> > >
> > > and if i hope to set the second channel to 5 v too : unsigned char msg[5]
> > =
> > > {0xff, 0x3f, 0xff, 0x3f, 0x0f};
> > >
> > > that's all what i have modified in order to turn on my outputs.
> > >
> > > Said
> > >
> > >
> > > Roland Tollenaar a ?crit :
> >
> > > Hi Said,
> > >
> > > Afraid not I am as desparate as you are. And its seems like the EML
> > > chaps have taken leaven and are bathing in the sun. :(
> > >
> > > I have done some disecting below, to determine what we can try next and
> > > to make things faster for the EML chaps when they eventually return.
> > >
> > > Apparently the frame for simple ethercat communication is supposed to
> > > ahve the destination address in the first 48 bits of the frame. Here
> > > already our EML frame seems to be incorrect.
> > >
> > > EML: ff ff ff ff ff ff
> > >
> > > as opposed to
> > >
> > > TC: 01 01 05 01 00 00
> > >
> > > next come the source (also 48 bit)
> > >
> > > EML: 02 00 00 00 00 00
> > >
> > > TC: 02 00 7b 56 00 9a
> > >
> > > then the Ethertype (16 bit)
> > >
> > > EML:88 a4
> > > TC: 88 a4
> > >
> > > (Hey these are the same too!) :)
> > >
> > > then comes the ethercat data header (16 bit)
> > >
> > > EML: 0f 10
> > > TC: 2c 10
> > >
> > > (first 11 bit are the length, then 1 bit reserved then 4 bit Type
> > > [supposed to be 1])
> > >
> > > The last 32 bit are the FCS
> > >
> > > EML:00 00 00 00
> > > TC:00 00 00 00
> > >
> > > so what is inbetween is are the datagrams:
> > >
> > > EML:
> > > 0c 5e 00 00 01 00 03 00 04 00 XXX ff 3f 00 00 0f 00 00 07 00 10 00 02
> > > 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
> > >
> > >
> > > TC:
> > > 0b 00 00 00 01 00 05 80 00 00 XXX ff 3f 00 00 0f 00 00 0a 00 00 00 08
> > > 00 01 80 00 00 00 00 00 07 00 00 00 30 01 02 00 00 00 00 00 00 00
> > >
> > >
> > >
> > > Each datagram consists of a 10 byte (80 bit) headerfollowed by
> > > unspecified length of data and a 16 bit working counter at the end.
> > >
> > > So presumanbly we can compare the headers
> > > Cmd Idx Address
> > > EML: 0c XXX 5e XXX 00 00 01 00 XXX 03 00 04 00
> > > TC: 0b XXX 00 XXX 00 00 01 00 XXX 05 80 00 00
> > >
> > > So at least the first address is the same, but the command and index
> > > differ. What does this mean? I also don;t recognise the address?
> > >
> > >
> > > anyway then we can see that there is the only recognizable data
> > >
> > > EML: ff 3f 00 00 0f
> > > TC: ff 3f 00 00 0f
> > >
> > > And at what point another datagram header follows would have to be
> > > derived from the length in the datagram header above. But this is more
> > > something for the EML chaps to look at.
> > >
> > > Can you tell whether your logical and fixed addresses are the same in
> > > the TWINCAT experiment as in the EML experiment? Getting them the same
> > > would be a good start to determine where the important differences might
> > be.
> > >
> > > HTH.
> > >
> > > Roland
> > >
> > > said harti wrote:
> > > >
> > > > Exactly Rolland, my outputs respond correctely when i set them with the
> > > > twincat tool, and i got this frame :
> > > >
> > > > 0000 01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10................
> > > > 0010 0b 00 00 00 01 00 05 80 00 00 ff 3f 00 00 0f 00.^.........??...
> > > > 0020 00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00................
> > > > 0030 00 00 30 01 02 00 00 00 00 00 00 00
> > > >
> > > > do you have some ideas pleaze for how can i resolve this misterious
> > > problem ?!!!!
> > > >
> > > >
> > > >
> > > > */Roland Tollenaar /* a ?crit :
> > >
> > > >
> > > > Hi Said,
> > > >
> > > > as mentioned I am having the same problem but I don't have twincat.
> > > >
> > > > Do your outputs respond properly when you set them with twincat and get
> > > > the below frames?
> > > >
> > > > Regards,
> > > >
> > > > Roland
> > > >
> > > > said harti wrote:
> > > > > Hello,
> > > > >
> > > > > I did'nt resolve my problem yet, my master_test program turn
> > > > perfectely,
> > > > > but the LEDs for the EL4102 and the EL2004 don't switch on, (my
> > > > code is
> > > > > posted on my last message)
> > > > >
> > > > > for the some data transmeted to the beckhoff modules (5v = 03FFF to
> > > > > EL4102 and all DO to 1 = 0x0F to EL2004), this is the difference
> > > > between
> > > > > captered frames
> > > > >
> > > > > 1: between my master and the Beckhoff modules :
> > > > >
> > > > > 0000 ff ff ff ff ff ff 02 00 00 00 00 00 88 a4 0f 10
> > > > > ................
> > > > > 0010 0c 5e 00 00 01 00 03 00 04 00 ff 3f 00 00 0f 00 .^.........?....
> > > > > 0020 00 07 00 10 00 02 01 00 00 00 00 00 00 00 00 00 ................
> > > > > 0030 00 00 00 00 00 00 00 00 00 00 00 00 ............
> > > > >
> > > > >
> > > > > and this is the captured frame between the twincat tools on my
> > > > laptop
> > > > > and the beckhoff modules :
> > > > >
> > > > > 0000 01 01 05 01 00 00 02 00 7b 56 00 9a 88 a4 2c 10 ................
> > > > > 0010 0b 00 00 00 01 00 05 80 00 00 ff 3f 00 00 0f 00 .^.........??...
> > > > > 0020 00 0a 00 00 00 08 00 01 80 00 00 00 00 00 07 00 ................
> > > > > 0030 00 00 30 01 02 00 00 00 00 00 00 00 ............
> > > > >
> > > > > thanks to tell me what i am possibly wrong
> > > > >
> > > > > Best Regards
> > > > >
> > > > > Said HARTI
> > > > >
> > > > >
> > > >
> > >
> > ------------------------------------------------------------------------
> > > > > D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos
> > > > > questions ! Profitez des connaissances, des opinions et des
> > > > exp?riences
> > > > > des internautes sur Yahoo! Questions/R?ponses
> > > > > .
> > > > >
> > > > >
> > > > >
> > > >
> > >
> > ------------------------------------------------------------------------
> > > > >
> > > > > _______________________________________________
> > > > > Ethercatmaster-users mailing list
> > > > > Ethercatmaster-users at lists.berlios.de
> > > > >
> > >
> > https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> > > >
> > > >
> > > >
> > >
> > ------------------------------------------------------------------------
> > > > Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de
> > > > mail !
> > >
> > >
> > >
> > >
> > > ________________________________
> > > Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de
> > > mail !
> > >
> > >
> >
> >
> >
> >  ________________________________
> >  Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de
> > mail !
> >
> >
>


From tompanis at skynet.be  Mon Jul 16 20:41:26 2007
From: tompanis at skynet.be (Tom Panis)
Date: Mon, 16 Jul 2007 20:41:26 +0200
Subject: [Ethercatmaster-users] interacting with 1014 and 2004
In-Reply-To: <bc4264770707120819m2c0a7334q27146bd0f132086c@mail.gmail.com>
References: <bc4264770707100952p7b57c3f4r70058fdb7e2346ee@mail.gmail.com>	
	<4696333E.10108@skynet.be>
	<bc4264770707120819m2c0a7334q27146bd0f132086c@mail.gmail.com>
Message-ID: <469BBBD6.30300@skynet.be>


roland Tollenaar wrote:
> Hi,
>
> I must be misunderstanding something. I have copied my modified
> master_test here where I try to set the outputs. There is
> communication, everything seems to be fine, but the outputs are not
> coming up. At least I don;t see the leds go on.

In your configuration, you assign your digital outputs starting from 
address 0x0001000A. But in your main program, you put the process data 
for the digital output at the first two bytes of your local buffer, 
which represents address 0x00010000 and 0x00010001 from the logical 
memory. So the main problem is you're putting the process data at a 
certain location, but you're telling the modules to look somewhere else 
for the process data.

You have to make a bigger buffer and put the process data at the right 
location. This would look something like this:

unsigned char[13] msg;
msg[10] = 0x01;   // This byte represents digital outputs EL2004_1 and 
EL2004_2 (the size of a char is one byte)

You've got the same problem for the inputs. As I mentioned in my 
previous mail, you'll find the inputs at the 12th byte. This would look 
something lik this:

unsigned char input = msg[11];   //This byte represents digital inputs 
EL1014_1 and EL1012_2

>
> Surely this should work?

Quite sure :-)

>
> Roland
>
> On 7/12/07, Tom Panis <tompanis at skynet.be> wrote:
>>
>> roland Tollenaar wrote:
>> > Hi,
>> >
>> > Is there anyone with some code examples of how the process data is
>> > exchanged with eml with the DO modules 2004 and DI modules 1014?
>> > Possibly also the 4132 Analog output (+/-10V)
>> >
>> > This would help tremendously.
>> >
>> >
>> >
>>
>> In this example, there's put a sine at the analog output and one digital
>> output is put on and off.
>> First there's made a buffer. This buffer represents the logical memory
>> starting from 0x0001000. (In the future we may change this, so you can
>> chose yourself what the start address of this buffer is).
>> Since, in this example, the logical start address of the analog output
>> is 0x0001000 and the length of the process data is 4 byte, the first
>> four bytes of the buffer have to be filled with the output values, 2
>> bytes for every output. The resolution is 16 bit (65535 steps). -10 V
>> corresponds with the decimal value -32769 or 0x8001, 0 V corresponds
>> with the decimal value 0 or 0x0000, +10 V corresponds with the decimal
>> value +32767 or 0x7FFF.
>>
>> All this information can be found in the chm files of the modules. These
>> files can be found on the beckhoff website:
>> http://www.beckhoff.com/english.asp?download/ethercat.htm
>>
>> The last byte of the buffer is used to control the digital outputs The
>> process data is 4 bit. Each bit controls a digital output. In this
>> example only the one output is controlled during process.
>>
>> If you want to read data from input modules (there isn't any in my
>> example), you don't have to do much:
>> While this frame with process data is send, the input modules will write
>> there data to this frame. So when the frame returns, the input data from
>> the modules will be in the received frame. If you've assigned the
>> logical address 0x0001000C to a digital input, the digital input can be
>> found on byte 12 of the local buffer (local buffer starts at
>> 0x00010000). Note that you have to make sure the local buffer is big
>> enough (13 bytes in this case).
>>
>> Sending a buffer can be done with the txandrx function of the
>> EtherCAT_Master.
>>
>> I hope this helps you out a bit.
>>
>>


From tompanis at skynet.be  Mon Jul 16 20:41:33 2007
From: tompanis at skynet.be (Tom Panis)
Date: Mon, 16 Jul 2007 20:41:33 +0200
Subject: [Ethercatmaster-users] order of consequence?
In-Reply-To: <bc4264770707121013g1622d78n44e8c9c88c0706ab@mail.gmail.com>
References: <bc4264770707121013g1622d78n44e8c9c88c0706ab@mail.gmail.com>
Message-ID: <469BBBDD.6000903@skynet.be>


roland Tollenaar wrote:
> Hi,
>
> Once more with regard tot he outputs which refuse to respond. There is
> one slave which is not configured and which leave in non operational
> state. This is the 4132 (analog outputs) because I have no idea how to
> configure it. The 4102 in Tom's example uses mailboxes and all that so
> I thought it is best to leave it out until the rest is running.
>
> However it IS physically connected. Is it possible that this is
> causing the outputs not to respond? But if so, why would the
> configuraion be successful and it be possible to set all the other
> slaves in the operational state?
>   

No, a wrong configuration of a slave, doesn't make the whole network to 
fail. All the other slaves will keep working fine
> Does the physical order in which the modules are placed on the rack
> make any difference?
>   
The physical order doesn't make a difference at all. You just have to 
make sure the coupler is the first and the end terminal is the last.
> Regards,
>
> Roland
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>
>   


From tompanis at skynet.be  Mon Jul 16 21:17:52 2007
From: tompanis at skynet.be (Tom Panis)
Date: Mon, 16 Jul 2007 21:17:52 +0200
Subject: [Ethercatmaster-users] RE : Re: RE : Re: RE : Re:
	Slaves	Parameters!!
In-Reply-To: <bc4264770707160918md73deffi99b9966a7c35f1c0@mail.gmail.com>
References: <bc4264770707160359l75eeb6ccrccf52e0ae13f6579@mail.gmail.com>	<443480.55769.qm@web37301.mail.mud.yahoo.com>	<bc4264770707160544o74ee061bs87a620baab284286@mail.gmail.com>
	<bc4264770707160918md73deffi99b9966a7c35f1c0@mail.gmail.com>
Message-ID: <469BC460.4010203@skynet.be>

roland Tollenaar wrote:
> Hi Said,
>
> The inputs are working as they should. Here is my master test code
> whereby if I apply and remove the input on the last module, I can see
> instantaneous response in the value of msg[7]
>
> The ouputs still only flash on briefly once.
>   
To keep the digital output on, you have to keep sending the message. In 
your current program, you only send the message briefly. Once "count" 
reaches 100000, the while loop stops and the program exits. In the other 
example I posted, as you noticed, the sending and receiving was put in a 
separate thread, a periodic thread. In this way the program keeps 
running until you press CTRL+C (signal catch). This is the way it should 
be done. I'll change the example in a couple of days and get rid of this 
bad example :-)
>
> 		
> 		///Set digital output
> 		unsigned char msg[8] = {0xff,0xff, 0xff, 0x3f, 0x00, 0x00, 0x00,
> 0x00 };  //first two bytes are the outputs, second two are the analog
> output, 5th is the input of the AO module, last two are DI (1014)
> 		if(AL->isReady()) {
> 			printf("Test: outputs: \n\n");	
> 			int count = 0;
> 			while(count<100000) {
> 				msg[0]=0xff;
> 				msg[1]=0xff;
> 				msg[2]=0xff;
> 				msg[3]=0x3f;
> 				msg[4]=0x00;
> 				msg[5]=0x00;
> 				
> 				if(EM->txandrx_PD(sizeof(msg),msg)){
> 					printf("msg[7] %d ",msg[7]);
> 				}
> 				else{
> 					printf("txandrx failed: \n\n");
> 				}
> 			
> 				count++;
> 			}
> 		//	printf("Test done.\n");
> 		}
> 		
>
>
> 		close_socket(ni);
> 		
> 	}
> }
>
>   


From tompanis at skynet.be  Mon Jul 16 21:26:11 2007
From: tompanis at skynet.be (Tom Panis)
Date: Mon, 16 Jul 2007 21:26:11 +0200
Subject: [Ethercatmaster-users] RE : Re: RE : Re: RE :
	Re:	Slaves	Parameters!!
In-Reply-To: <469BC460.4010203@skynet.be>
References: <bc4264770707160359l75eeb6ccrccf52e0ae13f6579@mail.gmail.com>	<443480.55769.qm@web37301.mail.mud.yahoo.com>	<bc4264770707160544o74ee061bs87a620baab284286@mail.gmail.com>	<bc4264770707160918md73deffi99b9966a7c35f1c0@mail.gmail.com>
	<469BC460.4010203@skynet.be>
Message-ID: <469BC653.3000301@skynet.be>

Tom Panis wrote:
> roland Tollenaar wrote:
>   
>> Hi Said,
>>
>> The inputs are working as they should. Here is my master test code
>> whereby if I apply and remove the input on the last module, I can see
>> instantaneous response in the value of msg[7]
>>
>> The ouputs still only flash on briefly once.
>>   
>>     
> To keep the digital output on, you have to keep sending the message. In 
> your current program, you only send the message briefly. Once "count" 
> reaches 100000, the while loop stops and the program exits. In the other 
> example I posted, as you noticed, the sending and receiving was put in a 
> separate thread, a periodic thread. In this way the program keeps 
> running until you press CTRL+C (signal catch). This is the way it should 
> be done. I'll change the example in a couple of days and get rid of this 
> bad example :-)
>   

And there's another big problem when you only use a while loop instead 
of a periodic thread: it eats a lot of cpu time. You'll see your system 
will react very slow when only using a while loop.

>> 		
>> 		///Set digital output
>> 		unsigned char msg[8] = {0xff,0xff, 0xff, 0x3f, 0x00, 0x00, 0x00,
>> 0x00 };  //first two bytes are the outputs, second two are the analog
>> output, 5th is the input of the AO module, last two are DI (1014)
>> 		if(AL->isReady()) {
>> 			printf("Test: outputs: \n\n");	
>> 			int count = 0;
>> 			while(count<100000) {
>> 				msg[0]=0xff;
>> 				msg[1]=0xff;
>> 				msg[2]=0xff;
>> 				msg[3]=0x3f;
>> 				msg[4]=0x00;
>> 				msg[5]=0x00;
>> 				
>> 				if(EM->txandrx_PD(sizeof(msg),msg)){
>> 					printf("msg[7] %d ",msg[7]);
>> 				}
>> 				else{
>> 					printf("txandrx failed: \n\n");
>> 				}
>> 			
>> 				count++;
>> 			}
>> 		//	printf("Test done.\n");
>> 		}
>> 		
>>
>>
>> 		close_socket(ni);
>> 		
>> 	}
>> }
>>
>>   
>>     
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>
>   


From harti_said at yahoo.fr  Mon Jul 16 17:20:12 2007
From: harti_said at yahoo.fr (said harti)
Date: Mon, 16 Jul 2007 17:20:12 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re:  interacting with 1014 and 2004
In-Reply-To: <469B85DB.6050309@gmail.com>
Message-ID: <513016.18569.qm@web37302.mail.mud.yahoo.com>

In my case, i don't want to use sinus, or period etc....I want just turn on my button connected to the EL1004  (set on one DI) and see this reel value on my scren,

if you get right your master test before , don't hesitate to  contact me dear rolland,
 
 Regards,
 
 Said 

this is my new program test after some modification, but i got some errors 

#include <posix/pthread.h>
#include <signal.h>
#include <sys/mman.h>

#include <al/ethercat_master.h>
#include <al/ethercat_AL.h>
#include <al/ethercat_process_data.h>
#include <ethercat/ethercat_xenomai_drv.h>
#include <ethercat/netif.h>
#include <dll/ethercat_dll.h>
#include <dll/ethercat_frame.h>
#include <dll/ethercat_slave_memory.h>
#include <al/ethercat_slave_conf.h>
#include <al/ethercat_slave_handler.h>

struct netif *ni;

///SlaveConfig EK1100
EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL4102

///[A slave configuration consists of a fmmu-config, a process data (pd) config and optionally a mailbox config]

EtherCAT_FMMU_Config fmmu_config_EL4102(2);///arg=number of FMMU's.Some modules take more than one if e.g. they have in and outputs.
///not sure what this is doing (Seems to be actual fmmu config which gets linked to the handle created above)
///fmmu (fieldbus memory management unit) config container (handle?)

///logical start address, # bytes used, start bit, end bit, physical address, physical start bit, read-enable, write-enable, activate-module

EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);

EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102, syncman_mbx1_EL4102};

///process data config (Again seems to be a handle)

EtherCAT_PD_Config pd_config_EL4102(2);///argument=length
EC_SyncMan syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);

///compile the slave configuration

EtherCAT_SlaveConfig EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);

///Modif
///SlaveConfig EL2004
EtherCAT_FMMU_Config fmmu_config_EL2004(1);
EC_FMMU
fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);

EtherCAT_PD_Config pd_config_EL2004(1);
EC_SyncMan syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig EC_EL2004(0x7d43052,0x00100000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);

///SlaveConfig EL1004
EtherCAT_FMMU_Config fmmu_config_EL1004(1);
EC_FMMU
fmmu0_EL1004(0x00010800,0x0001,0x00,0x03,0x1000,0x00,true,false,true);

EtherCAT_PD_Config pd_config_EL1004(1);
EC_SyncMan syncman0_EL1004(0x1000,1,EC_QUEUED,EC_READ_FROM_MASTER,false,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);

///Fin Modif
static void init_slave_db() {

///create slave database

         EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(4); ///argument=#slaves


///Connect actual fmmu and process data config to respective handlesfor EL 4102 (AO)

         fmmu_config_EL4102[0] = fmmu0_EL4102;
         fmmu_config_EL4102[1] = fmmu1_EL4102;
         pd_config_EL4102[0] = syncman0_EL4102;
         pd_config_EL4102[1] = syncman1_EL4102;

///Connect actual fmmu and process data config to respective handles for EL 2004 (DO)

         fmmu_config_EL2004[0] = fmmu0_EL2004;///
         pd_config_EL2004[0] = syncman0_EL2004;///

///Connect actual fmmu and process data config to respective handles for EL 1004 (DI)

         fmmu_config_EL1004[0] = fmmu0_EL1004;///
         pd_config_EL1004[0] = syncman0_EL1004;///

///Commit the slave config objects to the slave database

     slave_db->set_conf(&EC_EK1100,0);
         slave_db->set_conf(&EC_EL4102,1);
         //slave_db->set_conf(&EC_EK1100,1);

///Commit the slave config objects to the slave database

         slave_db->set_conf(&EC_EL2004,2);///

///Commit the slave config objects to the slave database

         slave_db->set_conf(&EC_EL1004,3);///
 }

static void* run_master(void * arg) {
    
    ni = init_ec((char*)arg);
    init_slave_db();
    if(ni != 0) {
        printf("Attach netif \n\n");
        EtherCAT_DataLinkLayer::instance()->attach(ni);
        printf("Master initializing \n\n");
        EtherCAT_Master * EM = EtherCAT_Master::instance();
        printf("Getting slave handler\n");
        EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
        //sleep(1);
        printf("Setting EK1100 to OP STATE\n");
        if(sh_ek1100->to_state(EC_OP_STATE))
            printf("EK1100 succesfully set in OP STATE\n");
        else
            printf("\nfailed to set EK1100 in OP STATE\n");
        printf("Getting slave handler\n");
        EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
        printf("Setting EL4102 to OP STATE\n");
        if(sh_el4102->to_state(EC_OP_STATE))
            printf("EL4102 succesfully set in OP STATE\n");
        else
            printf("\nfailed to set EL4102 in OP STATE!!\n");
        
///Modif
           printf("Getting slave handler\n");
                EtherCAT_SlaveHandler * sh_el2004 = EM->get_slave_handler(0x03eb);
        printf("Setting EL2004 to OP STATE\n");
                 if(sh_el2004->to_state(EC_OP_STATE))
                         printf("EL2004 succesfully set in OP STATE\n");
                 else
                         printf("\nFailed to set EL2004 in OP STATE\n");

                printf("Getting slave handler\n");
                EtherCAT_SlaveHandler * sh_el1004 = EM->get_slave_handler(0x03ec);
        printf("Setting EL1004 to OP STATE\n");
                 if(sh_el1004->to_state(EC_OP_STATE))
                         printf("EL1004 succesfully set in OP STATE\n");
                 else
                         printf("\nFailed to set EL1004 in OP STATE\n");

///fin Modif
        printf("AL initializing \n\n");
        EtherCAT_AL * AL = EtherCAT_AL::instance();
        
        ///Set Channel 1 to 5V

     
        unsigned char msg[18];

        if(AL->isReady()) {

            printf("read without write: \n\n");///

            int count = 0;
            while(count<100000) {

for(int j=0;j<500;j++) {
printf("the DI msg[17] = 0X%x , the DO msg[4] = 0cX%x \n", msg[17], msg[4]);
EM->txandrx_PD(sizeof(msg),msg);
}
            
                count++;
            }
            printf("Test done.\n");
        }
        
        close_socket(ni);
        
    }
}

void catch_signal(int sig)
{
   if(ni != 0)
        close_socket(ni);
    exit(1);
}

int main(int argc, char** argv)
{

    signal(SIGTERM, catch_signal);
   signal(SIGINT, catch_signal);
   signal(SIGHUP, catch_signal);
    mlockall(MCL_CURRENT|MCL_FUTURE);

    if (argc < 2) {
        printf("usage: %s <interface>\n", argv[0]);
        return 0;
    }

    pthread_t xenothread;
    pthread_attr_t xenothread_attr;

    //Set attributes of thread
    pthread_attr_init (& xenothread_attr);

    //Start thread
    if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1]) != 0) {
        printf("Cannot create thread EtherCatThread.\n");
        exit(1);
    }
   pthread_join( xenothread, 0 );
    return 0;
}






Roland Tollenaar <rwatollenaar at gmail.com> a ?crit : Hi Said,

Check this mail out. Its explanation of reading the inputs seems clear 
enough to me (now that we have figured out how to sequence the send 
buffer) so I will try this later this evening. If I get it working I 
will send you my master test, but perhaps you will get it right before then.

Regards,

Roland.

Tom Panis wrote:
> 
> roland Tollenaar wrote:
>> Hi,
>>
>> Is there anyone with some code examples of how the process data is
>> exchanged with eml with the DO modules 2004 and DI modules 1014?
>> Possibly also the 4132 Analog output (+/-10V)
>>
>> This would help tremendously.
>>
>>
>>   
> 
> In this example, there's put a sine at the analog output and one digital 
> output is put on and off.
> First there's made a buffer. This buffer represents the logical memory 
> starting from 0x0001000. (In the future we may change this, so you can 
> chose yourself what the start address of this buffer is).
> Since, in this example, the logical start address of the analog output 
> is 0x0001000 and the length of the process data is 4 byte, the first 
> four bytes of the buffer have to be filled with the output values, 2 
> bytes for every output. The resolution is 16 bit (65535 steps). -10 V 
> corresponds with the decimal value -32769 or 0x8001, 0 V corresponds 
> with the decimal value 0 or 0x0000, +10 V corresponds with the decimal 
> value +32767 or 0x7FFF.
> 
> All this information can be found in the chm files of the modules. These 
> files can be found on the beckhoff website: 
> http://www.beckhoff.com/english.asp?download/ethercat.htm
> 
> The last byte of the buffer is used to control the digital outputs The 
> process data is 4 bit. Each bit controls a digital output. In this 
> example only the one output is controlled during process.
> 
> If you want to read data from input modules (there isn't any in my 
> example), you don't have to do much:
> While this frame with process data is send, the input modules will write 
> there data to this frame. So when the frame returns, the input data from 
> the modules will be in the received frame. If you've assigned the 
> logical address 0x0001000C to a digital input, the digital input can be 
> found on byte 12 of the local buffer (local buffer starts at 
> 0x00010000). Note that you have to make sure the local buffer is big 
> enough (13 bytes in this case).
> 
> Sending a buffer can be done with the txandrx function of the 
> EtherCAT_Master.
> 
> I hope this helps you out a bit.
> 
> Tom
> 
> 
> ------------------------------------------------------------------------
> 
> #include 
> #include 
> #include 

> #include 
> #include 
> #include 
> #include 
> 
> #include 
> #include 
> #include 
> #include 
> #include 
> #include 
> #include 
> #include 
> #include 
> #include 
> 
> 
> struct netif *ni;
> RT_TASK ec_pd_task;
> bool stop = false;
> unsigned long sinus_freq = 1;
> unsigned long period;
> 
> ///SlaveConfig EK1100
> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
> EtherCAT_PD_Config pd_config_EK1100(0);
> EtherCAT_SlaveConfig EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
> 
> ///SlaveConfig EL4102
> EtherCAT_FMMU_Config fmmu_config_EL4102(2);
> EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
> EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);
> 
> EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102, syncman_mbx1_EL4102};
> 
> EtherCAT_PD_Config pd_config_EL4102(2);
> EC_SyncMan
>  syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan
>  syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);
> 
> ///SlaveConfig EL2004
> EtherCAT_FMMU_Config fmmu_config_EL2004(1);
> EC_FMMU fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);
> 
> EtherCAT_PD_Config pd_config_EL2004(1);
> EC_SyncMan syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig EC_EL2004(0x7d43052,0x00000000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);
> 
> static void init_slave_db() {
>  EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(3);
>  fmmu_config_EL4102[0] = fmmu0_EL4102;
>  fmmu_config_EL4102[1] = fmmu1_EL4102;
>  pd_config_EL4102[0] = syncman0_EL4102;
>  pd_config_EL4102[1] = syncman1_EL4102;
>  fmmu_config_EL2004[0] = fmmu0_EL2004;
>  pd_config_EL2004[0] = syncman0_EL2004;
>  slave_db->set_conf(&EC_EL4102,0);
>  slave_db->set_conf(&EC_EK1100,1);
>  slave_db->set_conf(&EC_EL2004,2);
> 
>  
> }
> 
> static void ec_pd(void *) {
>  EtherCAT_Master *EM = EtherCAT_Master::instance();
>  unsigned char msg[5];  //Data to Send
>  int cnt = 0, cnt_dig = 0;
>  int voltage_i = 0;
>  float voltage_f = 0, time = 0;
>  long samples = 1000*1000*1000 / period / sinus_freq;
>  printf("Samples = %d\n", samples);
>  while(!stop) {
>   if(cnt > samples)
>    cnt = 0;
>   time = M_PI * 2 * cnt / samples;
>   voltage_f = (sin(time) * 5 + 5) * 32767 / 10;
>   voltage_i = (int) voltage_f;
>   msg[0] = voltage_i; msg[1] = voltage_i>>8; // analog output
>   msg[4] = cnt_dig & 0x01; // only the last bit: one digital output
>   //printf("mdg[4] = %d\n",msg[4]);
>   //printf("cnt = %d   time = %f    voltage = %f  msg[0] =0x%x     msg[1] = 0cx%x \n", cnt,time, voltage_f,msg[0], msg[1]);       // Digital Output Channel 1 
>   cnt++; cnt_dig++;
>   rt_task_wait_period(0);
>   EM->txandrx_PD(sizeof(msg),msg);
>  }
>  
> }
> 
> static void* run_master(void * arg) {
>  
>  ni = init_ec((char*)arg);
>  init_slave_db();
>  if(ni != 0) {
>   
>   EtherCAT_DataLinkLayer::instance()->attach(ni);
>   printf("Master initializing \n\n");
>   EtherCAT_Master * EM = EtherCAT_Master::instance();
>   printf("Getting slave handler\n");
>   EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
>   if(sh_ek1100->to_state(EC_OP_STATE))
>    printf("EK1100 succesfully set in OP STATE\n");
>   else
>    printf("\nFailed to set EK1100 in OP STATE\n");
>   printf("Getting slave handler\n");
>   EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
>   if(sh_el4102->to_state(EC_OP_STATE))
>    printf("EL4102 succesfully set in OP STATE\n");
>   else
>    printf("\nFailed to set EL4102 in OP STATE!!\n");
>   printf("Getting slave handler\n");
>   EtherCAT_SlaveHandler * sh_el2004 = EM->get_slave_handler(0x03eb);
>   if(sh_el2004->to_state(EC_OP_STATE))
>    printf("EL2004 succesfully set in OP STATE\n");
>   else
>    printf("\nFailed to set EL2004 in OP STATE\n");
>   
>   EtherCAT_AL * AL = EtherCAT_AL::instance();
>   if(AL->isReady()) {
>    period = 1000*50;
>    rt_task_create (&ec_pd_task, "Ethercat PD", 0,1,T_JOINABLE);
>    rt_task_set_periodic (&ec_pd_task, TM_NOW, rt_timer_ns2ticks(period));
>    rt_task_start (&ec_pd_task, &ec_pd, 0);     
>   }
>   
>   rt_task_join(&ec_pd_task);
>   close_socket(ni);
>  }
> }
> 
> void catch_signal(int sig)
> {
>  stop = true;
> }
> 
> int main(int argc, char** argv)
> {
> 
>  signal(SIGTERM, catch_signal);
>     signal(SIGINT, catch_signal);
>     signal(SIGHUP, catch_signal);
>  mlockall(MCL_CURRENT|MCL_FUTURE);
> 
>  if (argc < 3) {
>         printf("usage: %s  \n", argv[0]);
>         return 0;
>     }
> 
>  sinus_freq = atoi(argv[2]);
> 
>  pthread_t xenothread;
>  pthread_attr_t xenothread_attr;
> 
>  //Set attributes of thread
>  pthread_attr_init (& xenothread_attr);
> 
>  //Start thread
>  if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1]) != 0) {
>   printf("Cannot create thread EtherCatThread.\n");
>   exit(1);
>  }
>    pthread_join( xenothread, 0 );
>  printf("\nEnd\n");
>  return 0;
> }
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
_______________________________________________
Ethercatmaster-users mailing list
Ethercatmaster-users at lists.berlios.de
https://lists.berlios.de/mailman/listinfo/ethercatmaster-users



       
---------------------------------
 Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de mail !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070716/6929b6bb/attachment.html>

From tompanis at skynet.be  Mon Jul 16 22:16:05 2007
From: tompanis at skynet.be (Tom Panis)
Date: Mon, 16 Jul 2007 22:16:05 +0200
Subject: [Ethercatmaster-users] Slaves parameters !!
In-Reply-To: <285844.40209.qm@web37302.mail.mud.yahoo.com>
References: <285844.40209.qm@web37302.mail.mud.yahoo.com>
Message-ID: <469BD205.6060901@skynet.be>


said harti wrote:
>
> Hi,
>
> I try to set some data on the EL4102 (5V for example) and the EL2004 
> modules (set to 0xFF), my master_test code modification is
> posted here, the program turn without problem, but i don't see LEDs 
> modules switch on,
>
> Can you please explain me the problem ?

I see in the fmmu configuration of the EL_2004 module, you set the 
logical address at 0x00010004, but in your local buffer (named msg), you 
but the process data for this module in the 3rd byte. You should make a 
bigger buffer and put it in the 5th byte. This because the local buffer 
corresponds with the logical memory starting from address 0x00010000. 
With your current configuration, the 3rd and 4th byte of the local 
buffer are mend for the 2nd channel of the analog output EL_4102 (2 
bytes for each channel). I talked about this in another message, earlier 
this day. You might want to take a look there.

But I can't figure out why you can't measure 5V at the first analog 
output, the configuration seems to be alright and the first two bytes of 
the local buffer are indeed mend for the 1st channel of the analog output.
A reason might be, that the program doesn't run long enough. When the 
program stops, the outputs are back to 0V. So you'll have to measure 
quick :-). But you should better put it in a periodic thread. I also 
talked about this in another message, earlier this day. You might want 
to take a look there.
>
> i have compared all parameters for this
> modules with the twincat tools, and there is no difference.
>
>
>
>         ///Set Channel 1 to 5V
>         unsigned char msg[3] = {0xff, 0x3f, 0xff};///
>         if(AL->isReady()) {
>
>             printf("Test: Set Channel 1 to 5V: \n\n");
>             printf("Test: set the EL2004 to 1: \n\n");///
>
>             int count = 0;
>             while(count<100000) {
>                 EM->txandrx_PD(sizeof(msg),msg);
>                 count++;
>             }
>             printf("Test done.\n");
>         }
>         
>         close_socket(ni);
>         
>


From harti_said at yahoo.fr  Tue Jul 17 17:55:15 2007
From: harti_said at yahoo.fr (said harti)
Date: Tue, 17 Jul 2007 17:55:15 +0200 (CEST)
Subject: [Ethercatmaster-users] Read from the EL1004 module !!!
Message-ID: <954552.74335.qm@web37306.mail.mud.yahoo.com>

Hi,

As you see in my test program, i want to see on my scren the DI EL1004 value,

but when i apply or remove the Digital Input on, i don't see any instantaneous response any where !!!

Anyone can tell me please how can i do in order to get the DI value on my scren ????

Regards,

Said
///SlaveConfig EL1004 :

EtherCAT_FMMU_Config fmmu_config_EL1004(1);
EC_FMMU
fmmu0_EL1004(0x00010800,0x0001,0x00,0x03,0x1000,0x00,true,false,true);

EtherCAT_PD_Config pd_config_EL1004(1);
EC_SyncMan syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);

EtherCAT_SlaveConfig EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);
EtherCAT_AL * AL = EtherCAT_AL::instance();
       


        ///Set Channel 1 to 5V

        //unsigned char msg[5] = {0xff, 0x3f, 0xff, 0x3f, 0x0f};///
        //unsigned char msg[18];
unsigned char msg[20]={0xff, 0x3f, 0xff, 0x3f, 0x0f,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
        if(AL->isReady()) {

            printf("Test: Set Channel 1 to 5V: \n\n");
            printf("Test: Mettre le module TOR ? 1: \n\n");///

            printf("Lecture sans ecriture: \n\n");///

            int count = 0;
            while(count<100) {

                msg[0]=0xff;
                msg[1]=0x3f;
                msg[2]=0xff;
                msg[3]=0x3f;
                msg[4]=0x0f;

                  if(EM->txandrx_PD(sizeof(msg),msg)){
                    //printf("msg = 0x");           
                    for (int i=0;i<20;i++)
                        printf("0X%x ", msg[i]);
                    printf ("\n");       
                }//EM->txandrx_PD(sizeof(msg),msg);
                    else{
                        printf("txandrx failed : \n\n");
                        }

                count++;
            }


 		
---------------------------------
 D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070717/4c032c66/attachment.html>

From tompanis at skynet.be  Tue Jul 17 18:17:35 2007
From: tompanis at skynet.be (Tom Panis)
Date: Tue, 17 Jul 2007 18:17:35 +0200
Subject: [Ethercatmaster-users] Read from the EL1004 module !!!
In-Reply-To: <954552.74335.qm@web37306.mail.mud.yahoo.com>
References: <954552.74335.qm@web37306.mail.mud.yahoo.com>
Message-ID: <469CEB9F.9070305@skynet.be>


said harti wrote:
> Hi,
>
> As you see in my test program, i want to see on my scren the DI EL1004 
> value,
>
> but when i apply or remove the Digital Input on, i don't see any 
> instantaneous response any where !!!
>
> Anyone can tell me please how can i do in order to get the DI value on 
> my scren ????

You made the same mistake as you did with the digital outputs. In your 
fmmu configuration, you set the logical startaddress at 0x00010800, but 
you don't check at the corresponding place in your local buffer. Using 
the following fmmu configuration, you should see the digital inputs at 
byte 10 of your local buffer (I assume you haven't used this logical 
address yet):

EC_FMMU 
fmmu0_EL1004(0x0001000A,0x0001,0x00,0x03,0x1000,0x00,true,false,true);

>
> Regards,
>
> Said
> ///SlaveConfig EL1004 :
>
> EtherCAT_FMMU_Config fmmu_config_EL1004(1);
> EC_FMMU
> fmmu0_EL1004(0x00010800,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
>
> EtherCAT_PD_Config pd_config_EL1004(1);
> EC_SyncMan 
> syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
>
> EtherCAT_SlaveConfig 
> EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);
> EtherCAT_AL * AL = EtherCAT_AL::instance();
>        
>
>
>         ///Set Channel 1 to 5V
>
>         //unsigned char msg[5] = {0xff, 0x3f, 0xff, 0x3f, 0x0f};///
>         //unsigned char msg[18];
> unsigned char msg[20]={0xff, 0x3f, 0xff, 0x3f, 0x0f,0x00, 0x00, 0x00, 
> 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
>         if(AL->isReady()) {
>
>             printf("Test: Set Channel 1 to 5V: \n\n");
>             printf("Test: Mettre le module TOR ? 1: \n\n");///
>
>             printf("Lecture sans ecriture: \n\n");///
>
>             int count = 0;
>             while(count<100) {
>
>                 msg[0]=0xff;
>                 msg[1]=0x3f;
>                 msg[2]=0xff;
>                 msg[3]=0x3f;
>                 msg[4]=0x0f;
>
>                   if(EM->txandrx_PD(sizeof(msg),msg)){
>                     //printf("msg = 0x");           
>                     for (int i=0;i<20;i++)
>                         printf("0X%x ", msg[i]);
>                     printf ("\n");       
>                 }//EM->txandrx_PD(sizeof(msg),msg);
>                     else{
>                         printf("txandrx failed : \n\n");
>                         }
>
>                 count++;
>             }
>
> ------------------------------------------------------------------------
> D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos 
> questions ! Profitez des connaissances, des opinions et des 
> exp?riences des internautes sur Yahoo! Questions/R?ponses 
> <http://fr.rd.yahoo.com/evt=42054/*http://fr.answers.yahoo.com>.
> ------------------------------------------------------------------------
>
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>   


From harti_said at yahoo.fr  Wed Jul 18 08:32:03 2007
From: harti_said at yahoo.fr (said harti)
Date: Wed, 18 Jul 2007 08:32:03 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re:  Read from the EL1004 module !!!
In-Reply-To: <469CEB9F.9070305@skynet.be>
Message-ID: <823104.89581.qm@web37305.mail.mud.yahoo.com>

Hi,

Thanks Tom, my program run perfectly now, i can read my digital Inputs.

Can you please explain me why i must use exactly this  logical start address 0x0001000A and not 0x00010800 ?? !!!!

Regards,

Said


Tom Panis <tompanis at skynet.be> a ?crit : 
said harti wrote:
> Hi,
>
> As you see in my test program, i want to see on my scren the DI EL1004 
> value,
>
> but when i apply or remove the Digital Input on, i don't see any 
> instantaneous response any where !!!
>
> Anyone can tell me please how can i do in order to get the DI value on 
> my scren ????

You made the same mistake as you did with the digital outputs. In your 
fmmu configuration, you set the logical startaddress at 0x00010800, but 
you don't check at the corresponding place in your local buffer. Using 
the following fmmu configuration, you should see the digital inputs at 
byte 10 of your local buffer (I assume you haven't used this logical 
address yet):

EC_FMMU 
fmmu0_EL1004(0x0001000A,0x0001,0x00,0x03,0x1000,0x00,true,false,true);

>
> Regards,
>
> Said
> ///SlaveConfig EL1004 :
>
> EtherCAT_FMMU_Config fmmu_config_EL1004(1);
> EC_FMMU
> fmmu0_EL1004(0x00010800,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
>
> EtherCAT_PD_Config pd_config_EL1004(1);
> EC_SyncMan 
> syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
>
> EtherCAT_SlaveConfig 
> EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);
> EtherCAT_AL * AL = EtherCAT_AL::instance();
>        
>
>
>         ///Set Channel 1 to 5V
>
>         //unsigned char msg[5] = {0xff, 0x3f, 0xff, 0x3f, 0x0f};///
>         //unsigned char msg[18];
> unsigned char msg[20]={0xff, 0x3f, 0xff, 0x3f, 0x0f,0x00, 0x00, 0x00, 
> 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
>         if(AL->isReady()) {
>
>             printf("Test: Set Channel 1 to 5V: \n\n");
>             printf("Test: Mettre le module TOR ? 1: \n\n");///
>
>             printf("Lecture sans ecriture: \n\n");///
>
>             int count = 0;
>             while(count<100) {
>
>                 msg[0]=0xff;
>                 msg[1]=0x3f;
>                 msg[2]=0xff;
>                 msg[3]=0x3f;
>                 msg[4]=0x0f;
>
>                   if(EM->txandrx_PD(sizeof(msg),msg)){
>                     //printf("msg = 0x");           
>                     for (int i=0;i<20;i++)
>                         printf("0X%x ", msg[i]);
>                     printf ("\n");       
>                 }//EM->txandrx_PD(sizeof(msg),msg);
>                     else{
>                         printf("txandrx failed : \n\n");
>                         }
>
>                 count++;
>             }
>
> ------------------------------------------------------------------------
> D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos 
> questions ! Profitez des connaissances, des opinions et des 
> exp?riences des internautes sur Yahoo! Questions/R?ponses 
> .
> ------------------------------------------------------------------------
>
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>   


 		
---------------------------------
 D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070718/f82c6072/attachment.html>

From rwatollenaar at gmail.com  Thu Jul 19 10:38:36 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Thu, 19 Jul 2007 10:38:36 +0200
Subject: [Ethercatmaster-users] Read from the EL1004 module !!!
In-Reply-To: <954552.74335.qm@web37306.mail.mud.yahoo.com>
References: <954552.74335.qm@web37306.mail.mud.yahoo.com>
Message-ID: <469F230C.3010904@gmail.com>

Hi,

Have you looked at the example that i posted? It works for me. Let me 
know if you have not received it and I will send it again.

Roland

said harti wrote:
> Hi,
> 
> As you see in my test program, i want to see on my scren the DI EL1004 
> value,
> 
> but when i apply or remove the Digital Input on, i don't see any 
> instantaneous response any where !!!
> 
> Anyone can tell me please how can i do in order to get the DI value on 
> my scren ????
> 
> Regards,
> 
> Said
> ///SlaveConfig EL1004 :
> 
> EtherCAT_FMMU_Config fmmu_config_EL1004(1);
> EC_FMMU
> fmmu0_EL1004(0x00010800,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
> 
> EtherCAT_PD_Config pd_config_EL1004(1);
> EC_SyncMan 
> syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig 
> EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);
> EtherCAT_AL * AL = EtherCAT_AL::instance();
>        
> 
> 
>         ///Set Channel 1 to 5V
> 
>         //unsigned char msg[5] = {0xff, 0x3f, 0xff, 0x3f, 0x0f};///
>         //unsigned char msg[18];
> unsigned char msg[20]={0xff, 0x3f, 0xff, 0x3f, 0x0f,0x00, 0x00, 0x00, 
> 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
>         if(AL->isReady()) {
> 
>             printf("Test: Set Channel 1 to 5V: \n\n");
>             printf("Test: Mettre le module TOR ? 1: \n\n");///
> 
>             printf("Lecture sans ecriture: \n\n");///
> 
>             int count = 0;
>             while(count<100) {
> 
>                 msg[0]=0xff;
>                 msg[1]=0x3f;
>                 msg[2]=0xff;
>                 msg[3]=0x3f;
>                 msg[4]=0x0f;
> 
>                   if(EM->txandrx_PD(sizeof(msg),msg)){
>                     //printf("msg = 0x");           
>                     for (int i=0;i<20;i++)
>                         printf("0X%x ", msg[i]);
>                     printf ("\n");       
>                 }//EM->txandrx_PD(sizeof(msg),msg);
>                     else{
>                         printf("txandrx failed : \n\n");
>                         }
> 
>                 count++;
>             }
> 
> ------------------------------------------------------------------------
> D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos 
> questions ! Profitez des connaissances, des opinions et des exp?riences 
> des internautes sur Yahoo! Questions/R?ponses 
> <http://fr.rd.yahoo.com/evt=42054/*http://fr.answers.yahoo.com>.
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users


From rwatollenaar at gmail.com  Thu Jul 19 10:43:02 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Thu, 19 Jul 2007 10:43:02 +0200
Subject: [Ethercatmaster-users] RE : Re: RE : Re: RE : Re:
	Slaves	Parameters!!
In-Reply-To: <469BC460.4010203@skynet.be>
References: <bc4264770707160359l75eeb6ccrccf52e0ae13f6579@mail.gmail.com>	<443480.55769.qm@web37301.mail.mud.yahoo.com>	<bc4264770707160544o74ee061bs87a620baab284286@mail.gmail.com>
	<bc4264770707160918md73deffi99b9966a7c35f1c0@mail.gmail.com>
	<469BC460.4010203@skynet.be>
Message-ID: <469F2416.30001@gmail.com>

> To keep the digital output on, you have to keep sending the message. In 
> your current program, you only send the message briefly. Once "count" 
> reaches 100000, the while loop stops and the program exits. In the other 
> example I posted, as you noticed, the sending and receiving was put in a 
> separate thread, a periodic thread. In this way the program keeps 
> running until you press CTRL+C (signal catch). This is the way it should 
> be done. I'll change the example in a couple of days and get rid of this 
> bad example :-)

This is very unfortunate behaviour of the El2004. It means that if i 
should have a cycle time of 5ms that the outputs will go on and off 
every 5ms. In the loop in the "bad" example this will also happen. 
Surely this is not how the 2004 works? Surely I should be able to send 
the outputs configuration once and it should stay like that until 
another word is written to it?

And why are my outputs only going on once and dont they respond to the 
writes that are being done in the while loop?

Regards,

Roland



>>
>>        
>>         ///Set digital output
>>         unsigned char msg[8] = {0xff,0xff, 0xff, 0x3f, 0x00, 0x00, 0x00,
>> 0x00 };  //first two bytes are the outputs, second two are the analog
>> output, 5th is the input of the AO module, last two are DI (1014)
>>         if(AL->isReady()) {
>>             printf("Test: outputs: \n\n");   
>>             int count = 0;
>>             while(count<100000) {
>>                 msg[0]=0xff;
>>                 msg[1]=0xff;
>>                 msg[2]=0xff;
>>                 msg[3]=0x3f;
>>                 msg[4]=0x00;
>>                 msg[5]=0x00;
>>                
>>                 if(EM->txandrx_PD(sizeof(msg),msg)){
>>                     printf("msg[7] %d ",msg[7]);
>>                 }
>>                 else{
>>                     printf("txandrx failed: \n\n");
>>                 }
>>            
>>                 count++;
>>             }
>>         //    printf("Test done.\n");
>>         }
>>        
>>
>>
>>         close_socket(ni);
>>        
>>     }
>> }
>>
>>   
> 


From harti_said at yahoo.fr  Thu Jul 19 11:30:05 2007
From: harti_said at yahoo.fr (said harti)
Date: Thu, 19 Jul 2007 11:30:05 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re:  Read from the EL1004 module !!!
In-Reply-To: <469F230C.3010904@gmail.com>
Message-ID: <368937.76126.qm@web37301.mail.mud.yahoo.com>

Thanks Rolland, 

Yes i have received you example program, i can see my DI on my local buffer, Tom has explain me my error (change the logical start address for my DI).

Now i work hardely on the same problem as you : the DO brief flash.   :(

Thanks

Said 

Roland Tollenaar <rwatollenaar at gmail.com> a ?crit : Hi,

Have you looked at the example that i posted? It works for me. Let me 
know if you have not received it and I will send it again.

Roland

said harti wrote:
> Hi,
> 
> As you see in my test program, i want to see on my scren the DI EL1004 
> value,
> 
> but when i apply or remove the Digital Input on, i don't see any 
> instantaneous response any where !!!
> 
> Anyone can tell me please how can i do in order to get the DI value on 
> my scren ????
> 
> Regards,
> 
> Said
> ///SlaveConfig EL1004 :
> 
> EtherCAT_FMMU_Config fmmu_config_EL1004(1);
> EC_FMMU
> fmmu0_EL1004(0x00010800,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
> 
> EtherCAT_PD_Config pd_config_EL1004(1);
> EC_SyncMan 
> syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig 
> EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);
> EtherCAT_AL * AL = EtherCAT_AL::instance();
>        
> 
> 
>         ///Set Channel 1 to 5V
> 
>         //unsigned char msg[5] = {0xff, 0x3f, 0xff, 0x3f, 0x0f};///
>         //unsigned char msg[18];
> unsigned char msg[20]={0xff, 0x3f, 0xff, 0x3f, 0x0f,0x00, 0x00, 0x00, 
> 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
>         if(AL->isReady()) {
> 
>             printf("Test: Set Channel 1 to 5V: \n\n");
>             printf("Test: Mettre le module TOR ? 1: \n\n");///
> 
>             printf("Lecture sans ecriture: \n\n");///
> 
>             int count = 0;
>             while(count<100) {
> 
>                 msg[0]=0xff;
>                 msg[1]=0x3f;
>                 msg[2]=0xff;
>                 msg[3]=0x3f;
>                 msg[4]=0x0f;
> 
>                   if(EM->txandrx_PD(sizeof(msg),msg)){
>                     //printf("msg = 0x");           
>                     for (int i=0;i<20;i++)
>                         printf("0X%x ", msg[i]);
>                     printf ("\n");       
>                 }//EM->txandrx_PD(sizeof(msg),msg);
>                     else{
>                         printf("txandrx failed : \n\n");
>                         }
> 
>                 count++;
>             }
> 
> ------------------------------------------------------------------------
> D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos 
> questions ! Profitez des connaissances, des opinions et des exp?riences 
> des internautes sur Yahoo! Questions/R?ponses 
> .
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users


       
---------------------------------
 Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de mail !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070719/f688896d/attachment.html>

From klaas.gadeyne at fmtc.be  Thu Jul 19 17:43:49 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Thu, 19 Jul 2007 17:43:49 +0200 (CEST)
Subject: [Ethercatmaster-users] netif.h
In-Reply-To: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>

On Thu, 12 Jul 2007, roland Tollenaar wrote:
> On incorporating EML communication in to my xenomai/Qt project, I
> discovered that there are two netif.h files in the EML trunk. They
> seem to be identical except for an #ifdef __cplusplus section.

There's one for each OS EML supports (so currently one for eCos and
one for Xenomai/RTnet)

> This does not give problems when compiling the master_test example but
> does when compiling in my project. I made them both the same now since
> I see no reason why this was not so in the first place.
>
> Would it be possible to change the svn trunk like this so that I don;t
> pick up the same problem when i checkout in the future? Or am I doing
> something wrong?

I think you should not have this problem when your project uses the
_installed_ headers of EML (and not the source tree)?

regards,

Klaas

ps.  It seems you have been working hard during my holidays :-)




From rwatollenaar at gmail.com  Thu Jul 19 21:58:27 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Thu, 19 Jul 2007 21:58:27 +0200
Subject: [Ethercatmaster-users] netif.h
In-Reply-To: <Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
Message-ID: <469FC263.2070808@gmail.com>

Hi Klaas,


Cannot tell you how glad your holidays are over. I'll forgive you if you 
don;t share my sentiments ;)

You may be right about the src/ installed includes. I'll have to check 
which one I used. But certainly not one for the eCos OS. Of that I am sure.

If you have a chance to look at the problem we are having with the 
outputs that don't want to stay up. Its the last problem before the EML 
connection is working 100%. I hope those aren't famous lasts words.....

Kind regards,

Roland.


Klaas Gadeyne wrote:
> On Thu, 12 Jul 2007, roland Tollenaar wrote:
>> On incorporating EML communication in to my xenomai/Qt project, I
>> discovered that there are two netif.h files in the EML trunk. They
>> seem to be identical except for an #ifdef __cplusplus section.
> 
> There's one for each OS EML supports (so currently one for eCos and
> one for Xenomai/RTnet)
> 
>> This does not give problems when compiling the master_test example but
>> does when compiling in my project. I made them both the same now since
>> I see no reason why this was not so in the first place.
>>
>> Would it be possible to change the svn trunk like this so that I don;t
>> pick up the same problem when i checkout in the future? Or am I doing
>> something wrong?
> 
> I think you should not have this problem when your project uses the
> _installed_ headers of EML (and not the source tree)?
> 
> regards,
> 
> Klaas
> 
> ps.  It seems you have been working hard during my holidays :-)
> 
> 
> 


From rwatollenaar at gmail.com  Thu Jul 19 21:58:43 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Thu, 19 Jul 2007 21:58:43 +0200
Subject: [Ethercatmaster-users] netif.h
In-Reply-To: <Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
Message-ID: <469FC273.9030403@gmail.com>

Hi Klaas,


Cannot tell you how glad your holidays are over. I'll forgive you if you
don;t share my sentiments ;)

You may be right about the src/ installed includes. I'll have to check
which one I used. But certainly not one for the eCos OS. Of that I am sure.

If you have a chance to look at the problem we are having with the
outputs that don't want to stay up. Its the last problem before the EML
connection is working 100%. I hope those aren't famous lasts words.....

Kind regards,

Roland.


Klaas Gadeyne wrote:
> On Thu, 12 Jul 2007, roland Tollenaar wrote:
>> On incorporating EML communication in to my xenomai/Qt project, I
>> discovered that there are two netif.h files in the EML trunk. They
>> seem to be identical except for an #ifdef __cplusplus section.
> 
> There's one for each OS EML supports (so currently one for eCos and
> one for Xenomai/RTnet)
> 
>> This does not give problems when compiling the master_test example but
>> does when compiling in my project. I made them both the same now since
>> I see no reason why this was not so in the first place.
>>
>> Would it be possible to change the svn trunk like this so that I don;t
>> pick up the same problem when i checkout in the future? Or am I doing
>> something wrong?
> 
> I think you should not have this problem when your project uses the
> _installed_ headers of EML (and not the source tree)?
> 
> regards,
> 
> Klaas
> 
> ps.  It seems you have been working hard during my holidays :-)
> 
> 
> 



From klaas.gadeyne at fmtc.be  Fri Jul 20 08:49:15 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Fri, 20 Jul 2007 08:49:15 +0200 (CEST)
Subject: [Ethercatmaster-users] netif.h
In-Reply-To: <469FC273.9030403@gmail.com>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
Message-ID: <Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>

On Thu, 19 Jul 2007, Roland Tollenaar wrote:
> Hi Klaas,
>
> Cannot tell you how glad your holidays are over. I'll forgive you if you
> don;t share my sentiments ;)

:-]

> You may be right about the src/ installed includes. I'll have to check
> which one I used. But certainly not one for the eCos OS. Of that I am sure.
>
> If you have a chance to look at the problem we are having with the
> outputs that don't want to stay up. Its the last problem before the EML
> connection is working 100%. I hope those aren't famous lasts words.....

Can you (in a new separate post, or link to a previous post), briefly
restate the issues you fixed and the issues that remain?
I've seen a ton of (rather long) mails pass by during my holidays, I took the
liberty to delete those EML mails that had been answered by tom.  This
said, Tom has far more experience than I with the modules you are
using, so I guess he will provide better answers than I do.

regards,

Klaas


From rwatollenaar at gmail.com  Fri Jul 20 09:07:26 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Fri, 20 Jul 2007 09:07:26 +0200
Subject: [Ethercatmaster-users] netif.h
In-Reply-To: <Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
Message-ID: <46A05F2E.3040406@gmail.com>

HI Klaas,

I am not sure the problem that remains is an EML problem. May be a 
fundamental issue with the way Beckhoff/Ethercat devices are 
communicated with.

Essentially there remains one problem (at least that presents itself to 
date, I have for example not yet done scope measurements to measure 
latencies etc).

This problem concerns the digital outputs on module EL2004. In the 
master_test program I write to them in a manner which I would expect the 
outputs to go up and stay up. BUt they do not. They go up very briefly 
once and then go down again. The sending (rxandtx) continues to take 
place (in the master_test program frequently in a while loop) but there 
is no further response from the outputs. The inputs respond perfectly 
and the rxandtx call does not return false (error) so I cannot but 
assume that the communication is perfect. So why do the outputs only 
react once every time the program runs?

I have checked the values of the buffer before sending in the loop but 
these remain correct (no different than when they are first sent and do 
make the leds react).

The bits that go up (in the flash) are exactly the bits that I want to 
go on. I have tried different combinations and this is correct. So the 
flash is not some fluke, it really is a correct response to the message 
that is placed in the frame.

Tom says that the txandrx call must be placed in a separate thread, I 
have not had time to try this yet but I don;t see the fundamental 
difference. Even in a thread I will have to repetitively call the 
rxandtx and at best, if the outputs do not stay up, they will flash on 
and off.

I have taken up the issue with ETG and they have given replies that I 
cannot quite respond to. The questions they ask and the tests they 
expect me to perform go beyond my current expertise. :-/

I will post those email on the list, perhaps you can make something out 
of it.

Please tell me what you think.

Regards,

Roland

Klaas Gadeyne wrote:
> On Thu, 19 Jul 2007, Roland Tollenaar wrote:
>> Hi Klaas,
>>
>> Cannot tell you how glad your holidays are over. I'll forgive you if you
>> don;t share my sentiments ;)
> 
> :-]
> 
>> You may be right about the src/ installed includes. I'll have to check
>> which one I used. But certainly not one for the eCos OS. Of that I am 
>> sure.
>>
>> If you have a chance to look at the problem we are having with the
>> outputs that don't want to stay up. Its the last problem before the EML
>> connection is working 100%. I hope those aren't famous lasts words.....
> 
> Can you (in a new separate post, or link to a previous post), briefly
> restate the issues you fixed and the issues that remain?
> I've seen a ton of (rather long) mails pass by during my holidays, I 
> took the
> liberty to delete those EML mails that had been answered by tom.  This
> said, Tom has far more experience than I with the modules you are
> using, so I guess he will provide better answers than I do.
> 
> regards,
> 
> Klaas
> 


From rwatollenaar at gmail.com  Fri Jul 20 09:08:54 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Fri, 20 Jul 2007 09:08:54 +0200
Subject: [Ethercatmaster-users] [Fwd: AW: AW: Questions]
Message-ID: <46A05F86.50407@gmail.com>

The first suggestions of ETG.

Roland

-------- Original Message --------
Subject: AW: AW: Questions
Date: Wed, 18 Jul 2007 16:21:15 +0200
From: Florian H?fele (ETG) <F.Haefele at ethercat.org>
To: R.W.A. Tollenaar <r.tollenaar at tosec.nl>
References: 
<81CD4B137F3954408EDBF6277A0E6D0D1D23F2 at NT-Mail04.beckhoff.com> 
<ACC2337D054D0B40869560DD3F71EF8D021B260E at nt-mail01.beckhoff.com> 
<469B7DAA.3030805 at tosec.nl>

Dear Mr. Tollenaar,

The EL2004 terminals should work fine. So I suppose there is some little 
mistake in the way process data is sent by the master.

Please check if the WC is incremented by the EL2004 terminals every 
cycle. If this is correct, please check for the watchdog time if you 
send valid process data within the watchdog time (should be 100ms with 
EL2004). Please make also sure that you not send other process data to 
the terminals in between.

If you have checked this things and cannot have not eliminated this 
behaviour by then please send me a Wireshark scan of a period of time 
when you observe this behaviour.

Regards,

Florian H?fele

----------------------------------------------------------
Florian H?fele

EtherCAT Technology Group
Ostendstr. 196
90482 Nuremberg, Germany
Phone +49 911 5405614
Fax +49 911 5405629
Internet: www.ethercat.org
Email: f.haefele at ethercat.org



-----Urspr?ngliche Nachricht-----
Von: R.W.A. Tollenaar [mailto:r.tollenaar at tosec.nl]
Gesendet: Montag, 16. Juli 2007 16:16
An: Florian H?fele (ETG)
Betreff: Re: AW: Questions

Dear Mr Haefele,

Thanks for this information, it proved to be very useful.

I now have all modules configured and it seems as though the outputs are
responding. At least almost.

I have a question of which I cannot find the answer elsewhere.

A problem I have with the EL2004 module of Beckhoff is that when I send
the process data that is supposed to bring up the outputs, the result is
that the outputs go up briefly once and then go off again. They flash on
and off once per program. Even if I send the same up data in a tight loop.

The analog outputs on the other hand seem to stay up.

Is there a setting that must be transferred to the EL 2004 unit (SDO
parameter or somthing?) before it will behave?

I realize that this is probably a BeckHoff question and not a Ethercat
question, but perhaps you are familiar with the units. Problem is that
Beckhoff themselves cannot tell me who else could answer this question.
If you have a contact name within Beckhoff for me who will be able to
anser this I will gladly take my question there?

Kind regards,

Roland Tollenaar.

Florian H?fele (ETG) wrote:
> Dear Mr. Tollenaar,
> 
>  
> 
> First some more sources:
> 
> -        Download Area on ethercat.org (members only area)
> 
>    Find the EtherCAT Communication slides (older version)
> 
>    Find the IEC 61158-x-12 EtherCAT FDIS (for review)
> 
>    Find more papers as other specifications and software tools
> 
> -        Attached please find
> 
> o        latest EtherCAT Communications slides which are used for the 
> technical training (next in September, see ethtercat.org -> events)
> 
> o        EtherCAT Technology
> 
>  
> 
>  From your question I see that you miss out on a lot of basic 
> information so I think the sources mentioned above will answer your 
> questions. SyncManagers, FMMUs and Addressing is described in detail.
> 
>  
> 
> I would like to ask you to take advantage of the provided information. 
> However, if there remain open questions after the reading I will be 
> happy to answer your questions.
> 
>  
> 
> Best Regards,
> 
>  
> 
> Florian H?fele
> 
>  
> 
> ----------------------------------------------------------
> 
> Florian H?fele
> 
>  
> 
> EtherCAT Technology Group
> 
> Ostendstr. 196
> 
> 90482 Nuremberg, Germany
> 
> Phone +49 911 5405614
> 
> Fax +49 911 5405629
> 
> Internet: www.ethercat.org
> 
> Email: f.haefele at ethercat.org
> 
>  
> 
>  
> 
>  
> 
> -----Urspr?ngliche Nachricht-----
> 
> Von: R.W.A. Tollenaar [mailto:r.tollenaar at tosec.nl]
> 
> Gesendet: Mittwoch, 11. Juli 2007 12:23
> 
> An: info at ethercat.org
> 
> Betreff: Questions
> 
>  
> 
> Dear Mrs Huegel,
> 
>  
> 
> I am writing in english because it is faster for me. As mentioned I am 
> having trouble getting a decent understanding of the ethercat system 
> from the information I can find on the internet. It seems to be limited 
> to a few presentation slides which although helpful do not give a solid 
> understanding. So firstly if there is any more technical documentation 
> (words not only pictures) and I have missed it on the site, please 
> direct me to it or, if this is not available on the site perhaps send it 
> to me? That might cut a lot of questions I have short.
> 
>  
> 
>  
> 
> In concrete I am connecting some BeckHoff modules (4xEL2004, 4xEL1014, 
> EK 1100 and EL4132 and EL 5101) to a linux real-time platform. I am 
> using the ethercat master library developed at the university of Leuven 
> but its documentation is also very scarce (very young project) and the 
> people involved are on vacation. (And I am running short of time).
> 
> I seem to have some communication going between the slaves and the 
> master, i.e. the configuraiton seems to be succesful and the slaves seem 
> to go into operational state (at least I think it is operational state 
> on the EK1100 the "run" led goes on and green?).
> 
>  
> 
> My immediate questions:
> 
> -I still suspect that my configuration might not be perfect since I 
> supply the slave configuration with a different address than I supply to 
> the sync manager configuration and to the fmmu configuration. The code 
> of the EML refers to the addresses as "Fixed Address" and "Physical 
> Address" and I am not sure the programmer is referring to two different 
> entities.
> 
> -As such I am not exactly sure what the different addresses do, some 
> vague idea but I am not really comfortable with the role of each address 
> space yet. We have logical address, physical address and perhaps even a 
> "fixed" address. The logical address space is a register kept on the 
> master I presume where information is dropped from the separate slaves 
> into the designated address when the ethernet frame returns and where 
> the frame gets data from for designated slaves. Correct?
> 
>  
> 
>  
> 
> Choosing (finding) the addresses
> 
> -On choosing the logical addresses for the FMMU I understand this can be
> 
>   anything starting from 0x1000 as long as it has not been used for 
> another slave. Using the number of bits a slave engages it is possible 
> to select the addresses and the start and end bits such that there is no 
> overlap. Correct?
> 
>  
> 
> -Where do I find the physical addresses of the slaves if this is a 
> hardware address?
> 
>  
> 
> -What relation is there between the physical address and the logical 
> address? Or is there no relation? Where does the physical address come 
> into the picture? Is it the substitute for an IP address so that slave 
> knows which datagram in the frame is for itself? Is the physical address 
> an address on the hardware of the slave? Or is it physical storage on 
> the master? What role does the "fixed" address then play if it is an 
> independent entity?
> 
>  
> 
> -If the FMMU is the mechanism that is the translation between the 
> logical addresses (on the master) and the physical addresses(on the
> 
> slaves) whereby the ethernet frames transport the data from the physical 
> addesses to the logical addresses and visa-versa, what does the sync 
> manager do? I now that it is supposed to prevent simultaneous access of 
> address space but which addresses and how?
> 
>  
> 
> -What are the key parameters required for configuring the syncmanager 
> and why? (this question is related to the previous one of course)
> 
>  
> 
> -I am not 100% or even 60% clear on what the difference is between the 
> datalink layer and the application link layer?
> 
>  
> 
> -I have little to no idea yet as to how to exchange process data with 
> slaves from the master. The way I understand it is that I should load 
> all the data that is to be sent to the slaves into one frame, use a 
> generic send/receive function with which i despatch the ethernet frame.
> 
> It will run by all the slaves ticking up the working counter and return 
> to the master automatically (take care fo by the last slave?). On return 
> the frame will unload the received data into the designated logical 
> addresses and I can rectrieve the information (e.g. digital input
> 
> states) from the logical address register?
> 
>      
> 
>  
> 
> I hope you can help, it will be difficult otherwise.
> 
>  
> 
> Kind regards,
> 
>  
> 
> Roland Tollenaar.
> 
>  
> 
>  
> 
> --
> 
> Ir R.W.A. Tollenaar
> 
>  
> 
> Tosec
> 
>  
> 
> Hoekerweg 2
> 
> Postbus 164
> 
> 8000 AD Zwolle
> 
> Tel 038 425 0030
> 
> Fax 038 423 4272
> 
> www.tosec.nl
> 

-- 
Ir R.W.A. Tollenaar

Tosec

Hoekerweg 2
Postbus 164
8000 AD Zwolle
Tel 038 425 0030
Fax 038 423 4272
www.tosec.nl




From rwatollenaar at gmail.com  Fri Jul 20 09:11:32 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Fri, 20 Jul 2007 09:11:32 +0200
Subject: [Ethercatmaster-users] [Fwd: AW: AW: AW: Questions]
Message-ID: <46A06024.6010607@gmail.com>

The second response from ETG.

What is a Wireshark scan? LRW LWR?

Roland

-------- Original Message --------
Subject: AW: AW: AW: Questions
Date: Thu, 19 Jul 2007 15:22:31 +0200
From: Florian H?fele (ETG) <F.Haefele at ethercat.org>
To: R.W.A. Tollenaar <r.tollenaar at tosec.nl>
References: 
<81CD4B137F3954408EDBF6277A0E6D0D1D23F2 at NT-Mail04.beckhoff.com> 
<ACC2337D054D0B40869560DD3F71EF8D021B260E at nt-mail01.beckhoff.com> 
<469B7DAA.3030805 at tosec.nl> 
<ACC2337D054D0B40869560DD3F71EF8D022383DE at nt-mail01.beckhoff.com> 
<469F22C6.6030504 at tosec.nl>

Dear Mr. Tollenaar,

If you use logical addressing you need to send the datagram cyclically. 
Thus, you have to send a value to the EL2004, either 0 or 1.
Have you made a Wireshark scan to see what kind of process data you 
send? Please do this an check for the LRW or LWR command you use to 
address the EL2004 and check the area of the logical memory area within 
the command which is mapped to the 2004 terminal.

If the FMMU and SyncManager settings are correct and the Wireshark scan 
proofs correct values in the commands please send me your tsm file and a 
Wireshark scan.

Regards,

Florian H?fele



----------------------------------------------------------
Florian H?fele

EtherCAT Technology Group
Ostendstr. 196
90482 Nuremberg, Germany
Phone +49 911 5405614
Fax +49 911 5405629
Internet: www.ethercat.org
Email: f.haefele at ethercat.org



-----Urspr?ngliche Nachricht-----
Von: R.W.A. Tollenaar [mailto:r.tollenaar at tosec.nl]
Gesendet: Donnerstag, 19. Juli 2007 10:37
An: Florian H?fele (ETG)
Betreff: Re: AW: AW: Questions

Dear Mr. Haefele,

The sending and receiving seems to be fine. I have also confirmd that I
do not send other process data to the terminal in between.

Reading inputs from for example EL 1014 works perfectly.

Could you confirm that the outputs must stay up if one writes 0x0F (I
realize this depends on my logical addressing but for me this makes all
outputs go up) to the correct register in the 2004 module? Because they
respond very briefly (correctly corresponding to the outputs I want to
have up) and then go off again. They only do this once for a program,
even if I send repeatedly the same output instruction in a while loop
for example, it only responds the first time, and then all leds stay off.

It would not be useful behaviour if i have to continuously send "up"
signals to the outputs i want to have on. (But as you see above, even
that is not working) I need a configuration where I can send the
instruction once and they stay like that until I send new (different)
output orientation. Could you tell me what behaviour I must expect from
the EL 2004?




Kind regards,

Roland Tollenaar



Florian H?fele (ETG) wrote:
> Dear Mr. Tollenaar,
> 
> The EL2004 terminals should work fine. So I suppose there is some little mistake in the way process data is sent by the master.
> 
> Please check if the WC is incremented by the EL2004 terminals every cycle. If this is correct, please check for the watchdog time if you send valid process data within the watchdog time (should be 100ms with EL2004). Please make also sure that you not send other process data to the terminals in between.
> 
> If you have checked this things and cannot have not eliminated this behaviour by then please send me a Wireshark scan of a period of time when you observe this behaviour.
> 
> Regards,
> 
> Florian H?fele
> 
> ----------------------------------------------------------
> Florian H?fele
> 
> EtherCAT Technology Group
> Ostendstr. 196
> 90482 Nuremberg, Germany
> Phone +49 911 5405614
> Fax +49 911 5405629
> Internet: www.ethercat.org
> Email: f.haefele at ethercat.org
> 
> 
> 
> -----Urspr?ngliche Nachricht-----
> Von: R.W.A. Tollenaar [mailto:r.tollenaar at tosec.nl] 
> Gesendet: Montag, 16. Juli 2007 16:16
> An: Florian H?fele (ETG)
> Betreff: Re: AW: Questions
> 
> Dear Mr Haefele,
> 
> Thanks for this information, it proved to be very useful.
> 
> I now have all modules configured and it seems as though the outputs are 
> responding. At least almost.
> 
> I have a question of which I cannot find the answer elsewhere.
> 
> A problem I have with the EL2004 module of Beckhoff is that when I send 
> the process data that is supposed to bring up the outputs, the result is 
> that the outputs go up briefly once and then go off again. They flash on 
> and off once per program. Even if I send the same up data in a tight loop.
> 
> The analog outputs on the other hand seem to stay up.
> 
> Is there a setting that must be transferred to the EL 2004 unit (SDO 
> parameter or somthing?) before it will behave?
> 
> I realize that this is probably a BeckHoff question and not a Ethercat 
> question, but perhaps you are familiar with the units. Problem is that 
> Beckhoff themselves cannot tell me who else could answer this question. 
> If you have a contact name within Beckhoff for me who will be able to 
> anser this I will gladly take my question there?
> 
> Kind regards,
> 
> Roland Tollenaar.
> 
> Florian H?fele (ETG) wrote:
>> Dear Mr. Tollenaar,
>>
>>  
>>
>> First some more sources:
>>
>> -        Download Area on ethercat.org (members only area)
>>
>>    Find the EtherCAT Communication slides (older version)
>>
>>    Find the IEC 61158-x-12 EtherCAT FDIS (for review)
>>
>>    Find more papers as other specifications and software tools
>>
>> -        Attached please find
>>
>> o        latest EtherCAT Communications slides which are used for the 
>> technical training (next in September, see ethtercat.org -> events)
>>
>> o        EtherCAT Technology
>>
>>  
>>
>>  From your question I see that you miss out on a lot of basic 
>> information so I think the sources mentioned above will answer your 
>> questions. SyncManagers, FMMUs and Addressing is described in detail.
>>
>>  
>>
>> I would like to ask you to take advantage of the provided information. 
>> However, if there remain open questions after the reading I will be 
>> happy to answer your questions.
>>
>>  
>>
>> Best Regards,
>>
>>  
>>
>> Florian H?fele
>>
>>  
>>
>> ----------------------------------------------------------
>>
>> Florian H?fele
>>
>>  
>>
>> EtherCAT Technology Group
>>
>> Ostendstr. 196
>>
>> 90482 Nuremberg, Germany
>>
>> Phone +49 911 5405614
>>
>> Fax +49 911 5405629
>>
>> Internet: www.ethercat.org
>>
>> Email: f.haefele at ethercat.org
>>
>>  
>>
>>  
>>
>>  
>>
>> -----Urspr?ngliche Nachricht-----
>>
>> Von: R.W.A. Tollenaar [mailto:r.tollenaar at tosec.nl]
>>
>> Gesendet: Mittwoch, 11. Juli 2007 12:23
>>
>> An: info at ethercat.org
>>
>> Betreff: Questions
>>
>>  
>>
>> Dear Mrs Huegel,
>>
>>  
>>
>> I am writing in english because it is faster for me. As mentioned I am 
>> having trouble getting a decent understanding of the ethercat system 
>> from the information I can find on the internet. It seems to be limited 
>> to a few presentation slides which although helpful do not give a solid 
>> understanding. So firstly if there is any more technical documentation 
>> (words not only pictures) and I have missed it on the site, please 
>> direct me to it or, if this is not available on the site perhaps send it 
>> to me? That might cut a lot of questions I have short.
>>
>>  
>>
>>  
>>
>> In concrete I am connecting some BeckHoff modules (4xEL2004, 4xEL1014, 
>> EK 1100 and EL4132 and EL 5101) to a linux real-time platform. I am 
>> using the ethercat master library developed at the university of Leuven 
>> but its documentation is also very scarce (very young project) and the 
>> people involved are on vacation. (And I am running short of time).
>>
>> I seem to have some communication going between the slaves and the 
>> master, i.e. the configuraiton seems to be succesful and the slaves seem 
>> to go into operational state (at least I think it is operational state 
>> on the EK1100 the "run" led goes on and green?).
>>
>>  
>>
>> My immediate questions:
>>
>> -I still suspect that my configuration might not be perfect since I 
>> supply the slave configuration with a different address than I supply to 
>> the sync manager configuration and to the fmmu configuration. The code 
>> of the EML refers to the addresses as "Fixed Address" and "Physical 
>> Address" and I am not sure the programmer is referring to two different 
>> entities.
>>
>> -As such I am not exactly sure what the different addresses do, some 
>> vague idea but I am not really comfortable with the role of each address 
>> space yet. We have logical address, physical address and perhaps even a 
>> "fixed" address. The logical address space is a register kept on the 
>> master I presume where information is dropped from the separate slaves 
>> into the designated address when the ethernet frame returns and where 
>> the frame gets data from for designated slaves. Correct?
>>
>>  
>>
>>  
>>
>> Choosing (finding) the addresses
>>
>> -On choosing the logical addresses for the FMMU I understand this can be
>>
>>   anything starting from 0x1000 as long as it has not been used for 
>> another slave. Using the number of bits a slave engages it is possible 
>> to select the addresses and the start and end bits such that there is no 
>> overlap. Correct?
>>
>>  
>>
>> -Where do I find the physical addresses of the slaves if this is a 
>> hardware address?
>>
>>  
>>
>> -What relation is there between the physical address and the logical 
>> address? Or is there no relation? Where does the physical address come 
>> into the picture? Is it the substitute for an IP address so that slave 
>> knows which datagram in the frame is for itself? Is the physical address 
>> an address on the hardware of the slave? Or is it physical storage on 
>> the master? What role does the "fixed" address then play if it is an 
>> independent entity?
>>
>>  
>>
>> -If the FMMU is the mechanism that is the translation between the 
>> logical addresses (on the master) and the physical addresses(on the
>>
>> slaves) whereby the ethernet frames transport the data from the physical 
>> addesses to the logical addresses and visa-versa, what does the sync 
>> manager do? I now that it is supposed to prevent simultaneous access of 
>> address space but which addresses and how?
>>
>>  
>>
>> -What are the key parameters required for configuring the syncmanager 
>> and why? (this question is related to the previous one of course)
>>
>>  
>>
>> -I am not 100% or even 60% clear on what the difference is between the 
>> datalink layer and the application link layer?
>>
>>  
>>
>> -I have little to no idea yet as to how to exchange process data with 
>> slaves from the master. The way I understand it is that I should load 
>> all the data that is to be sent to the slaves into one frame, use a 
>> generic send/receive function with which i despatch the ethernet frame.
>>
>> It will run by all the slaves ticking up the working counter and return 
>> to the master automatically (take care fo by the last slave?). On return 
>> the frame will unload the received data into the designated logical 
>> addresses and I can rectrieve the information (e.g. digital input
>>
>> states) from the logical address register?
>>
>>      
>>
>>  
>>
>> I hope you can help, it will be difficult otherwise.
>>
>>  
>>
>> Kind regards,
>>
>>  
>>
>> Roland Tollenaar.
>>
>>  
>>
>>  
>>
>> --
>>
>> Ir R.W.A. Tollenaar
>>
>>  
>>
>> Tosec
>>
>>  
>>
>> Hoekerweg 2
>>
>> Postbus 164
>>
>> 8000 AD Zwolle
>>
>> Tel 038 425 0030
>>
>> Fax 038 423 4272
>>
>> www.tosec.nl
>>
> 


From klaas.gadeyne at fmtc.be  Fri Jul 20 10:09:04 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Fri, 20 Jul 2007 10:09:04 +0200 (CEST)
Subject: [Ethercatmaster-users] Non-persistent output values of Beckhoff
 EL2004 modules [Was: Re: [Fwd: AW: AW: AW: Questions]
In-Reply-To: <46A06024.6010607@gmail.com>
References: <46A06024.6010607@gmail.com>
Message-ID: <Pine.LNX.4.64.0707201002480.3316@ampere.labo01.fmtc.be>

On Fri, 20 Jul 2007, Roland Tollenaar wrote:
Hi Roland,

[Please provide better subjects to your emails, so people searching
the list archives shouldn't scan every message!]

> The second response from ETG.
>
> What is a Wireshark scan? LRW LWR?

wireshark is the "new" name of ethereal (a network sniffer).  I think LRW and
LWR are meant to be "Logical Read Write" and "Logical Write" (the
latter one is probably the kind of telegram you are using to send
output data to the EL2004).
His suggestion seems to offer the best solution to your problem
AFAIK. Either send him the wireshark output, or compare it yourself
to the scan obtained using the free (actually, not free :-) version of
twincat.  This is how Tom solved most of the problems too.

regards,

Klaas

> -------- Original Message --------
> Subject: AW: AW: AW: Questions
> Date: Thu, 19 Jul 2007 15:22:31 +0200
> From: Florian H?fele (ETG) <F.Haefele at ethercat.org>
> To: R.W.A. Tollenaar <r.tollenaar at tosec.nl>
>
> Dear Mr. Tollenaar,
>
> If you use logical addressing you need to send the datagram cyclically.
> Thus, you have to send a value to the EL2004, either 0 or 1.
> Have you made a Wireshark scan to see what kind of process data you
> send? Please do this an check for the LRW or LWR command you use to
> address the EL2004 and check the area of the logical memory area within
> the command which is mapped to the 2004 terminal.
>
> If the FMMU and SyncManager settings are correct and the Wireshark scan
> proofs correct values in the commands please send me your tsm file and a
> Wireshark scan.

From klaas.gadeyne at fmtc.be  Fri Jul 20 10:16:47 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Fri, 20 Jul 2007 10:16:47 +0200 (CEST)
Subject: [Ethercatmaster-users] Non-persistent output of Beckhoff EL2004
 moduels [Was: Re: netif.h]
In-Reply-To: <46A05F2E.3040406@gmail.com>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
	<46A05F2E.3040406@gmail.com>
Message-ID: <Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>

On Fri, 20 Jul 2007, Roland Tollenaar wrote:
[...]
[Part 2 of my whining session: Please don't top quote on this mailinglist]

> Tom says that the txandrx call must be placed in a separate thread, I
> have not had time to try this yet but I don;t see the fundamental
> difference. Even in a thread I will have to repetitively call the
> rxandtx and at best, if the outputs do not stay up, they will flash on
> and off.

I suppose you are now sleeping in your main thread between consecutive
rtandtx calls?  AFAIK (without looking at the code) this should only
influence the real-time behaviour of your application.

Klaas


From rwatollenaar at gmail.com  Fri Jul 20 10:26:00 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Fri, 20 Jul 2007 10:26:00 +0200
Subject: [Ethercatmaster-users] Non-persistent output of Beckhoff EL2004
 moduels [Was: Re: netif.h]
In-Reply-To: <Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
	<46A05F2E.3040406@gmail.com>
	<Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>
Message-ID: <46A07198.2050807@gmail.com>

Hi Klaas,

> [Part 2 of my whining session: Please don't top quote on this mailinglist]
No problem, I know I am sloppy with subjects. But you will have to 
explain what you mean with top quote if you want me to stop doing 
whatever it is you mean.

> 
> 
> I suppose you are now sleeping in your main thread between consecutive
> rtandtx calls? 
I have no explicit sleep AFAIK. Simply a while loop.


> AFAIK (without looking at the code) this should only
> influence the real-time behaviour of your application.
What are you saying? That you would also expect the outputs to stay up?

Roland.

> 
> Klaas
> 


From klaas.gadeyne at fmtc.be  Fri Jul 20 10:48:33 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Fri, 20 Jul 2007 10:48:33 +0200 (CEST)
Subject: [Ethercatmaster-users] Non-persistent output of Beckhoff EL2004
 moduels [Was: Re: netif.h]
In-Reply-To: <46A07198.2050807@gmail.com>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
	<46A05F2E.3040406@gmail.com>
	<Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>
	<46A07198.2050807@gmail.com>
Message-ID: <Pine.LNX.4.64.0707201043150.3316@ampere.labo01.fmtc.be>

On Fri, 20 Jul 2007, Roland Tollenaar wrote:
>> [Part 2 of my whining session: Please don't top quote on this mailinglist]
> No problem, I know I am sloppy with subjects. But you will have to
> explain what you mean with top quote if you want me to stop doing
> whatever it is you mean.

What you do in this email is better :-)  Top quoting means answering
above the question.  See e.g. <http://www.netmeister.org/news/learn2quote2.html#ss2.3>

>> I suppose you are now sleeping in your main thread between consecutive
>> rtandtx calls?
> I have no explicit sleep AFAIK. Simply a while loop.

Even that should work I guess.

>> AFAIK (without looking at the code) this should only
>> influence the real-time behaviour of your application.
> What are you saying? That you would also expect the outputs to stay up?

Indeed.  Can you (re)post a _minimal_ (i.e. without all the
configuration stuff of other slave modules) source example that
exhibits the problem [*]?

regards,

Klaas

[*] You will find this probably more easy anyway in order to analyse
the wireshark output if you're not used to using wireshark.



From rolandtollenaar at gmail.com  Fri Jul 20 11:22:49 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Fri, 20 Jul 2007 09:22:49 +0000
Subject: [Ethercatmaster-users] Non-persistent output of Beckhoff EL2004
	moduels [Was: Re: netif.h]
In-Reply-To: <Pine.LNX.4.64.0707201043150.3316@ampere.labo01.fmtc.be>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
	<46A05F2E.3040406@gmail.com>
	<Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>
	<46A07198.2050807@gmail.com>
	<Pine.LNX.4.64.0707201043150.3316@ampere.labo01.fmtc.be>
Message-ID: <bc4264770707200222v4eecb980i22e3321ed7966256@mail.gmail.com>

Hi

 > What are you saying? That you would also expect the outputs to stay up?
>
> Indeed.  Can you (re)post a _minimal_ (i.e. without all the
> configuration stuff of other slave modules) source example that
> exhibits the problem [*]?

Will this do?

#include <posix/pthread.h>
#include <signal.h>
#include <sys/mman.h>

#include <al/ethercat_master.h>
#include <al/ethercat_AL.h>
#include <al/ethercat_process_data.h>
#include <ethercat/ethercat_xenomai_drv.h>
#include <ethercat/netif.h>
#include <dll/ethercat_dll.h>
#include <dll/ethercat_frame.h>
#include <dll/ethercat_slave_memory.h>
#include <al/ethercat_slave_conf.h>
#include <al/ethercat_slave_handler.h>

struct netif *ni;

///SlaveConfig EK1100 [Bus Coupler]
EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig
EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL2004(1) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_1(1);
EC_FMMU fmmu0_EL2004_1(0x00010000,1,0,3,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_1(1); //argument=length
EC_SyncMan syncman0_EL2004_1(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_1(0x7d43052,0x100000,0x03ec,&fmmu_config_EL2004_1,&pd_config_EL2004_1);

static void init_slave_db() {
	///create slave database	
	EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(10);
//argument=#slaves

	
	///Connect actual fmmu and process data config to respective handles
for EL 2004 (DO)
	fmmu_config_EL2004_1[0] = fmmu0_EL2004_1;
	pd_config_EL2004_1[0]   = syncman0_EL2004_1;
	
	
	///Commit the slave config objects to the slave database
	slave_db->set_conf(&EC_EK1100,0);
	slave_db->set_conf(&EC_EL2004_1,1);
	
}

static void* run_master(void * arg) {
	
	///get network handle
	ni = init_ec((char*)arg);

	///initialize the slave db (calls the above defined function of course)
	init_slave_db();
	
	if(ni != 0) {
		printf("Attach netif \n\n");
		EtherCAT_DataLinkLayer::instance()->attach(ni);  //attach to what?
		printf("Master initializing \n\n");
		EtherCAT_Master * EM = EtherCAT_Master::instance();

		///EK1100 to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
		printf("Setting EK1100 to OP STATE\n");
		if(sh_ek1100->to_state(EC_OP_STATE))
			printf("EK1100 succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EK1100 in OP STATE\n");

		///EL2004(1) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el2004_1 = EM->get_slave_handler(0x03ec);
		printf("Setting EL2004(1) to OP STATE\n");
		if(sh_el2004_1->to_state(EC_OP_STATE))
			printf("EL2004(1) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL2004(1) in OP STATE\n");	

				
		printf("AL initializing \n\n");
		EtherCAT_AL * AL = EtherCAT_AL::instance();
		
		///Set digital output
		unsigned char msg[9] = {0x0f};
		if(AL->isReady()) {
			printf("Test: outputs: \n\n");	
			int count = 0;
			while(count<100000) {
				msg[0]=0x0f;
				
				if(EM->txandrx_PD(sizeof(msg),msg)){
					printf("msg[6], %x, msg[7] %x \n",msg[6], msg[7]);
				}
				else{
					printf("txandrx failed: \n\n");
				}
			
				count++;
			}
		//	printf("Test done.\n");
		}
		


		close_socket(ni);
		
	}
}


Roland





>
> regards,
>
> Klaas
>
> [*] You will find this probably more easy anyway in order to analyse
> the wireshark output if you're not used to using wireshark.
>
>


From rolandtollenaar at gmail.com  Fri Jul 20 11:24:33 2007
From: rolandtollenaar at gmail.com (roland Tollenaar)
Date: Fri, 20 Jul 2007 09:24:33 +0000
Subject: [Ethercatmaster-users] Non-persistent output of Beckhoff EL2004
	moduels [Was: Re: netif.h]
In-Reply-To: <46A07198.2050807@gmail.com>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
	<46A05F2E.3040406@gmail.com>
	<Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>
	<46A07198.2050807@gmail.com>
Message-ID: <bc4264770707200224s2043f946q9ee14b4b09f2a365@mail.gmail.com>

Hi Klaas,

herewith the same as in the previous mail, only this example is
entirely complete and tested to compile.

regards,

Roland.

#include <posix/pthread.h>
#include <signal.h>
#include <sys/mman.h>

#include <al/ethercat_master.h>
#include <al/ethercat_AL.h>
#include <al/ethercat_process_data.h>
#include <ethercat/ethercat_xenomai_drv.h>
#include <ethercat/netif.h>
#include <dll/ethercat_dll.h>
#include <dll/ethercat_frame.h>
#include <dll/ethercat_slave_memory.h>
#include <al/ethercat_slave_conf.h>
#include <al/ethercat_slave_handler.h>

struct netif *ni;

///SlaveConfig EK1100 [Bus Coupler]
EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig
EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL2004(1) [Digital Output]
EtherCAT_FMMU_Config fmmu_config_EL2004_1(1);
EC_FMMU fmmu0_EL2004_1(0x00010000,1,0,3,0x0F00,0,false,true,true);
EtherCAT_PD_Config pd_config_EL2004_1(1); //argument=length
EC_SyncMan syncman0_EL2004_1(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig
EC_EL2004_1(0x7d43052,0x100000,0x03ec,&fmmu_config_EL2004_1,&pd_config_EL2004_1);

static void init_slave_db() {
	///create slave database	
	EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(10);
//argument=#slaves

	
	///Connect actual fmmu and process data config to respective handles
for EL 2004 (DO)
	fmmu_config_EL2004_1[0] = fmmu0_EL2004_1;
	pd_config_EL2004_1[0]   = syncman0_EL2004_1;
	
	
	///Commit the slave config objects to the slave database
	slave_db->set_conf(&EC_EK1100,0);
	slave_db->set_conf(&EC_EL2004_1,1);
	
}

static void* run_master(void * arg) {
	
	///get network handle
	ni = init_ec((char*)arg);

	///initialize the slave db (calls the above defined function of course)
	init_slave_db();
	
	if(ni != 0) {
		printf("Attach netif \n\n");
		EtherCAT_DataLinkLayer::instance()->attach(ni);  //attach to what?
		printf("Master initializing \n\n");
		EtherCAT_Master * EM = EtherCAT_Master::instance();

		///EK1100 to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
		printf("Setting EK1100 to OP STATE\n");
		if(sh_ek1100->to_state(EC_OP_STATE))
			printf("EK1100 succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EK1100 in OP STATE\n");

		///EL2004(1) to operational state
		printf("Getting slave handler\n");
		EtherCAT_SlaveHandler * sh_el2004_1 = EM->get_slave_handler(0x03ec);
		printf("Setting EL2004(1) to OP STATE\n");
		if(sh_el2004_1->to_state(EC_OP_STATE))
			printf("EL2004(1) succesfully set in OP STATE\n");
		else
			printf("\nfailed to set EL2004(1) in OP STATE\n");	

				
		printf("AL initializing \n\n");
		EtherCAT_AL * AL = EtherCAT_AL::instance();
		
		///Set digital output
		unsigned char msg[9] = {0x0f};
		if(AL->isReady()) {
			printf("Test: outputs: \n\n");	
			int count = 0;
			while(count<100000) {
				msg[0]=0x0f;
				
				if(EM->txandrx_PD(sizeof(msg),msg)){
					printf("msg[6], %x, msg[7] %x \n",msg[6], msg[7]);
				}
				else{
					printf("txandrx failed: \n\n");
				}
			
				count++;
			}
		//	printf("Test done.\n");
		}
		


		close_socket(ni);
		
	}
}

void catch_signal(int sig)
{
   if(ni != 0)
		close_socket(ni);
	exit(1);
}

int main(int argc, char** argv)
{

	signal(SIGTERM, catch_signal);
   signal(SIGINT, catch_signal);
   signal(SIGHUP, catch_signal);
	mlockall(MCL_CURRENT|MCL_FUTURE);

	if (argc < 2) {
        printf("usage: %s <interface>\n", argv[0]);
        return 0;
    }

	pthread_t xenothread;
	pthread_attr_t xenothread_attr;

	//Set attributes of thread
	pthread_attr_init (& xenothread_attr);

	//Start thread
	if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1]) != 0) {
		printf("Cannot create thread EtherCatThread.\n");
		exit(1);
	}
   pthread_join( xenothread, 0 );
	return 0;
}




On 7/20/07, Roland Tollenaar <rwatollenaar at gmail.com> wrote:
> Hi Klaas,
>
> > [Part 2 of my whining session: Please don't top quote on this mailinglist]
> No problem, I know I am sloppy with subjects. But you will have to
> explain what you mean with top quote if you want me to stop doing
> whatever it is you mean.
>
> >
> >
> > I suppose you are now sleeping in your main thread between consecutive
> > rtandtx calls?
> I have no explicit sleep AFAIK. Simply a while loop.
>
>
> > AFAIK (without looking at the code) this should only
> > influence the real-time behaviour of your application.
> What are you saying? That you would also expect the outputs to stay up?
>
> Roland.
>
> >
> > Klaas
> >
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>


From rwatollenaar at gmail.com  Sat Jul 21 13:52:20 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Sat, 21 Jul 2007 13:52:20 +0200
Subject: [Ethercatmaster-users] high-byte low byte (EL 4132) (or EL 4102)
Message-ID: <46A1F374.1030207@gmail.com>

Hi List,

Would anyone by chance know in what sequence the high and the low byte 
of the analog outputs is ordered in the msg?

the 4132 uses 4 bytes and has two outputs. Are the bytes ordered

HB1 LB1 HB2 LB2

or

LB1 HB1 LB2 HB2

or

HB1 HB2 LB1 LB2

or

etc.

?

Kind regards,

Roland Tollenaar


From rwatollenaar at gmail.com  Sat Jul 21 14:09:33 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Sat, 21 Jul 2007 14:09:33 +0200
Subject: [Ethercatmaster-users] Non-persistent output of Beckhoff EL2004
 moduels [Was: Re: netif.h]
In-Reply-To: <Pine.LNX.4.64.0707201043150.3316@ampere.labo01.fmtc.be>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
	<46A05F2E.3040406@gmail.com>
	<Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>
	<46A07198.2050807@gmail.com>
	<Pine.LNX.4.64.0707201043150.3316@ampere.labo01.fmtc.be>
Message-ID: <46A1F77D.30001@gmail.com>

Hi,

Regarding this topic of non-persistent outputs, I can say now that I 
have placed txandrx in a separate real-time thread opearting on period 
time 1ms and the behaviour is identical.

I REALLY need some help here. I will try get a wireshark scan but having 
never done this before, it may take a while. If anyone has suggestions 
of things I can try please let me know.

I am getting desparate.

Kind regards,

Roland

Klaas Gadeyne wrote:
> On Fri, 20 Jul 2007, Roland Tollenaar wrote:
>>> [Part 2 of my whining session: Please don't top quote on this 
>>> mailinglist]
>> No problem, I know I am sloppy with subjects. But you will have to
>> explain what you mean with top quote if you want me to stop doing
>> whatever it is you mean.
> 
> What you do in this email is better :-)  Top quoting means answering
> above the question.  See e.g. 
> <http://www.netmeister.org/news/learn2quote2.html#ss2.3>
> 
>>> I suppose you are now sleeping in your main thread between consecutive
>>> rtandtx calls?
>> I have no explicit sleep AFAIK. Simply a while loop.
> 
> Even that should work I guess.
> 
>>> AFAIK (without looking at the code) this should only
>>> influence the real-time behaviour of your application.
>> What are you saying? That you would also expect the outputs to stay up?
> 
> Indeed.  Can you (re)post a _minimal_ (i.e. without all the
> configuration stuff of other slave modules) source example that
> exhibits the problem [*]?
> 
> regards,
> 
> Klaas
> 
> [*] You will find this probably more easy anyway in order to analyse
> the wireshark output if you're not used to using wireshark.
> 
> 


From rwatollenaar at gmail.com  Sat Jul 21 18:02:33 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Sat, 21 Jul 2007 18:02:33 +0200
Subject: [Ethercatmaster-users] Monitoring ethercat traffic
Message-ID: <46A22E19.9000604@gmail.com>

Hi,

I want to try monitor the ethernet traffic to sort out the 
non-persistent digital output problem. Only both wireshark and 
ether-real (I know they are the same but there are still older etherreal 
  versions out there) crash on the windows system i want to monitor with.

Secondly I am not sure how to connect a monitoring machine to the 
system. When I connect a switch the ethercat communication gives errors 
through EML. How must the switch be placed in the network topology?

I cannot install the sniffer on the platform I am running EML on.

Regards,

Roland


From rwatollenaar at gmail.com  Sat Jul 21 16:23:41 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Sat, 21 Jul 2007 16:23:41 +0200
Subject: [Ethercatmaster-users] Non-persistent output of Beckhoff EL2004
 moduels [Was: Re: netif.h]
In-Reply-To: <Pine.LNX.4.64.0707201043150.3316@ampere.labo01.fmtc.be>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
	<46A05F2E.3040406@gmail.com>
	<Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>
	<46A07198.2050807@gmail.com>
	<Pine.LNX.4.64.0707201043150.3316@ampere.labo01.fmtc.be>
Message-ID: <46A216ED.5060505@gmail.com>

Hi,

Another bit of light to shed on this problem.

I have now included the analog output in the test and have placed this 
on the scope. The response time is excellent (my xenomai system 
maintains the 1ms update time perfectly as can be witnessed on the 
scope) but moreover, the analog output stays up as it should.

There should be no reason why the digital outputs don;t behave in a 
similar fashion. Something is wrong, can it be with EML?

Regards,

Roland





Klaas Gadeyne wrote:
> On Fri, 20 Jul 2007, Roland Tollenaar wrote:
>>> [Part 2 of my whining session: Please don't top quote on this 
>>> mailinglist]
>> No problem, I know I am sloppy with subjects. But you will have to
>> explain what you mean with top quote if you want me to stop doing
>> whatever it is you mean.
> 
> What you do in this email is better :-)  Top quoting means answering
> above the question.  See e.g. 
> <http://www.netmeister.org/news/learn2quote2.html#ss2.3>
> 
>>> I suppose you are now sleeping in your main thread between consecutive
>>> rtandtx calls?
>> I have no explicit sleep AFAIK. Simply a while loop.
> 
> Even that should work I guess.
> 
>>> AFAIK (without looking at the code) this should only
>>> influence the real-time behaviour of your application.
>> What are you saying? That you would also expect the outputs to stay up?
> 
> Indeed.  Can you (re)post a _minimal_ (i.e. without all the
> configuration stuff of other slave modules) source example that
> exhibits the problem [*]?
> 
> regards,
> 
> Klaas
> 
> [*] You will find this probably more easy anyway in order to analyse
> the wireshark output if you're not used to using wireshark.
> 
> 


From jan.kiszka at web.de  Sun Jul 22 18:30:55 2007
From: jan.kiszka at web.de (Jan Kiszka)
Date: Sun, 22 Jul 2007 18:30:55 +0200
Subject: [Ethercatmaster-users] Monitoring ethercat traffic
In-Reply-To: <46A22E19.9000604@gmail.com>
References: <46A22E19.9000604@gmail.com>
Message-ID: <46A3863F.90207@web.de>

Roland Tollenaar wrote:
> Hi,
> 
> I want to try monitor the ethernet traffic to sort out the 
> non-persistent digital output problem. Only both wireshark and 
> ether-real (I know they are the same but there are still older etherreal 
>   versions out there) crash on the windows system i want to monitor with.
> 
> Secondly I am not sure how to connect a monitoring machine to the 
> system. When I connect a switch the ethercat communication gives errors 
> through EML. How must the switch be placed in the network topology?
> 
> I cannot install the sniffer on the platform I am running EML on.

Why? It should work if you enable and load RTcap, see RTcap.README. Then
you may save the traffic to a file (tcpdump -w) and load it later on
into Wireshark, or sniff directly in "real-time" on rteth0.

But I'm afraid the crash will not magically vanish that way. Maybe it is
related to the Wireshark Ethercat plugin, then you should bug the guys
at ETG with a report (and also urge them to merge their stuff into the
official release - to make life easier for everyone, them included).

Jan

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 250 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070722/cbaea44b/attachment.pgp>

From klaas.gadeyne at fmtc.be  Mon Jul 23 08:48:01 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Mon, 23 Jul 2007 08:48:01 +0200 (CEST)
Subject: [Ethercatmaster-users] Monitoring ethercat traffic
In-Reply-To: <46A22E19.9000604@gmail.com>
References: <46A22E19.9000604@gmail.com>
Message-ID: <Pine.LNX.4.64.0707230843520.7827@ampere.labo01.fmtc.be>

On Sat, 21 Jul 2007, Roland Tollenaar wrote:
Roland,

> I want to try monitor the ethernet traffic to sort out the
> non-persistent digital output problem. Only both wireshark and
> ether-real (I know they are the same but there are still older etherreal
>  versions out there) crash on the windows system i want to monitor with.
>
> Secondly I am not sure how to connect a monitoring machine to the
> system. When I connect a switch the ethercat communication gives errors
> through EML. How must the switch be placed in the network topology?

Please be more _specific_ if you want help from this ML.  How are
people on this list supposed to know what you mean with "ethercat
communcation gives errors through EML"?

I have worked with a switch an wireshark on a separate platform
(wireshark not ported to eCos) and Tom has used wireshark too (I think
it was not running on his rtnet platform too).

> I cannot install the sniffer on the platform I am running EML on.

Same remark: Be more specific!

Klaas

ps.  Your subject lines do improve though :-)


From klaas.gadeyne at fmtc.be  Mon Jul 23 08:42:25 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Mon, 23 Jul 2007 08:42:25 +0200 (CEST)
Subject: [Ethercatmaster-users] Non-persistent output of Beckhoff EL2004
 moduels [Was: Re: netif.h]
In-Reply-To: <bc4264770707200224s2043f946q9ee14b4b09f2a365@mail.gmail.com>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
	<46A05F2E.3040406@gmail.com>
	<Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>
	<46A07198.2050807@gmail.com>
	<bc4264770707200224s2043f946q9ee14b4b09f2a365@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0707230840280.7827@ampere.labo01.fmtc.be>

On Fri, 20 Jul 2007, roland Tollenaar wrote:
> herewith the same as in the previous mail, only this example is
> entirely complete and tested to compile.

[...]

Apart from configuration data (whose "correctness" I cannot judge),
your program seems fine.  Either this is thus an EML bug, or there's
something wrong in your slave config.  Wireshark time I guess...

Klaas


From harti_said at yahoo.fr  Mon Jul 23 11:27:46 2007
From: harti_said at yahoo.fr (said harti)
Date: Mon, 23 Jul 2007 11:27:46 +0200 (CEST)
Subject: [Ethercatmaster-users] The EtherCAT Tarfic scan
In-Reply-To: <46A46576.1030301@gmail.com>
Message-ID: <119429.53138.qm@web37312.mail.mud.yahoo.com>

Hi,

This is the Trafic scan between :

1)  Twincat Tool and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
2)  EML and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)

(I have gived 5V (3fff to EL4102) and 0x0f to DO EL2004).

Regards,

Said HARTI

Roland Tollenaar <rwatollenaar at gmail.com> a ?crit : HI Said  

> Can you please tell the value of the reponse time of your AO ?
> Me i get between 1,85ms and 2ms (the time betwen when i turn on my DI 
> and the moment when my AO responde).

The reponse time between my master commanding and the outputs responding 
seems to be less than 1ms. I manage to get perfect 1ms time-steps on a 
scope.

I have not yet done a test to measure the time delay between giving an 
input and response on the AO. So I cannot answer your question at the 
moment.



>  
> In concerne the DO, i still trying all possibilites in order to get LEDs 
> saty up...
> tomorrow (monday) i going to poste here (for Klaas, Tom, Florian...and 
> you) my ethereal scan, i get too some warning messages from my linux 
> system when i use the switch, but i dont get any ethercat communication 
> errors...
Please post you scan I have already posted your previous scan but if you 
can make a new one stating clearly what you are doing (along with the 
Twincat scan for an identical experiment but where twincat keeps the 
outputs up) then maybe Klaas or Tom can tell us what is wrong.


Roland


>  
> Thanks,
>  
> Said HARTI
> 
> */Roland Tollenaar /* a ?crit :
> 
>     Hi,
> 
>     Another bit of light to shed on this problem.
> 
>     I have now included the analog output in the test and have placed this
>     on the scope. The response time is excellent (my xenomai system
>     maintains the 1ms update time perfectly as can be witnessed on the
>     scope) but moreover, the analog output stays up as it should.
> 
>     There should be no reason why the digital outputs don;t behave in a
>     similar fashion. Something is wrong, can it be with EML?
> 
>     Regards,
> 
>     Roland
> 
> 
> 
> 
> 
>     Klaas Gadeyne wrote:
>      > On Fri, 20 Jul 2007, Roland Tollenaar wrote:
>      >>> [Part 2 of my whining session: Please don't top quote on this
>      >>> mailinglist]
>      >> No problem, I know I am sloppy with subjects. But you will have to
>      >> explain what you mean with top quote if you want me to stop doing
>      >> whatever it is you mean.
>      >
>      > What you do in this email is better :-) Top quoting means answering
>      > above the question. See e.g.
>      >
>      >
>      >>> I suppose you are now sleeping in your main thread between
>     consecutive
>      >>> rtandtx calls?
>      >> I have no explicit sleep AFAIK. Simply a while loop.
>      >
>      > Even that should work I guess.
>      >
>      >>> AFAIK (without looking at the code) this should only
>      >>> influence the real-time behaviour of your application.
>      >> What are you saying? That you would also expect the outputs to
>     stay up?
>      >
>      > Indeed. Can you (re)post a _minimal_ (i.e. without all the
>      > configuration stuff of other slave modules) source example that
>      > exhibits the problem [*]?
>      >
>      > regards,
>      >
>      > Klaas
>      >
>      > [*] You will find this probably more easy anyway in order to analyse
>      > the wireshark output if you're not used to using wireshark.
>      >
>      >
>     _______________________________________________
>     Ethercatmaster-users mailing list
>     Ethercatmaster-users at lists.berlios.de
>     https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 
> 
> ------------------------------------------------------------------------
> Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de 
> mail ! 


       
---------------------------------
 Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de mail !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070723/c232ff2a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Twicat_scan.pcap
Type: application/octet-stream
Size: 3584 bytes
Desc: 3171399594-Twicat_scan.pcap
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070723/c232ff2a/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: EML_scan.pcap
Type: application/octet-stream
Size: 3140 bytes
Desc: 4206986205-EML_scan.pcap
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070723/c232ff2a/attachment-0001.obj>

From harti_said at yahoo.fr  Mon Jul 23 11:33:44 2007
From: harti_said at yahoo.fr (said harti)
Date: Mon, 23 Jul 2007 11:33:44 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re:  Monitoring ethercat traffic
In-Reply-To: <Pine.LNX.4.64.0707230843520.7827@ampere.labo01.fmtc.be>
Message-ID: <280366.14123.qm@web37301.mail.mud.yahoo.com>

I have posted to Tom, Klaas and Rolland, 2 sacn trafics realised by the Wireshark tool :

1 - EML=>Modules
2 - Twincat tool=>modules

Regards,

Said HARTI

Klaas Gadeyne <klaas.gadeyne at fmtc.be> a ?crit : On Sat, 21 Jul 2007, Roland Tollenaar wrote:
Roland,

> I want to try monitor the ethernet traffic to sort out the
> non-persistent digital output problem. Only both wireshark and
> ether-real (I know they are the same but there are still older etherreal
>  versions out there) crash on the windows system i want to monitor with.
>
> Secondly I am not sure how to connect a monitoring machine to the
> system. When I connect a switch the ethercat communication gives errors
> through EML. How must the switch be placed in the network topology?

Please be more _specific_ if you want help from this ML.  How are
people on this list supposed to know what you mean with "ethercat
communcation gives errors through EML"?

I have worked with a switch an wireshark on a separate platform
(wireshark not ported to eCos) and Tom has used wireshark too (I think
it was not running on his rtnet platform too).

> I cannot install the sniffer on the platform I am running EML on.

Same remark: Be more specific!

Klaas

ps.  Your subject lines do improve though :-)
_______________________________________________
Ethercatmaster-users mailing list
Ethercatmaster-users at lists.berlios.de
https://lists.berlios.de/mailman/listinfo/ethercatmaster-users


       
---------------------------------
 Ne gardez plus qu'une seule adresse mail ! Copiez vos mails vers Yahoo! Mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070723/7478c1e9/attachment.html>

From rwatollenaar at gmail.com  Mon Jul 23 10:23:18 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 23 Jul 2007 10:23:18 +0200
Subject: [Ethercatmaster-users] RE : Re: Non-persistent output of
 Beckhoff EL2004 moduels [Was: Re: netif.h]
In-Reply-To: <812002.20036.qm@web37308.mail.mud.yahoo.com>
References: <812002.20036.qm@web37308.mail.mud.yahoo.com>
Message-ID: <46A46576.1030301@gmail.com>

HI Said		

> Can you please tell the value of the reponse time of your AO ?
> Me i get between 1,85ms and 2ms (the time betwen when i turn on my DI 
> and the moment when my AO responde).

The reponse time between my master commanding and the outputs responding 
seems to be less than 1ms. I manage to get perfect 1ms time-steps on a 
scope.

I have not yet done a test to measure the time delay between giving an 
input and response on the AO. So I cannot answer your question at the 
moment.



>  
> In concerne the DO, i still trying all possibilites in order to get LEDs 
> saty up...
> tomorrow (monday) i going to poste here (for Klaas, Tom, Florian...and 
> you) my ethereal scan, i get too some warning messages from my linux 
> system when i use the switch, but i dont get any ethercat communication 
> errors...
Please post you scan I have already posted your previous scan but if you 
can make a new one stating clearly what you are doing (along with the 
Twincat scan for an identical experiment but where twincat keeps the 
outputs up) then maybe Klaas or Tom can tell us what is wrong.


Roland


>  
> Thanks,
>  
> Said HARTI
> 
> */Roland Tollenaar <rwatollenaar at gmail.com>/* a ?crit :
> 
>     Hi,
> 
>     Another bit of light to shed on this problem.
> 
>     I have now included the analog output in the test and have placed this
>     on the scope. The response time is excellent (my xenomai system
>     maintains the 1ms update time perfectly as can be witnessed on the
>     scope) but moreover, the analog output stays up as it should.
> 
>     There should be no reason why the digital outputs don;t behave in a
>     similar fashion. Something is wrong, can it be with EML?
> 
>     Regards,
> 
>     Roland
> 
> 
> 
> 
> 
>     Klaas Gadeyne wrote:
>      > On Fri, 20 Jul 2007, Roland Tollenaar wrote:
>      >>> [Part 2 of my whining session: Please don't top quote on this
>      >>> mailinglist]
>      >> No problem, I know I am sloppy with subjects. But you will have to
>      >> explain what you mean with top quote if you want me to stop doing
>      >> whatever it is you mean.
>      >
>      > What you do in this email is better :-) Top quoting means answering
>      > above the question. See e.g.
>      >
>      >
>      >>> I suppose you are now sleeping in your main thread between
>     consecutive
>      >>> rtandtx calls?
>      >> I have no explicit sleep AFAIK. Simply a while loop.
>      >
>      > Even that should work I guess.
>      >
>      >>> AFAIK (without looking at the code) this should only
>      >>> influence the real-time behaviour of your application.
>      >> What are you saying? That you would also expect the outputs to
>     stay up?
>      >
>      > Indeed. Can you (re)post a _minimal_ (i.e. without all the
>      > configuration stuff of other slave modules) source example that
>      > exhibits the problem [*]?
>      >
>      > regards,
>      >
>      > Klaas
>      >
>      > [*] You will find this probably more easy anyway in order to analyse
>      > the wireshark output if you're not used to using wireshark.
>      >
>      >
>     _______________________________________________
>     Ethercatmaster-users mailing list
>     Ethercatmaster-users at lists.berlios.de
>     https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 
> 
> ------------------------------------------------------------------------
> Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de 
> mail ! <http://fr.promotions.yahoo.com/mail/nouveau_yahoomail2.html>


From rwatollenaar at gmail.com  Mon Jul 23 10:45:17 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 23 Jul 2007 10:45:17 +0200
Subject: [Ethercatmaster-users] Monitoring ethercat traffic
In-Reply-To: <46A3863F.90207@web.de>
References: <46A22E19.9000604@gmail.com> <46A3863F.90207@web.de>
Message-ID: <46A46A9D.6010603@gmail.com>

HI,

Actually etherreal and wireshark were installed on a windows machine. 
This is where they crash, on trying to monitor normal (office) network 
traffic).

So the problem is not related to ethercat, not related to xenomai or 
rtnet but purely related to wireshark, windows and/or possibly myself. 
THe latter being of course very unlikely because in this particular case 
I simple follow pretty standard installation operations.

Regards,

Roland

Jan Kiszka wrote:
> Roland Tollenaar wrote:
>> Hi,
>>
>> I want to try monitor the ethernet traffic to sort out the 
>> non-persistent digital output problem. Only both wireshark and 
>> ether-real (I know they are the same but there are still older etherreal 
>>   versions out there) crash on the windows system i want to monitor with.
>>
>> Secondly I am not sure how to connect a monitoring machine to the 
>> system. When I connect a switch the ethercat communication gives errors 
>> through EML. How must the switch be placed in the network topology?
>>
>> I cannot install the sniffer on the platform I am running EML on.
> 
> Why? It should work if you enable and load RTcap, see RTcap.README. Then
> you may save the traffic to a file (tcpdump -w) and load it later on
> into Wireshark, or sniff directly in "real-time" on rteth0.
> 
> But I'm afraid the crash will not magically vanish that way. Maybe it is
> related to the Wireshark Ethercat plugin, then you should bug the guys
> at ETG with a report (and also urge them to merge their stuff into the
> official release - to make life easier for everyone, them included).
> 
> Jan
> 


From rwatollenaar at gmail.com  Mon Jul 23 10:31:31 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 23 Jul 2007 10:31:31 +0200
Subject: [Ethercatmaster-users] Non-persistent output of Beckhoff EL2004
 moduels [Was: Re: netif.h]
In-Reply-To: <Pine.LNX.4.64.0707230840280.7827@ampere.labo01.fmtc.be>
References: <bc4264770707120448ybc10755qa6201b0af488f53@mail.gmail.com>
	<Pine.LNX.4.64.0707191742030.3316@ampere.labo01.fmtc.be>
	<469FC273.9030403@gmail.com>
	<Pine.LNX.4.64.0707200844420.3316@ampere.labo01.fmtc.be>
	<46A05F2E.3040406@gmail.com>
	<Pine.LNX.4.64.0707201010340.3316@ampere.labo01.fmtc.be>
	<46A07198.2050807@gmail.com>
	<bc4264770707200224s2043f946q9ee14b4b09f2a365@mail.gmail.com>
	<Pine.LNX.4.64.0707230840280.7827@ampere.labo01.fmtc.be>
Message-ID: <46A46763.903@gmail.com>

> Apart from configuration data (whose "correctness" I cannot judge),
> your program seems fine.  Either this is thus an EML bug, or there's
> something wrong in your slave config.  

If the success notificatioin of the EML is anything to jusdge by, then 
the configuration data is correct. If EML cannot report on certain 
errors then the only possibility is that there is some difference in for 
example the physical start address or some other bit of setting between 
the 2004 with revision 0x0001000 and 0x00. I have the prior, Tom's 
device was the latter. I am using Tom's configuration settings.

Also you will have noticed form my weekend reporting that the analog 
outputs are functioning, staying up etc. As are the digital inputs.


 >Wireshark time I guess...
I agree. But I have two problems

1-Both Wireshark and Ethreal crash when I start logging on a normal 
network connection (not even ethercat)

2-The other problem is that I don't know how to connect to a ethercat 
network such that I can log. The communication between the master and 
the slave breaks down the moment I have a switch in between.
However Said (who is having exactly the same problem) posted a wireshark 
sequence this morning which might help solve the problem.


Kind regards,

Roland



> 
> Klaas
> 


From rwatollenaar at gmail.com  Mon Jul 23 10:37:59 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 23 Jul 2007 10:37:59 +0200
Subject: [Ethercatmaster-users] Monitoring ethercat traffic
In-Reply-To: <Pine.LNX.4.64.0707230843520.7827@ampere.labo01.fmtc.be>
References: <46A22E19.9000604@gmail.com>
	<Pine.LNX.4.64.0707230843520.7827@ampere.labo01.fmtc.be>
Message-ID: <46A468E7.5060109@gmail.com>

HI Klaas,

>> Secondly I am not sure how to connect a monitoring machine to the
>> system. When I connect a switch the ethercat communication gives errors
>> through EML. How must the switch be placed in the network topology?
> 
> Please be more _specific_ if you want help from this ML.  How are
> people on this list supposed to know what you mean with "ethercat
> communcation gives errors through EML"?
You are right of course. Problem is I am not in a position to easily 
transfer the exact error to the system I am mailing from. The answer I 
was hoping for was an explanation of how I must connect the monitoring 
system to the EC network.

E.g  "Connect your rtnet system (EC Master) to a normal switch with a 
straight cable, do the same with your EC slave. Make susre there are no 
other devices connected to the switch. And obviously make sure you are 
supplying power to your switch. :)"


> I have worked with a switch an wireshark on a separate platform
> (wireshark not ported to eCos) and Tom has used wireshark too (I think
> it was not running on his rtnet platform too).
Could you be more specific. :) How did you connect to the EC network?


Regards,

Roland


> 
> Klaas
> 
> ps.  Your subject lines do improve though :-)
> 


From klaas.gadeyne at fmtc.be  Mon Jul 23 13:06:50 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Mon, 23 Jul 2007 13:06:50 +0200 (CEST)
Subject: [Ethercatmaster-users] Monitoring ethercat traffic
In-Reply-To: <46A468E7.5060109@gmail.com>
References: <46A22E19.9000604@gmail.com>
	<Pine.LNX.4.64.0707230843520.7827@ampere.labo01.fmtc.be>
	<46A468E7.5060109@gmail.com>
Message-ID: <Pine.LNX.4.64.0707231259580.7827@ampere.labo01.fmtc.be>

On Mon, 23 Jul 2007, Roland Tollenaar wrote:
> HI Klaas,
>
>>> Secondly I am not sure how to connect a monitoring machine to the
>>> system. When I connect a switch the ethercat communication gives errors
>>> through EML. How must the switch be placed in the network topology?
>> 
>> Please be more _specific_ if you want help from this ML.  How are
>> people on this list supposed to know what you mean with "ethercat
>> communcation gives errors through EML"?
> You are right of course. Problem is I am not in a position to easily transfer 
> the exact error to the system I am mailing from. The answer I was hoping for 
> was an explanation of how I must connect the monitoring system to the EC 
> network.
>
> E.g  "Connect your rtnet system (EC Master) to a normal switch with a 
> straight cable, do the same with your EC slave. Make susre there are no other 
> devices connected to the switch. And obviously make sure you are supplying 
> power to your switch. :)"

See attach.  This seems the (only?) most logic setup to me?

Klaas

-------------- next part --------------
A non-text attachment was scrubbed...
Name: wireshark_setup.png
Type: image/png
Size: 26821 bytes
Desc: 
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070723/17442a0e/attachment.png>

From klaas.gadeyne at fmtc.be  Tue Jul 24 08:39:55 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Tue, 24 Jul 2007 08:39:55 +0200 (CEST)
Subject: [Ethercatmaster-users] The EtherCAT Tarfic scan
In-Reply-To: <119429.53138.qm@web37312.mail.mud.yahoo.com>
References: <119429.53138.qm@web37312.mail.mud.yahoo.com>
Message-ID: <Pine.LNX.4.64.0707240836070.7827@ampere.labo01.fmtc.be>

On Mon, 23 Jul 2007, said harti wrote:
> This is the Trafic scan between :
>
> 1)  Twincat Tool and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
> 2)  EML and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
>
> (I have gived 5V (3fff to EL4102) and 0x0f to DO EL2004).

[...]
I just (re)discovered the ethercat wireshark plugin at ethercat.org is
a dll, so I won't be able to help you out quickly here :-((

Did you compare the 2 output scans yourself and notice important differences?

Klaas



From rwatollenaar at gmail.com  Tue Jul 24 14:00:29 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 24 Jul 2007 14:00:29 +0200
Subject: [Ethercatmaster-users] Monitoring ethercat traffic
In-Reply-To: <Pine.LNX.4.64.0707231259580.7827@ampere.labo01.fmtc.be>
References: <46A22E19.9000604@gmail.com>
	<Pine.LNX.4.64.0707230843520.7827@ampere.labo01.fmtc.be>
	<46A468E7.5060109@gmail.com>
	<Pine.LNX.4.64.0707231259580.7827@ampere.labo01.fmtc.be>
Message-ID: <46A5E9DD.2080005@gmail.com>

Hi Klaas,

> See attach.  This seems the (only?) most logic setup to me?

AFAIK this is what I have. Don't understand why I have a problem.

Roland

> 
> Klaas
> 
> 
> ------------------------------------------------------------------------
> 


From rwatollenaar at gmail.com  Tue Jul 24 14:03:56 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 24 Jul 2007 14:03:56 +0200
Subject: [Ethercatmaster-users] The EtherCAT Tarfic scan
In-Reply-To: <119429.53138.qm@web37312.mail.mud.yahoo.com>
References: <119429.53138.qm@web37312.mail.mud.yahoo.com>
Message-ID: <46A5EAAC.70102@gmail.com>

Hi,

Have I missed any emails on this? Has any conclusion been drawn yet 
regarding this problem?

I am actually getting rather desperate, this is not something I am going 
to sort out without some help. Is Tom still around to have a look into this?

Kind regards,

Roland.



said harti wrote:
> Hi,
> 
> This is the Trafic scan between :
> 
> 1)  Twincat Tool and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
> 2)  EML and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
> 
> (I have gived 5V (3fff to EL4102) and 0x0f to DO EL2004).
> 
> Regards,
> 
> Said HARTI
> 
> */Roland Tollenaar <rwatollenaar at gmail.com>/* a ?crit :
> 
>     HI Said
> 
>      > Can you please tell the value of the reponse time of your AO ?
>      > Me i get between 1,85ms and 2ms (the time betwen when i turn on
>     my DI
>      > and the moment when my AO responde).
> 
>     The reponse time between my master commanding and the outputs
>     responding
>     seems to be less than 1ms. I manage to get perfect 1ms time-steps on a
>     scope.
> 
>     I have not yet done a test to measure the time delay between giving an
>     input and response on the AO. So I cannot answer your question at the
>     moment.
> 
> 
> 
>      >
>      > In concerne the DO, i still trying all possibilites in order to
>     get LEDs
>      > saty up...
>      > tomorrow (monday) i going to poste here (for Klaas, Tom,
>     Florian...and
>      > you) my ethereal scan, i get too some warning messages from my linux
>      > system when i use the switch, but i dont get any ethercat
>     communication
>      > errors...
>     Please post you scan I have already posted your previous scan but if
>     you
>     can make a new one stating clearly what you are doing (along with the
>     Twincat scan for an identical experiment but where twincat keeps the
>     outputs up) then maybe Klaas or Tom can tell us what is wrong.
> 
> 
>     Roland
> 
> 
>      >
>      > Thanks,
>      >
>      > Said HARTI
>      >
>      > */Roland Tollenaar /* a ?crit :
>      >
>      > Hi,
>      >
>      > Another bit of light to shed on this problem.
>      >
>      > I have now included the analog output in the test and have placed
>     this
>      > on the scope. The response time is excellent (my xenomai system
>      > maintains the 1ms update time perfectly as can be witnessed on the
>      > scope) but moreover, the analog output stays up as it should.
>      >
>      > There should be no reason why the digital outputs don;t behave in a
>      > similar fashion. Something is wrong, can it be with EML?
>      >
>      > Regards,
>      >
>      > Roland
>      >
>      >
>      >
>      >
>      >
>      > Klaas Gadeyne wrote:
>      > > On Fri, 20 Jul 2007, Roland Tollenaar wrote:
>      > >>> [Part 2 of my whining session: Please don't top quote on this
>      > >>> mailinglist]
>      > >> No problem, I know I am sloppy with subjects. But you will have to
>      > >> explain what you mean with top quote if you want me to stop doing
>      > >> whatever it is you mean.
>      > >
>      > > What you do in this email is better :-) Top quoting means answering
>      > > above the question. See e.g.
>      > >
>      > >
>      > >>> I suppose you are now sleeping in your main thread between
>      > consecutive
>      > >>> rtandtx calls?
>      > >> I have no explicit sleep AFAIK. Simply a while loop.
>      > >
>      > > Even that should work I guess.
>      > >
>      > >>> AFAIK (without looking at the code) this should only
>      > >>> influence the real-time behaviour of your application.
>      > >> What are you saying? That you would also expect the outputs to
>      > stay up?
>      > >
>      > > Indeed. Can you (re)post a _minimal_ (i.e. without all the
>      > > configuration stuff of other slave modules) source example that
>      > > exhibits the problem [*]?
>      > >
>      > > regards,
>      > >
>      > > Klaas
>      > >
>      > > [*] You will find this probably more easy anyway in order to
>     analyse
>      > > the wireshark output if you're not used to using wireshark.
>      > >
>      > >
>      > _______________________________________________
>      > Ethercatmaster-users mailing list
>      > Ethercatmaster-users at lists.berlios.de
>      > https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>      >
>      >
>      >
>     ------------------------------------------------------------------------
>      > Stockage illimit? de vos mails avec Yahoo! Mail. Changez
>     aujourd'hui de
>      > mail !
> 
> 
> ------------------------------------------------------------------------
> Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de 
> mail ! <http://fr.promotions.yahoo.com/mail/nouveau_yahoomail2.html>


From harti_said at yahoo.fr  Wed Jul 25 14:34:55 2007
From: harti_said at yahoo.fr (said harti)
Date: Wed, 25 Jul 2007 14:34:55 +0200 (CEST)
Subject: [Ethercatmaster-users] CoE (CANopen over EtherCAT) : EL6751
	parameters!
Message-ID: <626686.78410.qm@web37302.mail.mud.yahoo.com>

Hi,

I don't resolved the EL2004 problem yet which flash briefly. Now, in order to progress in my EtherCAT master implementation, I hope test the CANopen  over EtherCAT communication, So i use the EL6751 module : 

Can you please tell me if my EL6751 parameters are correct ? (Logical address, Phy address...) ? (because i got some errors like : Some thing went wrong while scanning network...)

And how can i send some PDOs (or SDOs) to my CANopen Drive (DS402) ?

If you have some ideas, let me know.

Regards,

Said
 
#include <posix/pthread.h>
#include <signal.h>
#include <sys/mman.h>


#include <al/ethercat_master.h>
#include <al/ethercat_AL.h>
#include <al/ethercat_process_data.h>
#include <ethercat/ethercat_xenomai_drv.h>
#include <ethercat/netif.h>
#include <dll/ethercat_dll.h>
#include <dll/ethercat_frame.h>
#include <dll/ethercat_slave_memory.h>
#include <al/ethercat_slave_conf.h>
#include <al/ethercat_slave_handler.h>

struct netif *ni;


///SlaveConfig EK1100

EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL4102


EtherCAT_FMMU_Config fmmu_config_EL4102(2);

EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);

EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102, syncman_mbx1_EL4102};

///process data config (Again seems to be a handle)

EtherCAT_PD_Config pd_config_EL4102(2);///argument=length
EC_SyncMan syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);

///compile the slave configuration

EtherCAT_SlaveConfig EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);

///Modif
///SlaveConfig EL2004
EtherCAT_FMMU_Config fmmu_config_EL2004(1);
EC_FMMU
fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);

EtherCAT_PD_Config pd_config_EL2004(1);
EC_SyncMan syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig EC_EL2004(0x7d43052,0x00100000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);

///SlaveConfig EL1004
EtherCAT_FMMU_Config fmmu_config_EL1004(1);
//EC_FMMU fmmu0_EL1004(0x00010800,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
EC_FMMU fmmu0_EL1004(0x0001000A,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
EtherCAT_PD_Config pd_config_EL1004(1);
EC_SyncMan syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);

EtherCAT_SlaveConfig EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);


///SlaveConfig EL6751

EtherCAT_FMMU_Config fmmu_config_EL6751(3);

EC_FMMU fmmu0_EL6751(0x00000000,0x0000,0x00,0x00,0x0000,0x00,false,true,true);
EC_FMMU fmmu1_EL6751(0x00011800,0x0008,0x00,0x07,0x1400,0x00,true,false,true);
EC_FMMU fmmu2_EL6751(0x00080000,0x0001,0x00,0x01,0x080D,0x00,true,false,true);

EC_SyncMan syncman_mbx0_EL6751(0x1800,558,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman_mbx1_EL6751(0x1A2E,558,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_MbxConfig mbx_conf_EL6751 = {syncman_mbx0_EL6751, syncman_mbx1_EL6751};

EtherCAT_PD_Config pd_config_EL6751(2);///argument=length

EC_SyncMan syncman0_EL6751(0x1000,0,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman1_EL6751(0x1400,8,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);


EtherCAT_SlaveConfig EC_EL6751(0x1A5F3052,0x00000001,0x03ed,&fmmu_config_EL6751,&pd_config_EL6751,&mbx_conf_EL6751);

static void init_slave_db() {

///create slave database

         EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(5); ///argument=#slaves

///Connect actual fmmu and process data config to respective handlesfor EL 4102 (AO)

         fmmu_config_EL4102[0] = fmmu0_EL4102;
         fmmu_config_EL4102[1] = fmmu1_EL4102;
         pd_config_EL4102[0] = syncman0_EL4102;
         pd_config_EL4102[1] = syncman1_EL4102;

///Connect actual fmmu and process data config to respective handles for EL 2004 (DO)

         fmmu_config_EL2004[0] = fmmu0_EL2004;///
         pd_config_EL2004[0] = syncman0_EL2004;///

///Connect actual fmmu and process data config to respective handles for EL 1004 (DI)

         fmmu_config_EL1004[0] = fmmu0_EL1004;///
         pd_config_EL1004[0] = syncman0_EL1004;///
  ///Connect actual fmmu and process data config to respective handles for EL 6751 (CoE)

         fmmu_config_EL6751[0] = fmmu0_EL6751;///
         fmmu_config_EL6751[1] = fmmu1_EL6751;///
         fmmu_config_EL6751[2] = fmmu2_EL6751;///

         pd_config_EL6751[0] = syncman0_EL6751;///
         pd_config_EL6751[1] = syncman1_EL6751;///

///Commit the slave config objects to the slave database

     slave_db->set_conf(&EC_EK1100,0);
         slave_db->set_conf(&EC_EL4102,1);

///Commit the slave config objects to the slave database

         slave_db->set_conf(&EC_EL2004,2);///

///Commit the slave config objects to the slave database

         slave_db->set_conf(&EC_EL1004,3);///

///Commit the slave config objects to the slave database

         slave_db->set_conf(&EC_EL6751,4);///
 }

   
static void* run_master(void * arg) {
    
    ni = init_ec((char*)arg);
    init_slave_db();
    if(ni != 0) {
        printf("Attach netif \n\n");
        EtherCAT_DataLinkLayer::instance()->attach(ni);
        printf("Master initializing \n\n");
        EtherCAT_Master * EM = EtherCAT_Master::instance();
        printf("Getting slave handler\n");
        EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
        //sleep(1);
        printf("Setting EK1100 to OP STATE\n");
        if(sh_ek1100->to_state(EC_OP_STATE))
            printf("EK1100 succesfully set in OP STATE\n");
        else
            printf("\nfailed to set EK1100 in OP STATE\n");
        printf("Getting slave handler\n");
        EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
        printf("Setting EL4102 to OP STATE\n");
        if(sh_el4102->to_state(EC_OP_STATE))
            printf("EL4102 succesfully set in OP STATE\n");
        else
            printf("\nfailed to set EL4102 in OP STATE!!\n");
        
///Modif
           printf("Getting slave handler\n");
                EtherCAT_SlaveHandler * sh_el2004 = EM->get_slave_handler(0x03eb);
        printf("Setting EL2004 to OP STATE\n");
                 if(sh_el2004->to_state(EC_OP_STATE))
                         printf("EL2004 succesfully set in OP STATE\n");
                 else
                         printf("\nFailed to set EL2004 in OP STATE\n");

               printf("Getting slave handler\n");
                EtherCAT_SlaveHandler * sh_el1004 = EM->get_slave_handler(0x03ec);
        printf("Setting EL1004 to OP STATE\n");
                 if(sh_el1004->to_state(EC_OP_STATE))
                         printf("EL1004 succesfully set in OP STATE\n");
                 else
                         printf("\nFailed to set EL1004 in OP STATE\n");


        printf("Getting slave handler\n");
                EtherCAT_SlaveHandler * sh_el6751 = EM->get_slave_handler(0x03ed);
                printf("Setting EL6751 to OP STATE\n");
                 if(sh_el6751->to_state(EC_OP_STATE))
                         printf("EL6751 succesfully set in OP STATE\n");
                 else
                         printf("\nFailed to set EL6751 in OP STATE\n");

        printf("AL initializing \n\n");
        EtherCAT_AL * AL = EtherCAT_AL::instance();
          
int count = 0;
int nbboucle = 100000;
unsigned char msg[5]={0x00, 0x00, 0xff, 0x3f, 0x00};
        
        if(AL->isReady()) {

            printf("Test: CANopen \n\n");
                             
        while(count<nbboucle) {
            
                msg[0]=0xff;
                msg[1]=0x3f;
                msg[2]=0xff;
                msg[3]=0x3f;
                msg[4]=0x0f;
                    
               EM->txandrx_PD(sizeof(msg),msg);
           
                     
                   printf("AO : 0X%x %x, DO : 0X%x", msg[0], msg[1],msg[4]);
                    printf ("\n");
                          
                     count++;
            }
            printf("Test done.\n");
        }
        
        close_socket(ni);
        
    }
}

void catch_signal(int sig)
{
   if(ni != 0)
        close_socket(ni);
    exit(1);
}

int main(int argc, char** argv)
{

   signal(SIGTERM, catch_signal);
   signal(SIGINT, catch_signal);
   signal(SIGHUP, catch_signal);
   mlockall(MCL_CURRENT|MCL_FUTURE);

    if (argc < 2) {
        printf("usage: %s <interface>\n", argv[0]);
        return 0;
    }

    pthread_t xenothread;
    pthread_attr_t xenothread_attr;

    //Set attributes of thread
    pthread_attr_init (& xenothread_attr);

    //Start thread
    if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1]) != 0) {
        printf("Cannot create thread EtherCatThread.\n");
        exit(1);
    }
   pthread_join( xenothread, 0 );
    return 0;
}


       
---------------------------------
 Ne gardez plus qu'une seule adresse mail ! Copiez vos mails vers Yahoo! Mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070725/11be5c33/attachment.html>

From klaas.gadeyne at fmtc.be  Wed Jul 25 15:23:15 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Wed, 25 Jul 2007 15:23:15 +0200 (CEST)
Subject: [Ethercatmaster-users] CoE (CANopen over EtherCAT) : EL6751
 parameters!
In-Reply-To: <626686.78410.qm@web37302.mail.mud.yahoo.com>
References: <626686.78410.qm@web37302.mail.mud.yahoo.com>
Message-ID: <Pine.LNX.4.64.0707251520170.12995@ampere.labo01.fmtc.be>

On Wed, 25 Jul 2007, said harti wrote:
> I don't resolved the EL2004 problem yet which flash briefly. Now, in order to progress in my EtherCAT master implementation, I hope test the CANopen  over EtherCAT communication, So i use the EL6751 module :
>
> Can you please tell me if my EL6751 parameters are correct ? (Logical address, Phy address...) ? (because i got some errors like : Some thing went wrong while scanning network...)

No, at the time we first implemented EML, CanOpen devices over
EtherCat were not yet working.

> And how can i send some PDOs (or SDOs) to my CANopen Drive (DS402) ?

You will have to implement CoE yourself:
<http://ethercatmaster.berlios.de/doxygen/html/classEtherCAT__SlaveConfig.html#EtherCAT__SlaveConfiga0>

Klaas


From klaas.gadeyne at fmtc.be  Wed Jul 25 16:20:56 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Wed, 25 Jul 2007 16:20:56 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re: CoE (CANopen over EtherCAT) :
 EL6751 parameters!
In-Reply-To: <99243.6887.qm@web37302.mail.mud.yahoo.com>
References: <99243.6887.qm@web37302.mail.mud.yahoo.com>
Message-ID: <Pine.LNX.4.64.0707251616270.12995@ampere.labo01.fmtc.be>

On Wed, 25 Jul 2007, said harti wrote:
[The note abouth top-quoting
<https://lists.berlios.de/pipermail/ethercatmaster-users/2007-July/000169.html>
is for everybody]

> I must implement CoE my self on the master_test program (by using CoE functions installed with EML) ? or i must implement the CoE on the EML in general ?

The second one.   EML contains merely a couple of structs regarding
CoE, nothing has been implemented yet.

Klaas


From rwatollenaar at gmail.com  Wed Jul 25 17:16:40 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Wed, 25 Jul 2007 17:16:40 +0200
Subject: [Ethercatmaster-users] non-persistent outputs 2004
Message-ID: <46A76958.4000203@gmail.com>

Hi,

I am wondering whether I might have missed any traffic on this list with 
regard to this problem.

Was it possible to derive some intelligence from the wireshark scans 
made by Said?

Kind regards,

Roland Tollenaar


From tompanis at skynet.be  Wed Jul 25 21:04:49 2007
From: tompanis at skynet.be (Tom Panis)
Date: Wed, 25 Jul 2007 21:04:49 +0200
Subject: [Ethercatmaster-users] The EtherCAT Tarfic scan
In-Reply-To: <Pine.LNX.4.64.0707240836070.7827@ampere.labo01.fmtc.be>
References: <119429.53138.qm@web37312.mail.mud.yahoo.com>
	<Pine.LNX.4.64.0707240836070.7827@ampere.labo01.fmtc.be>
Message-ID: <46A79ED1.8020803@skynet.be>


Klaas Gadeyne wrote:
> On Mon, 23 Jul 2007, said harti wrote:
>   
>> This is the Trafic scan between :
>>
>> 1)  Twincat Tool and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
>> 2)  EML and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
>>
>> (I have gived 5V (3fff to EL4102) and 0x0f to DO EL2004).
>>     
>
> [...]
> I just (re)discovered the ethercat wireshark plugin at ethercat.org is
> a dll, so I won't be able to help you out quickly here :-((
>
> Did you compare the 2 output scans yourself and notice important differences?
>
> Klaas
>
>   

I've taken a look at both scans and I can't find an important 
difference. The process data are both the same on the TwinCAT and the 
EML scan.
May I assume the logical address for the digital outputs is set 
correctly at 0x00010004? So it's not a configuration fault.

Tom





From rwatollenaar at gmail.com  Thu Jul 26 08:29:29 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Thu, 26 Jul 2007 08:29:29 +0200
Subject: [Ethercatmaster-users] The EtherCAT Tarfic scan
In-Reply-To: <46A79ED1.8020803@skynet.be>
References: <119429.53138.qm@web37312.mail.mud.yahoo.com>	<Pine.LNX.4.64.0707240836070.7827@ampere.labo01.fmtc.be>
	<46A79ED1.8020803@skynet.be>
Message-ID: <46A83F49.8040106@gmail.com>

Hi Tom,

Thanks for looking at the scan. This is Said's scan so I cannot answer 
for him. My 4 2004's have logical addresses set at:

0x00010000   sb0 eb3
0x00010000   sb4 eb7
0x00010001   sb0 eb3
0x00010001   sb4 eb7

if I remember correctly and I am almost 100% certain that I have not 
overlapped addresses. And I am witnessing exactly the same problem.

Also remember that the outputs do respond according to the process data 
sent to them, but only once and briefly in any program. I have 
incorporated the code in my actual project where it runs in a rt thread 
and the behaviour is exactly the same as in your master_test example.

So it seems as though the other data that twincat sends in its traffic 
is more important than assumed?

Kind regards,

Roland

Tom Panis wrote:
> Klaas Gadeyne wrote:
>> On Mon, 23 Jul 2007, said harti wrote:
>>   
>>> This is the Trafic scan between :
>>>
>>> 1)  Twincat Tool and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
>>> 2)  EML and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
>>>
>>> (I have gived 5V (3fff to EL4102) and 0x0f to DO EL2004).
>>>     
>> [...]
>> I just (re)discovered the ethercat wireshark plugin at ethercat.org is
>> a dll, so I won't be able to help you out quickly here :-((
>>
>> Did you compare the 2 output scans yourself and notice important differences?
>>
>> Klaas
>>
>>   
> 
> I've taken a look at both scans and I can't find an important 
> difference. The process data are both the same on the TwinCAT and the 
> EML scan.
> May I assume the logical address for the digital outputs is set 
> correctly at 0x00010004? So it's not a configuration fault.
> 
> Tom
> 
> 
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 


From harti_said at yahoo.fr  Thu Jul 26 10:30:32 2007
From: harti_said at yahoo.fr (said harti)
Date: Thu, 26 Jul 2007 10:30:32 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re:  The EtherCAT Tarfic scan
In-Reply-To: <46A83F49.8040106@gmail.com>
Message-ID: <146012.48873.qm@web37305.mail.mud.yahoo.com>

Hi,

I don't noticed any important differences, i have compared all parameters with twincat,...no differences

Me too, i am sur that i have set a correct Logical address to my EL2004 : 0x00010004 and i am like Rolland, i don't think that the problem is the EL2004 parameters, because, data are received correctely one time by EL2004 and LEDs flash briefly. So i think that the exchange process of data is not correctly realised (txandrx functions, or some thing alse...)



If you hope that i test some things in order to resolve this famouss problem, let me know

Regards,

Said

This i my master_test config :

///SlaveConfig EK1100
EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig
 EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL4102

///[A slave configuration consists of a fmmu-config, a process data (pd) config and optionally a mailbox config]

EtherCAT_FMMU_Config fmmu_config_EL4102(2);///arg=number of FMMU's.Some modules take more than one if e.g. they have in and outputs.///not sure what this is doing (Seems to be actual fmmu config which gets linked to the handle created above)
///fmmu (fieldbus memory management unit) config container (handle?)

///logical start address, # bytes used, start bit, end bit, physical address, physical start bit, read-enable, write-enable, activate-module

EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);

EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102,
 syncman_mbx1_EL4102};

///process data config (Again seems to be a handle)

EtherCAT_PD_Config pd_config_EL4102(2);///argument=length
EC_SyncMan syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);

///compile the slave configuration

EtherCAT_SlaveConfig EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);

///Modif
///SlaveConfig EL2004
EtherCAT_FMMU_Config fmmu_config_EL2004(1);

EC_FMMU fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);

EtherCAT_PD_Config pd_config_EL2004(1);EC_SyncMan syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig EC_EL2004(0x7d43052,0x00100000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);

///SlaveConfig EL1004
EtherCAT_FMMU_Config fmmu_config_EL1004(1);
//EC_FMMU fmmu0_EL1004(0x00010800,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
EC_FMMU fmmu0_EL1004(0x0001000A,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
EtherCAT_PD_Config pd_config_EL1004(1);
EC_SyncMan syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);

EtherCAT_SlaveConfig EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);

Exchange data process :

unsigned char msg[20];

        if(AL->isReady()) {

            printf("Test \n\n");
            

            int count = 0;
            while(count<100000) {

                msg[0]=0x00;
                msg[1]=0x00;
                msg[2]=0xff;
                msg[3]=0x3f;
                msg[4]=0x0f;
                msg[10]=0x00;

                EM->txandrx_PD(sizeof(msg),msg);            
    
                

                        printf("DI : 0X0%x , AO : 0x0%x 0%x , DO : 0x0%x", msg[10],
 msg[0], msg[1], msg[4]);
                            printf ("\n");
                    
                

                count++;
            }
            printf("Test done.\n");
        }
        
        close_socket(ni);
        
    }
}

void catch_signal(int sig)
{
   if(ni != 0)
        close_socket(ni);
    exit(1);
}

int main(int argc, char** argv)
{

    signal(SIGTERM, catch_signal);
   signal(SIGINT, catch_signal);
   signal(SIGHUP, catch_signal);
    mlockall(MCL_CURRENT|MCL_FUTURE);

    if (argc < 2) {
        printf("usage: %s <interface>\n", argv[0]);
        return 0;
    }

    pthread_t xenothread;
    pthread_attr_t xenothread_attr;

    //Set attributes of thread
    pthread_attr_init (& xenothread_attr);

    //Start thread
    if(pthread_create(&xenothread, &xenothread_attr, run_master, argv[1])
 != 0) {
        printf("Cannot create thread EtherCatThread.\n");
        exit(1);
    }
   pthread_join( xenothread, 0 );
    return 0;
}

Roland Tollenaar <rwatollenaar at gmail.com> a ?crit : Hi Tom,

Thanks for looking at the scan. This is Said's scan so I cannot answer 
for him. My 4 2004's have logical addresses set at:

0x00010000   sb0 eb3
0x00010000   sb4 eb7
0x00010001   sb0 eb3
0x00010001   sb4 eb7

if I remember correctly and I am almost 100% certain that I have not 
overlapped addresses. And I am witnessing exactly the same problem.

Also remember that the outputs do respond according to the process data 
sent to them, but only once and briefly in any program. I have 
incorporated the code in my actual project where it runs in a rt thread 
and the behaviour is exactly the same as in your master_test example.

So it seems as though the other data that twincat sends in its traffic 
is more important than assumed?

Kind regards,

Roland

Tom Panis wrote:
> Klaas Gadeyne wrote:
>> On Mon, 23 Jul 2007, said harti wrote:
>>   
>>> This is the Trafic scan between :
>>>
>>> 1)  Twincat Tool and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
>>> 2)  EML and Beckhoff modules (EK1100, EL4102, EL2004, EL1004)
>>>
>>> (I have gived 5V (3fff to EL4102) and 0x0f to DO EL2004).
>>>     
>> [...]
>> I just (re)discovered the ethercat wireshark plugin at ethercat.org is
>> a dll, so I won't be able to help you out quickly here :-((
>>
>> Did you compare the 2 output scans yourself and notice important differences?
>>
>> Klaas
>>
>>   
> 
> I've taken a look at both scans and I can't find an important 
> difference. The process data are both the same on the TwinCAT and the 
> EML scan.
> May I assume the logical address for the digital outputs is set 
> correctly at 0x00010004? So it's not a configuration fault.
> 
> Tom
> 
> 
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 
_______________________________________________
Ethercatmaster-users mailing list
Ethercatmaster-users at lists.berlios.de
https://lists.berlios.de/mailman/listinfo/ethercatmaster-users


       
---------------------------------
 Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de mail !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070726/b661d1b5/attachment.html>

From harti_said at yahoo.fr  Thu Jul 26 11:19:02 2007
From: harti_said at yahoo.fr (said harti)
Date: Thu, 26 Jul 2007 11:19:02 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re: RE : Re: CoE (CANopen over
	EtherCAT) : EL6751 parameters!
In-Reply-To: <Pine.LNX.4.64.0707251616270.12995@ampere.labo01.fmtc.be>
Message-ID: <554085.66188.qm@web37308.mail.mud.yahoo.com>

Hi Klaas,
 
I have a CANopen application which run on  CANopen card and communicate with CANopen drives, and i hope to  use  CoE.

 In order to send CANopen frame encapsuled on EtherCAT frame to my drives, i need to know exactely the role of the EL6751 module,(i am going to read the EL6751.chm documentation), 
 
 In order to anderstand EtherCAT and CoE process i have same questions :(
 
 My first question is : 
 
In your opinion, What's comunication process that i must add or implement to the EML in order to run CoE process  ?
 
 and precisely :
 
 how the synchronization process is doing between the EtherCAT bus and the CANopen bus ? (this Synchronization is realised by the EL6751 hard? ...)
 
 What's type of frame that The EL6751 need to communicate with CANopen noeuds ? (just a standard CANopen frame...) ? 

I think that i must simply take my CANopen frame ==> encapsulate it on the EtherCAT frame ==> so the result is a CoE frame,==> which i must send normaly on the EtherCAT bus, ==> and at the EL6751 module, this CANopen frame is extracted and sented to the CANopen drive normaly by this modules ? are you agree with me ? or the process is more hard then i think ????!!

Thanks a lot.
 
 Said

Klaas Gadeyne <klaas.gadeyne at fmtc.be> a ?crit : On Wed, 25 Jul 2007, said harti wrote:
[The note abouth top-quoting

is for everybody]

> I must implement CoE my self on the master_test program (by using CoE functions installed with EML) ? or i must implement the CoE on the EML in general ?

The second one.   EML contains merely a couple of structs regarding
CoE, nothing has been implemented yet.

Klaas


       
---------------------------------
 Ne gardez plus qu'une seule adresse mail ! Copiez vos mails vers Yahoo! Mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070726/b65cd7de/attachment.html>

From harti_said at yahoo.fr  Thu Jul 26 15:59:32 2007
From: harti_said at yahoo.fr (said harti)
Date: Thu, 26 Jul 2007 15:59:32 +0200 (CEST)
Subject: [Ethercatmaster-users] EL6751 parameters !
Message-ID: <925572.39282.qm@web37307.mail.mud.yahoo.com>

Hi,

klaas has tell me that i must implement CoE in order to communicate with CANopen nodes. I am looking hardly for this in order to define steps and works to do.

But first, i try to set the EL6751 to OP STATE like others modules, but i get this error :

...
Getting slave handler
Setting EL1004 to OP STATE
EL1004 succesfully set in OP STATE
Getting slave handler
Setting EL6751 to OP STATE
EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=2 status=1
EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=2 status=1
EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=2 status=1
EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=2 status=1

EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=4 status=2
EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=4 status=2
EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=4 status=2
EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=4 status=2
EC_ESM_Ops::set_state() Warning: State trans. failed (try 4), desired=4 status=2
EC_ESM_Ops::set_state() Warning: State trans. failed (try 5), desired=4 status=2
EC_ESM_Ops::set_state() Warning: State trans. failed (try 6), desired=4 status=2
EC_ESM_Ops::set_state() Warning: State trans. failed (try 7), desired=4 status=2
EC_ESM_Ops::set_state() Warning: State trans. failed (try 8), desired=4 status=2
EC_ESM_Ops::set_state() Warning: State trans. failed (try 9), desired=4 status=2

EC_ESM_Ops::set_state() failed to set state after 10 tries

Failed to set EL6751 in OP STATE
AL initializing

Test: Set AO Channel 1 to 5v :

Test done.

this is my master_test config :

...
#include <al/ethercat_slave_conf.h>
#include <al/ethercat_slave_handler.h>

struct netif *ni;


///SlaveConfig EK1100
EtherCAT_FMMU_Config fmmu_config_EK1100(0);
EtherCAT_PD_Config pd_config_EK1100(0);
EtherCAT_SlaveConfig
 EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);

///SlaveConfig EL4102

EtherCAT_FMMU_Config fmmu_config_EL4102(2);///arg=number of FMMU's.Some modules take more than one if e.g. they have in and outputs.///not sure what this is doing (Seems to be actual fmmu config which gets linked to the handle created above)

EC_FMMU fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
EC_FMMU fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);

EC_SyncMan syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102,
 syncman_mbx1_EL4102};

EtherCAT_PD_Config pd_config_EL4102(2);///argument=length
EC_SyncMan syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);

///compile the slave configuration

EtherCAT_SlaveConfig EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);


///SlaveConfig EL2004
EtherCAT_FMMU_Config fmmu_config_EL2004(1);

EC_FMMU fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);

EtherCAT_PD_Config pd_config_EL2004(1);EC_SyncMan syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
EtherCAT_SlaveConfig EC_EL2004(0x7d43052,0x00100000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);

///SlaveConfig EL1004
EtherCAT_FMMU_Config fmmu_config_EL1004(1);

EC_FMMU fmmu0_EL1004(0x0001000A,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
EtherCAT_PD_Config pd_config_EL1004(1);
EC_SyncMan syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);

EtherCAT_SlaveConfig EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);

///SlaveConfig EL6751

EtherCAT_FMMU_Config fmmu_config_EL6751(3);

EC_FMMU fmmu0_EL6751(0x00011000,0x0010,0x00,0x07,0x1000,0x00,false,true,true);
EC_FMMU fmmu1_EL6751(0x00011800,0x0008,0x00,0x07,0x1400,0x00,true,false,true);
EC_FMMU fmmu2_EL6751(0x00080000,0x0001,0x00,0x01,0x080D,0x00,true,false,true);

EC_SyncMan syncman_mbx0_EL6751(0x1800,558,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman_mbx1_EL6751(0x1A2E,558,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);

EtherCAT_PD_Config pd_config_EL6751(2);///argument=length

EC_SyncMan syncman0_EL6751(0x1000,16,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
EC_SyncMan syncman1_EL6751(0x1400,8,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);


EtherCAT_SlaveConfig EC_EL6751(0x1A5F3052,0x00000001,0x03ed,&fmmu_config_EL6751,&pd_config_EL6751,&mbx_conf_EL6751);

EtherCAT_MbxConfig mbx_conf_EL6751 = {syncman_mbx0_EL6751, syncman_mbx1_EL6751};


static void init_slave_db() {



         EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(4);
 ///argument=#slaves


///Connect actual fmmu and process data config to respective handlesfor for EL 4102 (AO)

         fmmu_config_EL4102[0] = fmmu0_EL4102;
         fmmu_config_EL4102[1] = fmmu1_EL4102;
         pd_config_EL4102[0] = syncman0_EL4102;
         pd_config_EL4102[1] = syncman1_EL4102;

///Connect actual fmmu and process data config to respective handles for EL 2004 (DO)

         fmmu_config_EL2004[0] = fmmu0_EL2004;///
         pd_config_EL2004[0] = syncman0_EL2004;///

///Connect actual fmmu and process data config to respective handles for EL 1004 (DI)

         fmmu_config_EL1004[0] = fmmu0_EL1004;///
         pd_config_EL1004[0] = syncman0_EL1004;///

         ///Connect actual fmmu and process data config to respective handles for EL 6751 (CoE)

         fmmu_config_EL6751[0] = fmmu0_EL6751;///
         fmmu_config_EL6751[1] = fmmu1_EL6751;///
         fmmu_config_EL6751[2] = fmmu2_EL6751;///

         pd_config_EL6751[0] = syncman0_EL6751;///
         pd_config_EL6751[1] = syncman1_EL6751;///

///Commit the slave config objects to the slave database

     slave_db->set_conf(&EC_EK1100,0);
         slave_db->set_conf(&EC_EL4102,1);
         //slave_db->set_conf(&EC_EK1100,1);

///Commit the slave config objects to the slave database

         slave_db->set_conf(&EC_EL2004,2);///

///Commit the slave config objects to the slave database

         slave_db->set_conf(&EC_EL1004,3);///

///Commit the slave config objects to the slave database

         slave_db->set_conf(&EC_EL6751,4);///
 }




static void* run_master(void * arg) {
    
    ni = init_ec((char*)arg);
    init_slave_db();

    if(ni != 0) {

        printf("Attach netif \n\n");
        EtherCAT_DataLinkLayer::instance()->attach(ni);
        printf("Master initializing \n\n");
        EtherCAT_Master * EM = EtherCAT_Master::instance();
        printf("Getting slave handler\n");
        EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
        //sleep(1);
        printf("Setting EK1100 to OP STATE\n");
        if(sh_ek1100->to_state(EC_OP_STATE))
            printf("EK1100 succesfully set in OP STATE\n");
        else
            printf("\nfailed to set EK1100 in OP STATE\n");

        printf("Getting slave handler\n");
        EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
        printf("Setting EL4102 to OP STATE\n");
        if(sh_el4102->to_state(EC_OP_STATE))
            printf("EL4102 succesfully set in OP STATE\n");
        else
            printf("\nfailed to set EL4102 in OP STATE!!\n");
        
///Modif
           printf("Getting slave handler\n");
                EtherCAT_SlaveHandler * sh_el2004 = EM->get_slave_handler(0x03eb);
        printf("Setting EL2004 to OP STATE\n");
                 if(sh_el2004->to_state(EC_OP_STATE))
                         printf("EL2004 succesfully set in OP STATE\n");
                 else
                         printf("\nFailed to set EL2004 in OP STATE\n");

               printf("Getting slave handler\n");
                EtherCAT_SlaveHandler * sh_el1004 = EM->get_slave_handler(0x03ec);
        printf("Setting EL1004 to OP STATE\n");
                 if(sh_el1004->to_state(EC_OP_STATE))
                         printf("EL1004 succesfully set in OP STATE\n");
                 else
                         printf("\nFailed to set EL1004 in OP STATE\n");

                 printf("Getting slave handler\n");
                EtherCAT_SlaveHandler * sh_el6751 = EM->get_slave_handler(0x03ed);
        printf("Setting EL6751 to OP STATE\n");
                 if(sh_el6751->to_state(EC_OP_STATE))
                         printf("EL6751 succesfully set in OP STATE\n");
                 else
                         printf("\nFailed to set EL6751 in OP STATE\n");

      

Please, If you have some ideas about this error let me know. (Logical Address...)
 
Best regards,

Said HARTI

       
---------------------------------
 Ne gardez plus qu'une seule adresse mail ! Copiez vos mails vers Yahoo! Mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070726/9f2bd4c4/attachment.html>

From rwatollenaar at gmail.com  Thu Jul 26 16:33:39 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Thu, 26 Jul 2007 16:33:39 +0200
Subject: [Ethercatmaster-users] EL6751 parameters !
In-Reply-To: <925572.39282.qm@web37307.mail.mud.yahoo.com>
References: <925572.39282.qm@web37307.mail.mud.yahoo.com>
Message-ID: <46A8B0C3.8080102@gmail.com>

Hi Said,

Although I am very interested in CoE and could use it in my current 
project I have opted to run the CANOpen over another interface to avoid 
the complication with EML. This list is not yet very active (I don't 
doubt that ti should become quite popular in the future) so perhaps its 
an idea to approach ETG for at least the basic manner in which CAN rides 
in Ethercat frames?

What documentation have you got on ethercat? Have you been in contact 
with ETG?

I am sorry I cannot help otherwise.

Regards,

Roland.


said harti wrote:
> Hi,
> 
> klaas has tell me that i must implement CoE in order to communicate with 
> CANopen nodes. I am looking hardly for this in order to define steps and 
> works to do.
> 
> But first, i try to set the EL6751 to OP STATE like others modules, but 
> i get this error :
> 
> ...
> Getting slave handler
> Setting EL1004 to OP STATE
> EL1004 succesfully set in OP STATE
> Getting slave handler
> Setting EL6751 to OP STATE
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=2 
> status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=2 
> status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=2 
> status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=2 
> status=1
> 
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 4), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 5), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 6), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 7), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 8), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 9), desired=4 
> status=2
> 
> EC_ESM_Ops::set_state() failed to set state after 10 tries
> 
> Failed to set EL6751 in OP STATE
> AL initializing
> 
> Test: Set AO Channel 1 to 5v :
> 
> Test done.
> 
> this is my master_test config :
> 
> ...
> #include <al/ethercat_slave_conf.h>
> #include <al/ethercat_slave_handler.h>
> 
> struct netif *ni;
> 
> 
> ///SlaveConfig EK1100
> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
> EtherCAT_PD_Config pd_config_EK1100(0);
> EtherCAT_SlaveConfig
>  EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
> 
> ///SlaveConfig EL4102
> 
> EtherCAT_FMMU_Config fmmu_config_EL4102(2);///arg=number of FMMU's.Some 
> modules take more than one if e.g. they have in and outputs.///not sure 
> what this is doing (Seems to be actual fmmu config which gets linked to 
> the handle created above)
> 
> EC_FMMU 
> fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
> EC_FMMU 
> fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);
> 
> EC_SyncMan 
> syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102,
>  syncman_mbx1_EL4102};
> 
> EtherCAT_PD_Config pd_config_EL4102(2);///argument=length
> EC_SyncMan 
> syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> ///compile the slave configuration
> 
> EtherCAT_SlaveConfig 
> EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);
> 
> 
> ///SlaveConfig EL2004
> EtherCAT_FMMU_Config fmmu_config_EL2004(1);
> 
> EC_FMMU 
> fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);
> 
> EtherCAT_PD_Config pd_config_EL2004(1);EC_SyncMan 
> syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig 
> EC_EL2004(0x7d43052,0x00100000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);
> 
> ///SlaveConfig EL1004
> EtherCAT_FMMU_Config fmmu_config_EL1004(1);
> 
> EC_FMMU 
> fmmu0_EL1004(0x0001000A,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
> EtherCAT_PD_Config pd_config_EL1004(1);
> EC_SyncMan 
> syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig 
> EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);
> 
> ///SlaveConfig EL6751
> 
> EtherCAT_FMMU_Config fmmu_config_EL6751(3);
> 
> EC_FMMU 
> fmmu0_EL6751(0x00011000,0x0010,0x00,0x07,0x1000,0x00,false,true,true);
> EC_FMMU 
> fmmu1_EL6751(0x00011800,0x0008,0x00,0x07,0x1400,0x00,true,false,true);
> EC_FMMU 
> fmmu2_EL6751(0x00080000,0x0001,0x00,0x01,0x080D,0x00,true,false,true);
> 
> EC_SyncMan 
> syncman_mbx0_EL6751(0x1800,558,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman_mbx1_EL6751(0x1A2E,558,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_PD_Config pd_config_EL6751(2);///argument=length
> 
> EC_SyncMan 
> syncman0_EL6751(0x1000,16,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman1_EL6751(0x1400,8,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> 
> EtherCAT_SlaveConfig 
> EC_EL6751(0x1A5F3052,0x00000001,0x03ed,&fmmu_config_EL6751,&pd_config_EL6751,&mbx_conf_EL6751);
> 
> EtherCAT_MbxConfig mbx_conf_EL6751 = {syncman_mbx0_EL6751, 
> syncman_mbx1_EL6751};
> 
> 
> static void init_slave_db() {
> 
> 
> 
>          EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(4);
>  ///argument=#slaves
> 
> 
> ///Connect actual fmmu and process data config to respective handlesfor 
> for EL 4102 (AO)
> 
>          fmmu_config_EL4102[0] = fmmu0_EL4102;
>          fmmu_config_EL4102[1] = fmmu1_EL4102;
>          pd_config_EL4102[0] = syncman0_EL4102;
>          pd_config_EL4102[1] = syncman1_EL4102;
> 
> ///Connect actual fmmu and process data config to respective handles for 
> EL 2004 (DO)
> 
>          fmmu_config_EL2004[0] = fmmu0_EL2004;///
>          pd_config_EL2004[0] = syncman0_EL2004;///
> 
> ///Connect actual fmmu and process data config to respective handles for 
> EL 1004 (DI)
> 
>          fmmu_config_EL1004[0] = fmmu0_EL1004;///
>          pd_config_EL1004[0] = syncman0_EL1004;///
> 
>          ///Connect actual fmmu and process data config to respective 
> handles for EL 6751 (CoE)
> 
>          fmmu_config_EL6751[0] = fmmu0_EL6751;///
>          fmmu_config_EL6751[1] = fmmu1_EL6751;///
>          fmmu_config_EL6751[2] = fmmu2_EL6751;///
> 
>          pd_config_EL6751[0] = syncman0_EL6751;///
>          pd_config_EL6751[1] = syncman1_EL6751;///
> 
> ///Commit the slave config objects to the slave database
> 
>      slave_db->set_conf(&EC_EK1100,0);
>          slave_db->set_conf(&EC_EL4102,1);
>          //slave_db->set_conf(&EC_EK1100,1);
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL2004,2);///
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL1004,3);///
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL6751,4);///
>  }
> 
> 
> 
> 
> static void* run_master(void * arg) {
>    
>     ni = init_ec((char*)arg);
>     init_slave_db();
> 
>     if(ni != 0) {
> 
>         printf("Attach netif \n\n");
>         EtherCAT_DataLinkLayer::instance()->attach(ni);
>         printf("Master initializing \n\n");
>         EtherCAT_Master * EM = EtherCAT_Master::instance();
>         printf("Getting slave handler\n");
>         EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
>         //sleep(1);
>         printf("Setting EK1100 to OP STATE\n");
>         if(sh_ek1100->to_state(EC_OP_STATE))
>             printf("EK1100 succesfully set in OP STATE\n");
>         else
>             printf("\nfailed to set EK1100 in OP STATE\n");
> 
>         printf("Getting slave handler\n");
>         EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
>         printf("Setting EL4102 to OP STATE\n");
>         if(sh_el4102->to_state(EC_OP_STATE))
>             printf("EL4102 succesfully set in OP STATE\n");
>         else
>             printf("\nfailed to set EL4102 in OP STATE!!\n");
>        
> ///Modif
>            printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el2004 = 
> EM->get_slave_handler(0x03eb);
>         printf("Setting EL2004 to OP STATE\n");
>                  if(sh_el2004->to_state(EC_OP_STATE))
>                          printf("EL2004 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL2004 in OP STATE\n");
> 
>                printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el1004 = 
> EM->get_slave_handler(0x03ec);
>         printf("Setting EL1004 to OP STATE\n");
>                  if(sh_el1004->to_state(EC_OP_STATE))
>                          printf("EL1004 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL1004 in OP STATE\n");
> 
>                  printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el6751 = 
> EM->get_slave_handler(0x03ed);
>         printf("Setting EL6751 to OP STATE\n");
>                  if(sh_el6751->to_state(EC_OP_STATE))
>                          printf("EL6751 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL6751 in OP STATE\n");
> 
>      
> 
> Please, If you have some ideas about this error let me know. (Logical 
> Address...)
>  
> Best regards,
> 
> Said HARTI
> 
> ------------------------------------------------------------------------
> Ne gardez plus qu'une seule adresse mail ! Copiez vos mails 
> <http://www.trueswitch.com/yahoo-fr/> vers Yahoo! Mail
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users


From harti_said at yahoo.fr  Thu Jul 26 18:12:41 2007
From: harti_said at yahoo.fr (said harti)
Date: Thu, 26 Jul 2007 18:12:41 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re:  EL6751 parameters !
In-Reply-To: <46A8B0C3.8080102@gmail.com>
Message-ID: <877076.91735.qm@web37309.mail.mud.yahoo.com>

Hi Rolland,

Yes, i hope that the list will be more populare as soon as possible in order to resolve together all problems...

I have opted to  CoE because i  thinked that the CANopen process is implemented on EML? :(

I don't have documentation, this is the problem :(
I have just some indication in concerne the EtherCAT Master sample code (ET9200) but, this master turn on Windows, and it's implemented differently then EML.

So, I hope that Tom and Klaas will be able to helps me and gives me some indications to set EL6751 to OP STATE at the first time, and after that, andestand the communication process in order to excahnge data between EtherCAT and CANopen via the EL6751.

Thanks a lot for you help, it's very nice :)

Regards

Said

Roland Tollenaar <rwatollenaar at gmail.com> a ?crit : Hi Said,

Although I am very interested in CoE and could use it in my current 
project I have opted to run the CANOpen over another interface to avoid 
the complication with EML. This list is not yet very active (I don't 
doubt that ti should become quite popular in the future) so perhaps its 
an idea to approach ETG for at least the basic manner in which CAN rides 
in Ethercat frames?

What documentation have you got on ethercat? Have you been in contact 
with ETG?

I am sorry I cannot help otherwise.

Regards,

Roland.


said harti wrote:
> Hi,
> 
> klaas has tell me that i must implement CoE in order to communicate with 
> CANopen nodes. I am looking hardly for this in order to define steps and 
> works to do.
> 
> But first, i try to set the EL6751 to OP STATE like others modules, but 
> i get this error :
> 
> ...
> Getting slave handler
> Setting EL1004 to OP STATE
> EL1004 succesfully set in OP STATE
> Getting slave handler
> Setting EL6751 to OP STATE
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=2 
> status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=2 
> status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=2 
> status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=2 
> status=1
> 
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 4), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 5), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 6), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 7), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 8), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 9), desired=4 
> status=2
> 
> EC_ESM_Ops::set_state() failed to set state after 10 tries
> 
> Failed to set EL6751 in OP STATE
> AL initializing
> 
> Test: Set AO Channel 1 to 5v :
> 
> Test done.
> 
> this is my master_test config :
> 
> ...
> #include 
> #include 
> 
> struct netif *ni;
> 
> 
> ///SlaveConfig EK1100
> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
> EtherCAT_PD_Config pd_config_EK1100(0);
> EtherCAT_SlaveConfig
>  EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
> 
> ///SlaveConfig EL4102
> 
> EtherCAT_FMMU_Config fmmu_config_EL4102(2);///arg=number of FMMU's.Some 
> modules take more than one if e.g. they have in and outputs.///not sure 
> what this is doing (Seems to be actual fmmu config which gets linked to 
> the handle created above)
> 
> EC_FMMU 
> fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
> EC_FMMU 
> fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);
> 
> EC_SyncMan 
> syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102,
>  syncman_mbx1_EL4102};
> 
> EtherCAT_PD_Config pd_config_EL4102(2);///argument=length
> EC_SyncMan 
> syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> ///compile the slave configuration
> 
> EtherCAT_SlaveConfig 
> EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);
> 
> 
> ///SlaveConfig EL2004
> EtherCAT_FMMU_Config fmmu_config_EL2004(1);
> 
> EC_FMMU 
> fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);
> 
> EtherCAT_PD_Config pd_config_EL2004(1);EC_SyncMan 
> syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig 
> EC_EL2004(0x7d43052,0x00100000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);
> 
> ///SlaveConfig EL1004
> EtherCAT_FMMU_Config fmmu_config_EL1004(1);
> 
> EC_FMMU 
> fmmu0_EL1004(0x0001000A,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
> EtherCAT_PD_Config pd_config_EL1004(1);
> EC_SyncMan 
> syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig 
> EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);
> 
> ///SlaveConfig EL6751
> 
> EtherCAT_FMMU_Config fmmu_config_EL6751(3);
> 
> EC_FMMU 
> fmmu0_EL6751(0x00011000,0x0010,0x00,0x07,0x1000,0x00,false,true,true);
> EC_FMMU 
> fmmu1_EL6751(0x00011800,0x0008,0x00,0x07,0x1400,0x00,true,false,true);
> EC_FMMU 
> fmmu2_EL6751(0x00080000,0x0001,0x00,0x01,0x080D,0x00,true,false,true);
> 
> EC_SyncMan 
> syncman_mbx0_EL6751(0x1800,558,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman_mbx1_EL6751(0x1A2E,558,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_PD_Config pd_config_EL6751(2);///argument=length
> 
> EC_SyncMan 
> syncman0_EL6751(0x1000,16,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman1_EL6751(0x1400,8,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> 
> EtherCAT_SlaveConfig 
> EC_EL6751(0x1A5F3052,0x00000001,0x03ed,&fmmu_config_EL6751,&pd_config_EL6751,&mbx_conf_EL6751);
> 
> EtherCAT_MbxConfig mbx_conf_EL6751 = {syncman_mbx0_EL6751, 
> syncman_mbx1_EL6751};
> 
> 
> static void init_slave_db() {
> 
> 
> 
>          EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(4);
>  ///argument=#slaves
> 
> 
> ///Connect actual fmmu and process data config to respective handlesfor 
> for EL 4102 (AO)
> 
>          fmmu_config_EL4102[0] = fmmu0_EL4102;
>          fmmu_config_EL4102[1] = fmmu1_EL4102;
>          pd_config_EL4102[0] = syncman0_EL4102;
>          pd_config_EL4102[1] = syncman1_EL4102;
> 
> ///Connect actual fmmu and process data config to respective handles for 
> EL 2004 (DO)
> 
>          fmmu_config_EL2004[0] = fmmu0_EL2004;///
>          pd_config_EL2004[0] = syncman0_EL2004;///
> 
> ///Connect actual fmmu and process data config to respective handles for 
> EL 1004 (DI)
> 
>          fmmu_config_EL1004[0] = fmmu0_EL1004;///
>          pd_config_EL1004[0] = syncman0_EL1004;///
> 
>          ///Connect actual fmmu and process data config to respective 
> handles for EL 6751 (CoE)
> 
>          fmmu_config_EL6751[0] = fmmu0_EL6751;///
>          fmmu_config_EL6751[1] = fmmu1_EL6751;///
>          fmmu_config_EL6751[2] = fmmu2_EL6751;///
> 
>          pd_config_EL6751[0] = syncman0_EL6751;///
>          pd_config_EL6751[1] = syncman1_EL6751;///
> 
> ///Commit the slave config objects to the slave database
> 
>      slave_db->set_conf(&EC_EK1100,0);
>          slave_db->set_conf(&EC_EL4102,1);
>          //slave_db->set_conf(&EC_EK1100,1);
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL2004,2);///
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL1004,3);///
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL6751,4);///
>  }
> 
> 
> 
> 
> static void* run_master(void * arg) {
>    
>     ni = init_ec((char*)arg);
>     init_slave_db();
> 
>     if(ni != 0) {
> 
>         printf("Attach netif \n\n");
>         EtherCAT_DataLinkLayer::instance()->attach(ni);
>         printf("Master initializing \n\n");
>         EtherCAT_Master * EM = EtherCAT_Master::instance();
>         printf("Getting slave handler\n");
>         EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
>         //sleep(1);
>         printf("Setting EK1100 to OP STATE\n");
>         if(sh_ek1100->to_state(EC_OP_STATE))
>             printf("EK1100 succesfully set in OP STATE\n");
>         else
>             printf("\nfailed to set EK1100 in OP STATE\n");
> 
>         printf("Getting slave handler\n");
>         EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
>         printf("Setting EL4102 to OP STATE\n");
>         if(sh_el4102->to_state(EC_OP_STATE))
>             printf("EL4102 succesfully set in OP STATE\n");
>         else
>             printf("\nfailed to set EL4102 in OP STATE!!\n");
>        
> ///Modif
>            printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el2004 = 
> EM->get_slave_handler(0x03eb);
>         printf("Setting EL2004 to OP STATE\n");
>                  if(sh_el2004->to_state(EC_OP_STATE))
>                          printf("EL2004 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL2004 in OP STATE\n");
> 
>                printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el1004 = 
> EM->get_slave_handler(0x03ec);
>         printf("Setting EL1004 to OP STATE\n");
>                  if(sh_el1004->to_state(EC_OP_STATE))
>                          printf("EL1004 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL1004 in OP STATE\n");
> 
>                  printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el6751 = 
> EM->get_slave_handler(0x03ed);
>         printf("Setting EL6751 to OP STATE\n");
>                  if(sh_el6751->to_state(EC_OP_STATE))
>                          printf("EL6751 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL6751 in OP STATE\n");
> 
>      
> 
> Please, If you have some ideas about this error let me know. (Logical 
> Address...)
>  
> Best regards,
> 
> Said HARTI
> 
> ------------------------------------------------------------------------
> Ne gardez plus qu'une seule adresse mail ! Copiez vos mails 
>  vers Yahoo! Mail
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users


       
---------------------------------
 Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de mail !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070726/0651237c/attachment.html>

From harti_said at yahoo.fr  Thu Jul 26 18:18:27 2007
From: harti_said at yahoo.fr (said harti)
Date: Thu, 26 Jul 2007 18:18:27 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re:  EL6751 parameters !
In-Reply-To: <46A8B0C3.8080102@gmail.com>
Message-ID: <597803.930.qm@web37306.mail.mud.yahoo.com>

Hi Rolland,

Yes, i hope that the list will be more populare as soon as possible in order to resolve together all problems...

I have opted to  CoE because i  thinked that the CANopen process is implemented on EML? :(

I don't have documentation, this is the problem :(
I have just some indication in concerne the EtherCAT Master sample code (ET9200) but, this master turn on Windows, and it's implemented differently then EML.

So, I hope that Tom and Klaas will be able to helps me and gives me some indications to set EL6751 to OP STATE at the first time, and after that, andestand the communication process in order to excahnge data between EtherCAT and CANopen via the EL6751.

Thanks a lot for you help, it's very nice :)

Regards

Said

Roland Tollenaar <rwatollenaar at gmail.com> a ?crit : Hi Said,

Although I am very interested in CoE and could use it in my current 
project I have opted to run the CANOpen over another interface to avoid 
the complication with EML. This list is not yet very active (I don't 
doubt that ti should become quite popular in the future) so perhaps its 
an idea to approach ETG for at least the basic manner in which CAN rides 
in Ethercat frames?

What documentation have you got on ethercat? Have you been in contact 
with ETG?

I am sorry I cannot help otherwise.

Regards,

Roland.


said harti wrote:
> Hi,
> 
> klaas has tell me that i must implement CoE in order to communicate with 
> CANopen nodes. I am looking hardly for this in order to define steps and 
> works to do.
> 
> But first, i try to set the EL6751 to OP STATE like others modules, but 
> i get this error :
> 
> ...
> Getting slave handler
> Setting EL1004 to OP STATE
> EL1004 succesfully set in OP STATE
> Getting slave handler
> Setting EL6751 to OP STATE
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=2 
> status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=2 
> status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=2 
> status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=2 
> status=1
> 
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 4), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 5), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 6), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 7), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 8), desired=4 
> status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 9), desired=4 
> status=2
> 
> EC_ESM_Ops::set_state() failed to set state after 10 tries
> 
> Failed to set EL6751 in OP STATE
> AL initializing
> 
> Test: Set AO Channel 1 to 5v :
> 
> Test done.
> 
> this is my master_test config :
> 
> ...
> #include 
> #include 
> 
> struct netif *ni;
> 
> 
> ///SlaveConfig EK1100
> EtherCAT_FMMU_Config fmmu_config_EK1100(0);
> EtherCAT_PD_Config pd_config_EK1100(0);
> EtherCAT_SlaveConfig
>  EC_EK1100(0x044c2c52,0x00010000,0x03e9,&fmmu_config_EK1100,&pd_config_EK1100);
> 
> ///SlaveConfig EL4102
> 
> EtherCAT_FMMU_Config fmmu_config_EL4102(2);///arg=number of FMMU's.Some 
> modules take more than one if e.g. they have in and outputs.///not sure 
> what this is doing (Seems to be actual fmmu config which gets linked to 
> the handle created above)
> 
> EC_FMMU 
> fmmu0_EL4102(0x00080000,0x0001,0x00,0x00,0x080D,0x00,true,false,true);
> EC_FMMU 
> fmmu1_EL4102(0x00010000,0x0004,0x00,0x07,0x1000,0x00,false,true,true);
> 
> EC_SyncMan 
> syncman_mbx0_EL4102(0x1800,246,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman_mbx1_EL4102(0x18f6,246,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_MbxConfig mbx_conf_EL4102 = {syncman_mbx0_EL4102,
>  syncman_mbx1_EL4102};
> 
> EtherCAT_PD_Config pd_config_EL4102(2);///argument=length
> EC_SyncMan 
> syncman0_EL4102(0x1000,4,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman1_EL4102(0x1100,0,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> ///compile the slave configuration
> 
> EtherCAT_SlaveConfig 
> EC_EL4102(0x10063052,0x00000000,0x03ea,&fmmu_config_EL4102,&pd_config_EL4102,&mbx_conf_EL4102);
> 
> 
> ///SlaveConfig EL2004
> EtherCAT_FMMU_Config fmmu_config_EL2004(1);
> 
> EC_FMMU 
> fmmu0_EL2004(0x00010004,0x0001,0x00,0x03,0x0F00,0x00,false,true,true);
> 
> EtherCAT_PD_Config pd_config_EL2004(1);EC_SyncMan 
> syncman0_EL2004(0x0F00,1,EC_QUEUED,EC_WRITTEN_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> EtherCAT_SlaveConfig 
> EC_EL2004(0x7d43052,0x00100000,0x03eb,&fmmu_config_EL2004,&pd_config_EL2004);
> 
> ///SlaveConfig EL1004
> EtherCAT_FMMU_Config fmmu_config_EL1004(1);
> 
> EC_FMMU 
> fmmu0_EL1004(0x0001000A,0x0001,0x00,0x03,0x1000,0x00,true,false,true);
> EtherCAT_PD_Config pd_config_EL1004(1);
> EC_SyncMan 
> syncman0_EL1004(0x1000,1,EC_BUFFERED,EC_READ_FROM_MASTER,false,true,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_SlaveConfig 
> EC_EL1004(0x03EC3052,0x00100000,0x03ec,&fmmu_config_EL1004,&pd_config_EL1004);
> 
> ///SlaveConfig EL6751
> 
> EtherCAT_FMMU_Config fmmu_config_EL6751(3);
> 
> EC_FMMU 
> fmmu0_EL6751(0x00011000,0x0010,0x00,0x07,0x1000,0x00,false,true,true);
> EC_FMMU 
> fmmu1_EL6751(0x00011800,0x0008,0x00,0x07,0x1400,0x00,true,false,true);
> EC_FMMU 
> fmmu2_EL6751(0x00080000,0x0001,0x00,0x01,0x080D,0x00,true,false,true);
> 
> EC_SyncMan 
> syncman_mbx0_EL6751(0x1800,558,EC_QUEUED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman_mbx1_EL6751(0x1A2E,558,EC_QUEUED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> EtherCAT_PD_Config pd_config_EL6751(2);///argument=length
> 
> EC_SyncMan 
> syncman0_EL6751(0x1000,16,EC_BUFFERED,EC_WRITTEN_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> EC_SyncMan 
> syncman1_EL6751(0x1400,8,EC_BUFFERED,EC_READ_FROM_MASTER,true,false,false,false,false,false,EC_FIRST_BUFFER,true);
> 
> 
> EtherCAT_SlaveConfig 
> EC_EL6751(0x1A5F3052,0x00000001,0x03ed,&fmmu_config_EL6751,&pd_config_EL6751,&mbx_conf_EL6751);
> 
> EtherCAT_MbxConfig mbx_conf_EL6751 = {syncman_mbx0_EL6751, 
> syncman_mbx1_EL6751};
> 
> 
> static void init_slave_db() {
> 
> 
> 
>          EtherCAT_SlaveDb * slave_db = EtherCAT_SlaveDb::instance(4);
>  ///argument=#slaves
> 
> 
> ///Connect actual fmmu and process data config to respective handlesfor 
> for EL 4102 (AO)
> 
>          fmmu_config_EL4102[0] = fmmu0_EL4102;
>          fmmu_config_EL4102[1] = fmmu1_EL4102;
>          pd_config_EL4102[0] = syncman0_EL4102;
>          pd_config_EL4102[1] = syncman1_EL4102;
> 
> ///Connect actual fmmu and process data config to respective handles for 
> EL 2004 (DO)
> 
>          fmmu_config_EL2004[0] = fmmu0_EL2004;///
>          pd_config_EL2004[0] = syncman0_EL2004;///
> 
> ///Connect actual fmmu and process data config to respective handles for 
> EL 1004 (DI)
> 
>          fmmu_config_EL1004[0] = fmmu0_EL1004;///
>          pd_config_EL1004[0] = syncman0_EL1004;///
> 
>          ///Connect actual fmmu and process data config to respective 
> handles for EL 6751 (CoE)
> 
>          fmmu_config_EL6751[0] = fmmu0_EL6751;///
>          fmmu_config_EL6751[1] = fmmu1_EL6751;///
>          fmmu_config_EL6751[2] = fmmu2_EL6751;///
> 
>          pd_config_EL6751[0] = syncman0_EL6751;///
>          pd_config_EL6751[1] = syncman1_EL6751;///
> 
> ///Commit the slave config objects to the slave database
> 
>      slave_db->set_conf(&EC_EK1100,0);
>          slave_db->set_conf(&EC_EL4102,1);
>          //slave_db->set_conf(&EC_EK1100,1);
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL2004,2);///
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL1004,3);///
> 
> ///Commit the slave config objects to the slave database
> 
>          slave_db->set_conf(&EC_EL6751,4);///
>  }
> 
> 
> 
> 
> static void* run_master(void * arg) {
>    
>     ni = init_ec((char*)arg);
>     init_slave_db();
> 
>     if(ni != 0) {
> 
>         printf("Attach netif \n\n");
>         EtherCAT_DataLinkLayer::instance()->attach(ni);
>         printf("Master initializing \n\n");
>         EtherCAT_Master * EM = EtherCAT_Master::instance();
>         printf("Getting slave handler\n");
>         EtherCAT_SlaveHandler * sh_ek1100 = EM->get_slave_handler(0x03e9);
>         //sleep(1);
>         printf("Setting EK1100 to OP STATE\n");
>         if(sh_ek1100->to_state(EC_OP_STATE))
>             printf("EK1100 succesfully set in OP STATE\n");
>         else
>             printf("\nfailed to set EK1100 in OP STATE\n");
> 
>         printf("Getting slave handler\n");
>         EtherCAT_SlaveHandler * sh_el4102 = EM->get_slave_handler(0x03ea);
>         printf("Setting EL4102 to OP STATE\n");
>         if(sh_el4102->to_state(EC_OP_STATE))
>             printf("EL4102 succesfully set in OP STATE\n");
>         else
>             printf("\nfailed to set EL4102 in OP STATE!!\n");
>        
> ///Modif
>            printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el2004 = 
> EM->get_slave_handler(0x03eb);
>         printf("Setting EL2004 to OP STATE\n");
>                  if(sh_el2004->to_state(EC_OP_STATE))
>                          printf("EL2004 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL2004 in OP STATE\n");
> 
>                printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el1004 = 
> EM->get_slave_handler(0x03ec);
>         printf("Setting EL1004 to OP STATE\n");
>                  if(sh_el1004->to_state(EC_OP_STATE))
>                          printf("EL1004 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL1004 in OP STATE\n");
> 
>                  printf("Getting slave handler\n");
>                 EtherCAT_SlaveHandler * sh_el6751 = 
> EM->get_slave_handler(0x03ed);
>         printf("Setting EL6751 to OP STATE\n");
>                  if(sh_el6751->to_state(EC_OP_STATE))
>                          printf("EL6751 succesfully set in OP STATE\n");
>                  else
>                          printf("\nFailed to set EL6751 in OP STATE\n");
> 
>      
> 
> Please, If you have some ideas about this error let me know. (Logical 
> Address...)
>  
> Best regards,
> 
> Said HARTI
> 
> ------------------------------------------------------------------------
> Ne gardez plus qu'une seule adresse mail ! Copiez vos mails 
>  vers Yahoo! Mail
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users


       
---------------------------------
 Stockage illimit? de vos mails avec Yahoo! Mail. Changez aujourd'hui de mail !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070726/5e51ea49/attachment.html>

From klaas.gadeyne at fmtc.be  Thu Jul 26 18:30:16 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Thu, 26 Jul 2007 18:30:16 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re:  The EtherCAT Tarfic scan
In-Reply-To: <146012.48873.qm@web37305.mail.mud.yahoo.com>
References: <146012.48873.qm@web37305.mail.mud.yahoo.com>
Message-ID: <Pine.LNX.4.64.0707261825370.12995@ampere.labo01.fmtc.be>

On Thu, 26 Jul 2007, said harti wrote:

[Said, I won't answer any more of your topquoted emails from now on, you have been warned...]

> I don't noticed any important differences, i have compared all parameters with twincat,...no differences
>
> Me too, i am sur that i have set a correct Logical address to my EL2004 : 0x00010004 and i am like Rolland, i don't think that the problem is the EL2004 parameters, because, data are received correctely one time by EL2004 and LEDs flash briefly. So i think that the exchange process of data is not correctly realised (txandrx functions, or some thing alse...)

I think you are seeing ghosts here:  if the sniffed ethernet messages sent by your EML
master (and the responses!) from the slaves are the same, there shouldn't be any problem.

I guess there are some differences between the scans which you/we seem to think of as
unimportant, but they might be more important than you've wished :-)

Klaas


From klaas.gadeyne at fmtc.be  Thu Jul 26 18:35:49 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Thu, 26 Jul 2007 18:35:49 +0200 (CEST)
Subject: [Ethercatmaster-users] EL6751 parameters !
In-Reply-To: <925572.39282.qm@web37307.mail.mud.yahoo.com>
References: <925572.39282.qm@web37307.mail.mud.yahoo.com>
Message-ID: <Pine.LNX.4.64.0707261831100.12995@ampere.labo01.fmtc.be>

On Thu, 26 Jul 2007, said harti wrote:
[...]
> But first, i try to set the EL6751 to OP STATE like others modules, but i get this error :
>
> ...
> Getting slave handler
> Setting EL1004 to OP STATE
> EL1004 succesfully set in OP STATE
> Getting slave handler
> Setting EL6751 to OP STATE
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=2 status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=2 status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=2 status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=2 status=1
>
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 4), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 5), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 6), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 7), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 8), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 9), desired=4 status=2
>
> EC_ESM_Ops::set_state() failed to set state after 10 tries
>
> Failed to set EL6751 in OP STATE
> AL initializing

The master can't set your EL6751 module in it's operational state.
This might be
- because we're (we = EML) are forgetting something -> Again: only
   solution: compare the scans

- (try this first) because the EL6751 is quite slow in state transitions.
   In order to test the latter case, increase

   static const unsigned int EC_ESM_OPS_MAX_RETRIES = 10;

   in src/al/ethercat_FSM.cxx

   See <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/al/ethercat_FSM.cxx?op=file&rev=0&sc=0>

Klaas


From klaas.gadeyne at fmtc.be  Thu Jul 26 18:40:04 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Thu, 26 Jul 2007 18:40:04 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re: RE : Re: CoE (CANopen over
 EtherCAT) : EL6751 parameters!
In-Reply-To: <554085.66188.qm@web37308.mail.mud.yahoo.com>
References: <554085.66188.qm@web37308.mail.mud.yahoo.com>
Message-ID: <Pine.LNX.4.64.0707261836180.12995@ampere.labo01.fmtc.be>

On Thu, 26 Jul 2007, said harti wrote:
> I have a CANopen application which run on  CANopen card and communicate with CANopen drives, and i hope to  use  CoE.
>
> In order to send CANopen frame encapsuled on EtherCAT frame to my drives, i need to know exactely the role of the EL6751 module,(i am going to read the EL6751.chm documentation),
>
> In order to anderstand EtherCAT and CoE process i have same questions :(
>
> My first question is :
>
> In your opinion, What's comunication process that i must add or implement to the EML in order to run CoE process  ?
>
> and precisely :
>
> how the synchronization process is doing between the EtherCAT bus and the CANopen bus ? (this Synchronization is realised by the EL6751 hard? ...)
>
> What's type of frame that The EL6751 need to communicate with CANopen noeuds ? (just a standard CANopen frame...) ?
>
> I think that i must simply take my CANopen frame ==> encapsulate it on the EtherCAT frame ==> so the result is a CoE frame,==> which i must send normaly on the EtherCAT bus, ==> and at the EL6751 module, this CANopen frame is extracted and sented to the CANopen drive normaly by this modules ? are you agree with me ? or the process is more hard then i think ????!!

My first suggestion (since it has been to long ago since I wrote this
code, and I don't recall how CoE is spec'd on top of plain EtherCAT)
would be to take the EtherCAT spec document and see what the spec says
about CoE.  Since EML follows the spec naming quite closely (and some
of the coE defines are already in EML), this is probably the best way
to start.

ps. I suggest you ask further, concrete questions to the devel
mailinglist.

regards,

Klaas



From harti_said at yahoo.fr  Fri Jul 27 10:33:26 2007
From: harti_said at yahoo.fr (said harti)
Date: Fri, 27 Jul 2007 10:33:26 +0200 (CEST)
Subject: [Ethercatmaster-users] RE : Re:  EL6751 parameters !
In-Reply-To: <Pine.LNX.4.64.0707261831100.12995@ampere.labo01.fmtc.be>
Message-ID: <819676.91078.qm@web37304.mail.mud.yahoo.com>

First, thanks so mutch Klaas for your help...

I have tryed to  increase the number of tries to 100   (static const unsigned int EC_ESM_OPS_MAX_RETRIES = 100;) , and no result, the EL6751 don't passe to OP STATE.

the RUN led flash with 2hz (PREOP) and the Err led is red taht meen : CAN Controller is "Bus OFF". Physical CAN problem. Possible reasons: e.g.  terminating resistor missing, bus too long, wrong baud rate, node address  configured twice, short circuit, wiring error.   Restart is necessary
.
If you have other suggestions, don't hesitate.let me know.

Best regards,

Said





   static const unsigned int EC_ESM_OPS_MAX_RETRIES = 10;

Klaas Gadeyne <klaas.gadeyne at fmtc.be> a ?crit : On Thu, 26 Jul 2007, said harti wrote:
[...]
> But first, i try to set the EL6751 to OP STATE like others modules, but i get this error :
>
> ...
> Getting slave handler
> Setting EL1004 to OP STATE
> EL1004 succesfully set in OP STATE
> Getting slave handler
> Setting EL6751 to OP STATE
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=2 status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=2 status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=2 status=1
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=2 status=1
>
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 0), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 1), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 2), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 3), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 4), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 5), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 6), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 7), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 8), desired=4 status=2
> EC_ESM_Ops::set_state() Warning: State trans. failed (try 9), desired=4 status=2
>
> EC_ESM_Ops::set_state() failed to set state after 10 tries
>
> Failed to set EL6751 in OP STATE
> AL initializing

The master can't set your EL6751 module in it's operational state.
This might be
- because we're (we = EML) are forgetting something -> Again: only
   solution: compare the scans

- (try this first) because the EL6751 is quite slow in state transitions.
   In order to test the latter case, increase

   static const unsigned int EC_ESM_OPS_MAX_RETRIES = 10;

   in src/al/ethercat_FSM.cxx

   See 

Klaas


       
---------------------------------
 Ne gardez plus qu'une seule adresse mail ! Copiez vos mails vers Yahoo! Mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/ethercatmaster-users/attachments/20070727/9b283f00/attachment.html>

From rwatollenaar at gmail.com  Mon Jul 30 13:01:23 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Mon, 30 Jul 2007 13:01:23 +0200
Subject: [Ethercatmaster-users] non-persistent outputs EML
Message-ID: <46ADC503.2050700@gmail.com>

Hi,

This email in on the users and developers list since it seems like it is 
time to look at the EML code.

The frames between twin cat and eml differ substantially, I want to try 
to hack the eml frame to look like the twincat frame just to see what it 
does. Then by changing (hardcoding) the eml frame byte by byte find out 
which byte in the frame is instrumental in the persistent/non-persistent 
behaviour.

Could one of the developers please tell me in which file of the project 
I can best substitute the bytes before the frame is sent?

Kind regards,

Roland


From klaas.gadeyne at fmtc.be  Tue Jul 31 11:21:05 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Tue, 31 Jul 2007 11:21:05 +0200 (CEST)
Subject: [Ethercatmaster-users] [Ethercatmaster-devel] non-persistent
	outputs EML
In-Reply-To: <46ADC503.2050700@gmail.com>
References: <46ADC503.2050700@gmail.com>
Message-ID: <Pine.LNX.4.64.0707311105060.13618@ampere.labo01.fmtc.be>

On Mon, 30 Jul 2007, Roland Tollenaar wrote:

Hi Roland,

[Replying to users only, since I think this it not truly a developers
issue. YMMV :-)]

[...]
> The frames between twin cat and eml differ substantially, I want to try
> to hack the eml frame to look like the twincat frame just to see what it
> does. Then by changing (hardcoding) the eml frame byte by byte find out
> which byte in the frame is instrumental in the persistent/non-persistent
> behaviour.

Funny, according to Said there were no significant differences :-)

First, I would advise you to try interpreting what messages are sent
instead of your "brute force attack" [*]:  Look at the telegrams, see how
they match with what is written in the spec.  Then interprete what is
different in the messages sent by EML and TwinCat and see if it could
possibly explain the observed behaviour.

> Could one of the developers please tell me in which file of the project
> I can best substitute the bytes before the frame is sent?

There is no single file in which data is passed.
If you insist on creating raw ethernet frames, the low_level_output()
function in 
<https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/arch/RTnet/ethercat_xenomai_drv.c?op=file&rev=0&sc=0>
is the place to start.

Basically, each frame has (which consist of etherCat telegrams) a dump
method, which "dumps" its contents into an (unsigned char *).  That is
the data for the ethernet message to send.  That function dumps the
frames it gets from the Data Link Layer (DLL) [**] and adds the type
to the message.

regards,

Klaas

[*] For instance, even with all exactly the same frames, you might get
different responses to the same messages.  E.g. suppose you send a
command to a slave that asks it to go from INIT to PREOP.  Next you
check whether the transition has succeeded.  Depending on how _fast_
you send the 2nd message, your slave might react differently, and
hence your master should either continue or retry.
[**] If you don't understand some of the jargon here -> see the spec
:-)


From rwatollenaar at gmail.com  Tue Jul 31 11:32:24 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 31 Jul 2007 11:32:24 +0200
Subject: [Ethercatmaster-users] [Ethercatmaster-devel] non-persistent
	outputs EML
In-Reply-To: <Pine.LNX.4.64.0707311105060.13618@ampere.labo01.fmtc.be>
References: <46ADC503.2050700@gmail.com>
	<Pine.LNX.4.64.0707311105060.13618@ampere.labo01.fmtc.be>
Message-ID: <46AF01A8.8050106@gmail.com>

Hi Klaas,

Thanks for the response.

> [Replying to users only, since I think this it not truly a developers
> issue. YMMV :-)]
How many users would know this? :)

> [...]
>> The frames between twin cat and eml differ substantially, I want to try
>> to hack the eml frame to look like the twincat frame just to see what it
>> behaviour.
> 
> Funny, according to Said there were no significant differences :-)
I think he was referring to the process data.


> 
> First, I would advise you to try interpreting what messages are sent
> instead of your "brute force attack" [*]:  
Busy with this as you speak.......


>Look at the telegrams, see how
> they match with what is written in the spec.  Then interprete what is
> different in the messages sent by EML and TwinCat and see if it could
> possibly explain the observed behaviour.
I actually gave this a try last night. Not all that easy you know.



> There is no single file in which data is passed.
> If you insist on creating raw ethernet frames, the low_level_output()
> function in 
> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/arch/RTnet/ethercat_xenomai_drv.c?op=file&rev=0&sc=0> 
> 
> is the place to start.
I have actually drilled down to this level but decided that it would be 
better in EC_Telegram->dump(). But I am not yet convinced of this 
wisdom. Perhaps you are right and I should simply overwrite the bytes I 
want to overwrite in low_level_output();


I have a request out at ETG to look at the difference in the wirescans 
to possibly only tell which bytes could effectuate this behaviour. IMHO 
it might als be somethign that goes wrong in the configuration stage but 
I would have no idea what.

Regards,

Roland




> 
> Basically, each frame has (which consist of etherCat telegrams) a dump
> method, which "dumps" its contents into an (unsigned char *).  That is
> the data for the ethernet message to send.  That function dumps the
> frames it gets from the Data Link Layer (DLL) [**] and adds the type
> to the message.



> 
> regards,
> 
> Klaas
> 
> [*] For instance, even with all exactly the same frames, you might get
> different responses to the same messages.  E.g. suppose you send a
> command to a slave that asks it to go from INIT to PREOP.  Next you
> check whether the transition has succeeded.  Depending on how _fast_
> you send the 2nd message, your slave might react differently, and
> hence your master should either continue or retry.
> [**] If you don't understand some of the jargon here -> see the spec
> :-)
> 


From rwatollenaar at gmail.com  Tue Jul 31 11:56:38 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 31 Jul 2007 11:56:38 +0200
Subject: [Ethercatmaster-users] [Ethercatmaster-devel] non-persistent
	outputs EML
In-Reply-To: <Pine.LNX.4.64.0707311105060.13618@ampere.labo01.fmtc.be>
References: <46ADC503.2050700@gmail.com>
	<Pine.LNX.4.64.0707311105060.13618@ampere.labo01.fmtc.be>
Message-ID: <46AF0756.80101@gmail.com>

Hi

These are the scans. Just in case anyone still doubts that there is a 
difference between TwinCat and EML.


TC  0000  01 01 05 01 00 00 00 0e  7b 56 c4 9a 88 a4 39 10   ........
EML 0000  ff ff ff ff ff ff 00 00  00 00 00 00 88 a4 11 10   ........


TC  0010  0b 00 00 00 01 00 05 80  00 00 ff 3f 00 00 0f 00   ........
EML 0010  0c 46 00 00 01 00 05 00  00 00 ff 3f 00 00 0f 00   .F......


TC  0020  00 0a 00 00 08 01 00 01  80 00 00 00 00 00 0a 00   ........
EML 0020  00 07 00 10 00 02 01 00  00 00 00 00 00 00 00 00   ........


TC  0030  00 00 08 00 01 80 00 00  00 00 00 07 00 00 00 30   ........
EML 0030  00 00 00 00 00 00 00 00  00 00 00 00               ........


TC  0040  01 02 00 00 00 00 00 00  00                        ........ . 

EML N/A


Regards,

Roland

Klaas Gadeyne wrote:
> On Mon, 30 Jul 2007, Roland Tollenaar wrote:
> 
> Hi Roland,
> 
> [Replying to users only, since I think this it not truly a developers
> issue. YMMV :-)]
> 
> [...]
>> The frames between twin cat and eml differ substantially, I want to try
>> to hack the eml frame to look like the twincat frame just to see what it
>> does. Then by changing (hardcoding) the eml frame byte by byte find out
>> which byte in the frame is instrumental in the persistent/non-persistent
>> behaviour.
> 
> Funny, according to Said there were no significant differences :-)
> 
> First, I would advise you to try interpreting what messages are sent
> instead of your "brute force attack" [*]:  Look at the telegrams, see how
> they match with what is written in the spec.  Then interprete what is
> different in the messages sent by EML and TwinCat and see if it could
> possibly explain the observed behaviour.
> 
>> Could one of the developers please tell me in which file of the project
>> I can best substitute the bytes before the frame is sent?
> 
> There is no single file in which data is passed.
> If you insist on creating raw ethernet frames, the low_level_output()
> function in 
> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/arch/RTnet/ethercat_xenomai_drv.c?op=file&rev=0&sc=0> 
> 
> is the place to start.
> 
> Basically, each frame has (which consist of etherCat telegrams) a dump
> method, which "dumps" its contents into an (unsigned char *).  That is
> the data for the ethernet message to send.  That function dumps the
> frames it gets from the Data Link Layer (DLL) [**] and adds the type
> to the message.
> 
> regards,
> 
> Klaas
> 
> [*] For instance, even with all exactly the same frames, you might get
> different responses to the same messages.  E.g. suppose you send a
> command to a slave that asks it to go from INIT to PREOP.  Next you
> check whether the transition has succeeded.  Depending on how _fast_
> you send the 2nd message, your slave might react differently, and
> hence your master should either continue or retry.
> [**] If you don't understand some of the jargon here -> see the spec
> :-)
> 


From klaas.gadeyne at fmtc.be  Tue Jul 31 13:20:14 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Tue, 31 Jul 2007 13:20:14 +0200 (CEST)
Subject: [Ethercatmaster-users] [Ethercatmaster-devel] non-persistent
 outputs EML
In-Reply-To: <46AF0756.80101@gmail.com>
References: <46ADC503.2050700@gmail.com>
	<Pine.LNX.4.64.0707311105060.13618@ampere.labo01.fmtc.be>
	<46AF0756.80101@gmail.com>
Message-ID: <Pine.LNX.4.64.0707311318250.13618@ampere.labo01.fmtc.be>

On Tue, 31 Jul 2007, Roland Tollenaar wrote:
> Hi
>
> These are the scans. Just in case anyone still doubts that there is a
> difference between TwinCat and EML.
>
>
> TC  0000  01 01 05 01 00 00 00 0e  7b 56 c4 9a 88 a4 39 10   ........
> EML 0000  ff ff ff ff ff ff 00 00  00 00 00 00 88 a4 11 10   ........
>
>
> TC  0010  0b 00 00 00 01 00 05 80  00 00 ff 3f 00 00 0f 00   ........
> EML 0010  0c 46 00 00 01 00 05 00  00 00 ff 3f 00 00 0f 00   .F......
>
>
> TC  0020  00 0a 00 00 08 01 00 01  80 00 00 00 00 00 0a 00   ........
> EML 0020  00 07 00 10 00 02 01 00  00 00 00 00 00 00 00 00   ........
>
>
> TC  0030  00 00 08 00 01 80 00 00  00 00 00 07 00 00 00 30   ........
> EML 0030  00 00 00 00 00 00 00 00  00 00 00 00               ........
>
>
> TC  0040  01 02 00 00 00 00 00 00  00                        ........ .
>
> EML N/A

The EtherCAT plugin in my wireshark glasses is malfunctioning :-)  IOW,
Output in terms of EtherCAT telegrams as interpreted by the wireshark
plugin would be far more readable/understandable.

Klaas


From rwatollenaar at gmail.com  Tue Jul 31 13:25:58 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 31 Jul 2007 13:25:58 +0200
Subject: [Ethercatmaster-users] [Ethercatmaster-devel] non-persistent
 outputs EML
In-Reply-To: <Pine.LNX.4.64.0707311318250.13618@ampere.labo01.fmtc.be>
References: <46ADC503.2050700@gmail.com>
	<Pine.LNX.4.64.0707311105060.13618@ampere.labo01.fmtc.be>
	<46AF0756.80101@gmail.com>
	<Pine.LNX.4.64.0707311318250.13618@ampere.labo01.fmtc.be>
Message-ID: <46AF1C46.5000408@gmail.com>

Don't worry, I am working on some form of interpretation for you. IOW 
very specific questions.

Do you have the pcap files that Said posted?

Roland.

Klaas Gadeyne wrote:
> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>> Hi
>>
>> These are the scans. Just in case anyone still doubts that there is a
>> difference between TwinCat and EML.
>>
>>
>> TC  0000  01 01 05 01 00 00 00 0e  7b 56 c4 9a 88 a4 39 10   ........
>> EML 0000  ff ff ff ff ff ff 00 00  00 00 00 00 88 a4 11 10   ........
>>
>>
>> TC  0010  0b 00 00 00 01 00 05 80  00 00 ff 3f 00 00 0f 00   ........
>> EML 0010  0c 46 00 00 01 00 05 00  00 00 ff 3f 00 00 0f 00   .F......
>>
>>
>> TC  0020  00 0a 00 00 08 01 00 01  80 00 00 00 00 00 0a 00   ........
>> EML 0020  00 07 00 10 00 02 01 00  00 00 00 00 00 00 00 00   ........
>>
>>
>> TC  0030  00 00 08 00 01 80 00 00  00 00 00 07 00 00 00 30   ........
>> EML 0030  00 00 00 00 00 00 00 00  00 00 00 00               ........
>>
>>
>> TC  0040  01 02 00 00 00 00 00 00  00                        ........ .
>>
>> EML N/A
> 
> The EtherCAT plugin in my wireshark glasses is malfunctioning :-)  IOW,
> Output in terms of EtherCAT telegrams as interpreted by the wireshark
> plugin would be far more readable/understandable.
> 
> Klaas
> 


From rwatollenaar at gmail.com  Tue Jul 31 13:38:24 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 31 Jul 2007 13:38:24 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
Message-ID: <46AF1F30.1060907@gmail.com>

Hi,

Please give some assistance wrt to the ethercat dataframes. I am having 
trouble with the documentation.

In particular at the moment the EC datagram header is what I am 
interested in.

This is what the header looks like.

    Cmd	/Idx	/Addr	/Offset	/11bit length/R/C/R/M	/IRQ
TC  0b	00	00 00	01 00	05 80			00 00
EML 0c	46	00 00	01 00	05 00			00 00

Now the questions are:

Where do I find documentation on the Cmd values that must be used. Why 
would EML have a different command? (0xc instead of 0x0b)

The Index Idx has 0x46 instead of 00. Again I have missed (cannot for 
the life of me find it this morning because I think I have seen 
something about it) the part in the documentation that tells me what the 
index does. Why will EML have a different value here?

Then we see a difference in the RCRM part of the header. I have no idea 
what they mean. C is recirculating, M means More datagrams.

Finally my question is how to establish the lenght out of the 11 bit 
length. This may be obvious but what confuses me is the part in the 
Ethercat Header (main header not the one in the datagram)

This part is
TC   0x39 0x10
EML  0x11 0x10

Which I don;t understnad because according to the documentation the last 
4 bits indicate the type and 1 should be Ethercat. But neither TC nor 
EML have a 1 in that position? Or is LSB and MSB turned around?

I get a feeling that the differences in this header may be the cause for 
the problem. It may even be the length which IMHO seems to differ but I 
am not sure because there is so much info I am lacking.


Thanks so so so much.

Roland.
		


From klaas.gadeyne at fmtc.be  Tue Jul 31 18:15:31 2007
From: klaas.gadeyne at fmtc.be (Klaas Gadeyne)
Date: Tue, 31 Jul 2007 18:15:31 +0200 (CEST)
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <46AF1F30.1060907@gmail.com>
References: <46AF1F30.1060907@gmail.com>
Message-ID: <Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>

On Tue, 31 Jul 2007, Roland Tollenaar wrote:
> Hi,
>
> Please give some assistance wrt to the ethercat dataframes. I am having
> trouble with the documentation.
>
> In particular at the moment the EC datagram header is what I am
> interested in.
>
> This is what the header looks like.
>
>    Cmd	/Idx	/Addr	/Offset	/11bit length/R/C/R/M	/IRQ
> TC  0b	00	00 00	01 00	05 80			00 00
> EML 0c	46	00 00	01 00	05 00			00 00
>
> Now the questions are:
>
> Where do I find documentation on the Cmd values that must be used. Why
> would EML have a different command? (0xc instead of 0x0b)

<https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0>
<https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0>

So it seems you (or EML code, since I don't know _when_ this frame is
send)) are performing a logical read-write, while twincat is doing a
logical read.

> The Index Idx has 0x46 instead of 00. Again I have missed (cannot for
> the life of me find it this morning because I think I have seen
> something about it) the part in the documentation that tells me what the
> index does. Why will EML have a different value here?

AFAIK (please check in the spec) the spec only says that the master
should check if the index is unaltered when a message returns, its
real value doesn't matter.

> Then we see a difference in the RCRM part of the header. I have no idea
> what they mean. C is recirculating, M means More datagrams.

Me neither, I guess that is the module specific data?

> Finally my question is how to establish the lenght out of the 11 bit
> length. This may be obvious but what confuses me is the part in the
> Ethercat Header (main header not the one in the datagram)
>
> This part is
> TC   0x39 0x10
> EML  0x11 0x10
>
> Which I don;t understnad because according to the documentation the last
> 4 bits indicate the type and 1 should be Ethercat. But neither TC nor
> EML have a 1 in that position? Or is LSB and MSB turned around?

I don't understand your question here, but ethercat is little endian IIRC

> I get a feeling that the differences in this header may be the cause for
> the problem. It may even be the length which IMHO seems to differ but I
> am not sure because there is so much info I am lacking.



From rwatollenaar at gmail.com  Tue Jul 31 18:26:21 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 31 Jul 2007 18:26:21 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>
References: <46AF1F30.1060907@gmail.com>
	<Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>
Message-ID: <46AF62AD.8040009@gmail.com>

Hi Klaas,

Thanks. The LWR should be fine but its a bit strange that Twincat does a 
logical RD. That would imply that no data is written to the slaves but 
this does not correspond to the outputs being set?

Have you received the mail about the watchdog timer? Could you advise on 
how to read/ set this with EML?

Regards,

Roland

Klaas Gadeyne wrote:
> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>> Hi,
>>
>> Please give some assistance wrt to the ethercat dataframes. I am having
>> trouble with the documentation.
>>
>> In particular at the moment the EC datagram header is what I am
>> interested in.
>>
>> This is what the header looks like.
>>
>>    Cmd    /Idx    /Addr    /Offset    /11bit length/R/C/R/M    /IRQ
>> TC  0b    00    00 00    01 00    05 80            00 00
>> EML 0c    46    00 00    01 00    05 00            00 00
>>
>> Now the questions are:
>>
>> Where do I find documentation on the Cmd values that must be used. Why
>> would EML have a different command? (0xc instead of 0x0b)
> 
> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0> 
> 
> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0> 
> 
> 
> So it seems you (or EML code, since I don't know _when_ this frame is
> send)) are performing a logical read-write, while twincat is doing a
> logical read.
> 
>> The Index Idx has 0x46 instead of 00. Again I have missed (cannot for
>> the life of me find it this morning because I think I have seen
>> something about it) the part in the documentation that tells me what the
>> index does. Why will EML have a different value here?
> 
> AFAIK (please check in the spec) the spec only says that the master
> should check if the index is unaltered when a message returns, its
> real value doesn't matter.
> 
>> Then we see a difference in the RCRM part of the header. I have no idea
>> what they mean. C is recirculating, M means More datagrams.
> 
> Me neither, I guess that is the module specific data?
> 
>> Finally my question is how to establish the lenght out of the 11 bit
>> length. This may be obvious but what confuses me is the part in the
>> Ethercat Header (main header not the one in the datagram)
>>
>> This part is
>> TC   0x39 0x10
>> EML  0x11 0x10
>>
>> Which I don;t understnad because according to the documentation the last
>> 4 bits indicate the type and 1 should be Ethercat. But neither TC nor
>> EML have a 1 in that position? Or is LSB and MSB turned around?
> 
> I don't understand your question here, but ethercat is little endian IIRC
> 
>> I get a feeling that the differences in this header may be the cause for
>> the problem. It may even be the length which IMHO seems to differ but I
>> am not sure because there is so much info I am lacking.
> 
> 


From tompanis at skynet.be  Tue Jul 31 19:15:57 2007
From: tompanis at skynet.be (Tom Panis)
Date: Tue, 31 Jul 2007 19:15:57 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <46AF62AD.8040009@gmail.com>
References: <46AF1F30.1060907@gmail.com>	<Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>
	<46AF62AD.8040009@gmail.com>
Message-ID: <46AF6E4D.3040200@skynet.be>


Roland Tollenaar wrote:
> Hi Klaas,
>
> Thanks. The LWR should be fine but its a bit strange that Twincat does a 
> logical RD. That would imply that no data is written to the slaves but 
> this does not correspond to the outputs being set?
>   

Ethercat usually sends frames with a couple of telegrams inside. Looking 
at the scan Sa?d posted you'll see that there is a LWR telegram for the 
analog and digital outputs a LRD for the digital inputs, a second LRD 
for the mailbox and a BRD.


> Have you received the mail about the watchdog timer? Could you advise on 
> how to read/ set this with EML?
>
> Regards,
>
> Roland
>
> Klaas Gadeyne wrote:
>   
>> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>>     
>>> Hi,
>>>
>>> Please give some assistance wrt to the ethercat dataframes. I am having
>>> trouble with the documentation.
>>>
>>> In particular at the moment the EC datagram header is what I am
>>> interested in.
>>>
>>> This is what the header looks like.
>>>
>>>    Cmd    /Idx    /Addr    /Offset    /11bit length/R/C/R/M    /IRQ
>>> TC  0b    00    00 00    01 00    05 80            00 00
>>> EML 0c    46    00 00    01 00    05 00            00 00
>>>
>>> Now the questions are:
>>>
>>> Where do I find documentation on the Cmd values that must be used. Why
>>> would EML have a different command? (0xc instead of 0x0b)
>>>       
>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>
>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>
>>
>> So it seems you (or EML code, since I don't know _when_ this frame is
>> send)) are performing a logical read-write, while twincat is doing a
>> logical read.
>>
>>     
>>> The Index Idx has 0x46 instead of 00. Again I have missed (cannot for
>>> the life of me find it this morning because I think I have seen
>>> something about it) the part in the documentation that tells me what the
>>> index does. Why will EML have a different value here?
>>>       
>> AFAIK (please check in the spec) the spec only says that the master
>> should check if the index is unaltered when a message returns, its
>> real value doesn't matter.
>>
>>     
>>> Then we see a difference in the RCRM part of the header. I have no idea
>>> what they mean. C is recirculating, M means More datagrams.
>>>       
>> Me neither, I guess that is the module specific data?
>>
>>     
>>> Finally my question is how to establish the lenght out of the 11 bit
>>> length. This may be obvious but what confuses me is the part in the
>>> Ethercat Header (main header not the one in the datagram)
>>>
>>> This part is
>>> TC   0x39 0x10
>>> EML  0x11 0x10
>>>
>>> Which I don;t understnad because according to the documentation the last
>>> 4 bits indicate the type and 1 should be Ethercat. But neither TC nor
>>> EML have a 1 in that position? Or is LSB and MSB turned around?
>>>       
>> I don't understand your question here, but ethercat is little endian IIRC
>>
>>     
>>> I get a feeling that the differences in this header may be the cause for
>>> the problem. It may even be the length which IMHO seems to differ but I
>>> am not sure because there is so much info I am lacking.
>>>       
>>     
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>
>   


From tompanis at skynet.be  Tue Jul 31 19:25:27 2007
From: tompanis at skynet.be (Tom Panis)
Date: Tue, 31 Jul 2007 19:25:27 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>
References: <46AF1F30.1060907@gmail.com>
	<Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>
Message-ID: <46AF7087.9080104@skynet.be>


Klaas Gadeyne wrote:
> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>   
>> Hi,
>>
>> Please give some assistance wrt to the ethercat dataframes. I am having
>> trouble with the documentation.
>>
>> In particular at the moment the EC datagram header is what I am
>> interested in.
>>
>> This is what the header looks like.
>>
>>    Cmd	/Idx	/Addr	/Offset	/11bit length/R/C/R/M	/IRQ
>> TC  0b	00	00 00	01 00	05 80			00 00
>> EML 0c	46	00 00	01 00	05 00			00 00
>>
>> Now the questions are:
>>
>> Where do I find documentation on the Cmd values that must be used. Why
>> would EML have a different command? (0xc instead of 0x0b)
>>     
>
> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0>
> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0>
>
> So it seems you (or EML code, since I don't know _when_ this frame is
> send)) are performing a logical read-write, while twincat is doing a
> logical read.
>
>   
>> The Index Idx has 0x46 instead of 00. Again I have missed (cannot for
>> the life of me find it this morning because I think I have seen
>> something about it) the part in the documentation that tells me what the
>> index does. Why will EML have a different value here?
>>     
>
> AFAIK (please check in the spec) the spec only says that the master
> should check if the index is unaltered when a message returns, its
> real value doesn't matter.
>
>   
>> Then we see a difference in the RCRM part of the header. I have no idea
>> what they mean. C is recirculating, M means More datagrams.
>>     
>
> Me neither, I guess that is the module specific data?
>   

The specs tell me there are 4 bits reserved after the 11 bit length, 
then there's a bit that says if there is (or is not) another telegram 
following in the same frame (this would be your 'M') and then there's 
the IRQ ( 1 word ) which is also reserved for future use.

>   
>> Finally my question is how to establish the lenght out of the 11 bit
>> length. This may be obvious but what confuses me is the part in the
>> Ethercat Header (main header not the one in the datagram)
>>
>> This part is
>> TC   0x39 0x10
>> EML  0x11 0x10
>>
>> Which I don;t understnad because according to the documentation the last
>> 4 bits indicate the type and 1 should be Ethercat. But neither TC nor
>> EML have a 1 in that position? Or is LSB and MSB turned around?
>>     
>
> I don't understand your question here, but ethercat is little endian IIRC
>
>   
>> I get a feeling that the differences in this header may be the cause for
>> the problem. It may even be the length which IMHO seems to differ but I
>> am not sure because there is so much info I am lacking.
>>     
>
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>
>   


From rwatollenaar at gmail.com  Tue Jul 31 19:31:56 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 31 Jul 2007 19:31:56 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <46AF6E4D.3040200@skynet.be>
References: <46AF1F30.1060907@gmail.com>	<Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>	<46AF62AD.8040009@gmail.com>
	<46AF6E4D.3040200@skynet.be>
Message-ID: <46AF720C.4010903@gmail.com>

Hi,

Thanks for the insight. I had not noticed that. Am I correct in stating 
that the EML frame has a single telegram all LWR? Its surely getting my 
digital inputs so there seems to be no problem there. Still the command 
in the header of the data for the ouputs is different to that in the EML 
one  0x0b as opposed to 0x0c so are you /sure/ that EML is operating LWR 
on the outputs? What am I missing?

Roland

Tom Panis wrote:
> Roland Tollenaar wrote:
>> Hi Klaas,
>>
>> Thanks. The LWR should be fine but its a bit strange that Twincat does a 
>> logical RD. That would imply that no data is written to the slaves but 
>> this does not correspond to the outputs being set?
>>   
> 
> Ethercat usually sends frames with a couple of telegrams inside. Looking 
> at the scan Sa?d posted you'll see that there is a LWR telegram for the 
> analog and digital outputs a LRD for the digital inputs, a second LRD 
> for the mailbox and a BRD.
> 
> 
>> Have you received the mail about the watchdog timer? Could you advise on 
>> how to read/ set this with EML?
>>
>> Regards,
>>
>> Roland
>>
>> Klaas Gadeyne wrote:
>>   
>>> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>>>     
>>>> Hi,
>>>>
>>>> Please give some assistance wrt to the ethercat dataframes. I am having
>>>> trouble with the documentation.
>>>>
>>>> In particular at the moment the EC datagram header is what I am
>>>> interested in.
>>>>
>>>> This is what the header looks like.
>>>>
>>>>    Cmd    /Idx    /Addr    /Offset    /11bit length/R/C/R/M    /IRQ
>>>> TC  0b    00    00 00    01 00    05 80            00 00
>>>> EML 0c    46    00 00    01 00    05 00            00 00
>>>>
>>>> Now the questions are:
>>>>
>>>> Where do I find documentation on the Cmd values that must be used. Why
>>>> would EML have a different command? (0xc instead of 0x0b)
>>>>       
>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>
>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>
>>>
>>> So it seems you (or EML code, since I don't know _when_ this frame is
>>> send)) are performing a logical read-write, while twincat is doing a
>>> logical read.
>>>
>>>     
>>>> The Index Idx has 0x46 instead of 00. Again I have missed (cannot for
>>>> the life of me find it this morning because I think I have seen
>>>> something about it) the part in the documentation that tells me what the
>>>> index does. Why will EML have a different value here?
>>>>       
>>> AFAIK (please check in the spec) the spec only says that the master
>>> should check if the index is unaltered when a message returns, its
>>> real value doesn't matter.
>>>
>>>     
>>>> Then we see a difference in the RCRM part of the header. I have no idea
>>>> what they mean. C is recirculating, M means More datagrams.
>>>>       
>>> Me neither, I guess that is the module specific data?
>>>
>>>     
>>>> Finally my question is how to establish the lenght out of the 11 bit
>>>> length. This may be obvious but what confuses me is the part in the
>>>> Ethercat Header (main header not the one in the datagram)
>>>>
>>>> This part is
>>>> TC   0x39 0x10
>>>> EML  0x11 0x10
>>>>
>>>> Which I don;t understnad because according to the documentation the last
>>>> 4 bits indicate the type and 1 should be Ethercat. But neither TC nor
>>>> EML have a 1 in that position? Or is LSB and MSB turned around?
>>>>       
>>> I don't understand your question here, but ethercat is little endian IIRC
>>>
>>>     
>>>> I get a feeling that the differences in this header may be the cause for
>>>> the problem. It may even be the length which IMHO seems to differ but I
>>>> am not sure because there is so much info I am lacking.
>>>>       
>>>     
>> _______________________________________________
>> Ethercatmaster-users mailing list
>> Ethercatmaster-users at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>
>>   
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 


From rwatollenaar at gmail.com  Tue Jul 31 19:34:22 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 31 Jul 2007 19:34:22 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <46AF7087.9080104@skynet.be>
References: <46AF1F30.1060907@gmail.com>	<Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>
	<46AF7087.9080104@skynet.be>
Message-ID: <46AF729E.3070209@gmail.com>

Hi,

Again please note that the datagram header below precedes the process 
data for the outputs (AO and DO). Yet the command is different. Klaas 
points out that the index is irrelevant and the specs seem to confirm 
this. Yet the Cmd and the length might not be irrelecant and they both 
seem to differ?

Roland

Tom Panis wrote:
> Klaas Gadeyne wrote:
>> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>>   
>>> Hi,
>>>
>>> Please give some assistance wrt to the ethercat dataframes. I am having
>>> trouble with the documentation.
>>>
>>> In particular at the moment the EC datagram header is what I am
>>> interested in.
>>>
>>> This is what the header looks like.
>>>
>>>    Cmd	/Idx	/Addr	/Offset	/11bit length/R/C/R/M	/IRQ
>>> TC  0b	00	00 00	01 00	05 80			00 00
>>> EML 0c	46	00 00	01 00	05 00			00 00
>>>
>>> Now the questions are:
>>>
>>> Where do I find documentation on the Cmd values that must be used. Why
>>> would EML have a different command? (0xc instead of 0x0b)
>>>     
>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0>
>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0>
>>
>> So it seems you (or EML code, since I don't know _when_ this frame is
>> send)) are performing a logical read-write, while twincat is doing a
>> logical read.
>>
>>   
>>> The Index Idx has 0x46 instead of 00. Again I have missed (cannot for
>>> the life of me find it this morning because I think I have seen
>>> something about it) the part in the documentation that tells me what the
>>> index does. Why will EML have a different value here?
>>>     
>> AFAIK (please check in the spec) the spec only says that the master
>> should check if the index is unaltered when a message returns, its
>> real value doesn't matter.
>>
>>   
>>> Then we see a difference in the RCRM part of the header. I have no idea
>>> what they mean. C is recirculating, M means More datagrams.
>>>     
>> Me neither, I guess that is the module specific data?
>>   
> 
> The specs tell me there are 4 bits reserved after the 11 bit length, 
> then there's a bit that says if there is (or is not) another telegram 
> following in the same frame (this would be your 'M') and then there's 
> the IRQ ( 1 word ) which is also reserved for future use.
> 
>>   
>>> Finally my question is how to establish the lenght out of the 11 bit
>>> length. This may be obvious but what confuses me is the part in the
>>> Ethercat Header (main header not the one in the datagram)
>>>
>>> This part is
>>> TC   0x39 0x10
>>> EML  0x11 0x10
>>>
>>> Which I don;t understnad because according to the documentation the last
>>> 4 bits indicate the type and 1 should be Ethercat. But neither TC nor
>>> EML have a 1 in that position? Or is LSB and MSB turned around?
>>>     
>> I don't understand your question here, but ethercat is little endian IIRC
>>
>>   
>>> I get a feeling that the differences in this header may be the cause for
>>> the problem. It may even be the length which IMHO seems to differ but I
>>> am not sure because there is so much info I am lacking.
>>>     
>> _______________________________________________
>> Ethercatmaster-users mailing list
>> Ethercatmaster-users at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>
>>   
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 


From tompanis at skynet.be  Tue Jul 31 19:58:00 2007
From: tompanis at skynet.be (Tom Panis)
Date: Tue, 31 Jul 2007 19:58:00 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <46AF720C.4010903@gmail.com>
References: <46AF1F30.1060907@gmail.com>	<Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>	<46AF62AD.8040009@gmail.com>
	<46AF6E4D.3040200@skynet.be> <46AF720C.4010903@gmail.com>
Message-ID: <46AF7828.1060508@skynet.be>


Roland Tollenaar schreef:
> Hi,
>
> Thanks for the insight. I had not noticed that. Am I correct in 
> stating that the EML frame has a single telegram all LWR? Its surely 
> getting my digital inputs so there seems to be no problem there. Still 
> the command in the header of the data for the ouputs is different to 
> that in the EML one  0x0b as opposed to 0x0c so are you /sure/ that 
> EML is operating LWR on the outputs? What am I missing?

EML doesn't use a LWR command (= logical write) but a LRW command (= 
logical read write). With this LRW command there can be read from and 
written to the slaves at the same time and using the same telegram.

0x0b stands for LWR and 0x0c stands for LRW.  So because EML uses only 
one telegram, it has to be 0x0c. Twincat splits the read and write 
commands and therefore you'll see 0x0b at a Twincat scan. And I'm pretty 
sure you'll also see 0x0a (LRD) in another frame of the same telegram 
for reading data. An overview of all the Ethercat commands can be found 
in the spec at page 69 ff.

Ps. I'm not 100% sure but I think somewhere in the configuration of 
TwinCAT, you can choose between using LRW commands or LRD and LWR commands.

>
> Roland
>
> Tom Panis wrote:
>> Roland Tollenaar wrote:
>>> Hi Klaas,
>>>
>>> Thanks. The LWR should be fine but its a bit strange that Twincat 
>>> does a logical RD. That would imply that no data is written to the 
>>> slaves but this does not correspond to the outputs being set?
>>>   
>>
>> Ethercat usually sends frames with a couple of telegrams inside. 
>> Looking at the scan Sa?d posted you'll see that there is a LWR 
>> telegram for the analog and digital outputs a LRD for the digital 
>> inputs, a second LRD for the mailbox and a BRD.
>>
>>
>>> Have you received the mail about the watchdog timer? Could you 
>>> advise on how to read/ set this with EML?
>>>
>>> Regards,
>>>
>>> Roland
>>>
>>> Klaas Gadeyne wrote:
>>>  
>>>> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>>>>    
>>>>> Hi,
>>>>>
>>>>> Please give some assistance wrt to the ethercat dataframes. I am 
>>>>> having
>>>>> trouble with the documentation.
>>>>>
>>>>> In particular at the moment the EC datagram header is what I am
>>>>> interested in.
>>>>>
>>>>> This is what the header looks like.
>>>>>
>>>>>    Cmd    /Idx    /Addr    /Offset    /11bit length/R/C/R/M    /IRQ
>>>>> TC  0b    00    00 00    01 00    05 80            00 00
>>>>> EML 0c    46    00 00    01 00    05 00            00 00
>>>>>
>>>>> Now the questions are:
>>>>>
>>>>> Where do I find documentation on the Cmd values that must be used. 
>>>>> Why
>>>>> would EML have a different command? (0xc instead of 0x0b)
>>>>>       
>>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>>
>>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>>
>>>>
>>>> So it seems you (or EML code, since I don't know _when_ this frame is
>>>> send)) are performing a logical read-write, while twincat is doing a
>>>> logical read.
>>>>
>>>>    
>>>>> The Index Idx has 0x46 instead of 00. Again I have missed (cannot for
>>>>> the life of me find it this morning because I think I have seen
>>>>> something about it) the part in the documentation that tells me 
>>>>> what the
>>>>> index does. Why will EML have a different value here?
>>>>>       
>>>> AFAIK (please check in the spec) the spec only says that the master
>>>> should check if the index is unaltered when a message returns, its
>>>> real value doesn't matter.
>>>>
>>>>    
>>>>> Then we see a difference in the RCRM part of the header. I have no 
>>>>> idea
>>>>> what they mean. C is recirculating, M means More datagrams.
>>>>>       
>>>> Me neither, I guess that is the module specific data?
>>>>
>>>>    
>>>>> Finally my question is how to establish the lenght out of the 11 bit
>>>>> length. This may be obvious but what confuses me is the part in the
>>>>> Ethercat Header (main header not the one in the datagram)
>>>>>
>>>>> This part is
>>>>> TC   0x39 0x10
>>>>> EML  0x11 0x10
>>>>>
>>>>> Which I don;t understnad because according to the documentation 
>>>>> the last
>>>>> 4 bits indicate the type and 1 should be Ethercat. But neither TC nor
>>>>> EML have a 1 in that position? Or is LSB and MSB turned around?
>>>>>       
>>>> I don't understand your question here, but ethercat is little 
>>>> endian IIRC
>>>>
>>>>    
>>>>> I get a feeling that the differences in this header may be the 
>>>>> cause for
>>>>> the problem. It may even be the length which IMHO seems to differ 
>>>>> but I
>>>>> am not sure because there is so much info I am lacking.
>>>>>       
>>>>     
>>> _______________________________________________
>>> Ethercatmaster-users mailing list
>>> Ethercatmaster-users at lists.berlios.de
>>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>>
>>>   
>> _______________________________________________
>> Ethercatmaster-users mailing list
>> Ethercatmaster-users at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>
>


From rwatollenaar at gmail.com  Tue Jul 31 20:04:04 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 31 Jul 2007 20:04:04 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <46AF7828.1060508@skynet.be>
References: <46AF1F30.1060907@gmail.com>	<Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>	<46AF62AD.8040009@gmail.com>	<46AF6E4D.3040200@skynet.be>
	<46AF720C.4010903@gmail.com> <46AF7828.1060508@skynet.be>
Message-ID: <46AF7994.9030003@gmail.com>

HI,

Perfect! explains a lot. thanks. This all really seems to point towards 
the watchdog timer. Have you got any idea how I can check/set that?

Regards,

Roland.

Tom Panis wrote:
> Roland Tollenaar schreef:
>> Hi,
>>
>> Thanks for the insight. I had not noticed that. Am I correct in 
>> stating that the EML frame has a single telegram all LWR? Its surely 
>> getting my digital inputs so there seems to be no problem there. Still 
>> the command in the header of the data for the ouputs is different to 
>> that in the EML one  0x0b as opposed to 0x0c so are you /sure/ that 
>> EML is operating LWR on the outputs? What am I missing?
> 
> EML doesn't use a LWR command (= logical write) but a LRW command (= 
> logical read write). With this LRW command there can be read from and 
> written to the slaves at the same time and using the same telegram.
> 
> 0x0b stands for LWR and 0x0c stands for LRW.  So because EML uses only 
> one telegram, it has to be 0x0c. Twincat splits the read and write 
> commands and therefore you'll see 0x0b at a Twincat scan. And I'm pretty 
> sure you'll also see 0x0a (LRD) in another frame of the same telegram 
> for reading data. An overview of all the Ethercat commands can be found 
> in the spec at page 69 ff.
> 
> Ps. I'm not 100% sure but I think somewhere in the configuration of 
> TwinCAT, you can choose between using LRW commands or LRD and LWR commands.
> 
>> Roland
>>
>> Tom Panis wrote:
>>> Roland Tollenaar wrote:
>>>> Hi Klaas,
>>>>
>>>> Thanks. The LWR should be fine but its a bit strange that Twincat 
>>>> does a logical RD. That would imply that no data is written to the 
>>>> slaves but this does not correspond to the outputs being set?
>>>>   
>>> Ethercat usually sends frames with a couple of telegrams inside. 
>>> Looking at the scan Sa?d posted you'll see that there is a LWR 
>>> telegram for the analog and digital outputs a LRD for the digital 
>>> inputs, a second LRD for the mailbox and a BRD.
>>>
>>>
>>>> Have you received the mail about the watchdog timer? Could you 
>>>> advise on how to read/ set this with EML?
>>>>
>>>> Regards,
>>>>
>>>> Roland
>>>>
>>>> Klaas Gadeyne wrote:
>>>>  
>>>>> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>>>>>    
>>>>>> Hi,
>>>>>>
>>>>>> Please give some assistance wrt to the ethercat dataframes. I am 
>>>>>> having
>>>>>> trouble with the documentation.
>>>>>>
>>>>>> In particular at the moment the EC datagram header is what I am
>>>>>> interested in.
>>>>>>
>>>>>> This is what the header looks like.
>>>>>>
>>>>>>    Cmd    /Idx    /Addr    /Offset    /11bit length/R/C/R/M    /IRQ
>>>>>> TC  0b    00    00 00    01 00    05 80            00 00
>>>>>> EML 0c    46    00 00    01 00    05 00            00 00
>>>>>>
>>>>>> Now the questions are:
>>>>>>
>>>>>> Where do I find documentation on the Cmd values that must be used. 
>>>>>> Why
>>>>>> would EML have a different command? (0xc instead of 0x0b)
>>>>>>       
>>>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>>>
>>>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>>>
>>>>>
>>>>> So it seems you (or EML code, since I don't know _when_ this frame is
>>>>> send)) are performing a logical read-write, while twincat is doing a
>>>>> logical read.
>>>>>
>>>>>    
>>>>>> The Index Idx has 0x46 instead of 00. Again I have missed (cannot for
>>>>>> the life of me find it this morning because I think I have seen
>>>>>> something about it) the part in the documentation that tells me 
>>>>>> what the
>>>>>> index does. Why will EML have a different value here?
>>>>>>       
>>>>> AFAIK (please check in the spec) the spec only says that the master
>>>>> should check if the index is unaltered when a message returns, its
>>>>> real value doesn't matter.
>>>>>
>>>>>    
>>>>>> Then we see a difference in the RCRM part of the header. I have no 
>>>>>> idea
>>>>>> what they mean. C is recirculating, M means More datagrams.
>>>>>>       
>>>>> Me neither, I guess that is the module specific data?
>>>>>
>>>>>    
>>>>>> Finally my question is how to establish the lenght out of the 11 bit
>>>>>> length. This may be obvious but what confuses me is the part in the
>>>>>> Ethercat Header (main header not the one in the datagram)
>>>>>>
>>>>>> This part is
>>>>>> TC   0x39 0x10
>>>>>> EML  0x11 0x10
>>>>>>
>>>>>> Which I don;t understnad because according to the documentation 
>>>>>> the last
>>>>>> 4 bits indicate the type and 1 should be Ethercat. But neither TC nor
>>>>>> EML have a 1 in that position? Or is LSB and MSB turned around?
>>>>>>       
>>>>> I don't understand your question here, but ethercat is little 
>>>>> endian IIRC
>>>>>
>>>>>    
>>>>>> I get a feeling that the differences in this header may be the 
>>>>>> cause for
>>>>>> the problem. It may even be the length which IMHO seems to differ 
>>>>>> but I
>>>>>> am not sure because there is so much info I am lacking.
>>>>>>       
>>>>>     
>>>> _______________________________________________
>>>> Ethercatmaster-users mailing list
>>>> Ethercatmaster-users at lists.berlios.de
>>>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>>>
>>>>   
>>> _______________________________________________
>>> Ethercatmaster-users mailing list
>>> Ethercatmaster-users at lists.berlios.de
>>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>>
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 


From tompanis at skynet.be  Tue Jul 31 20:33:16 2007
From: tompanis at skynet.be (Tom Panis)
Date: Tue, 31 Jul 2007 20:33:16 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <46AF7994.9030003@gmail.com>
References: <46AF1F30.1060907@gmail.com>	<Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>	<46AF62AD.8040009@gmail.com>	<46AF6E4D.3040200@skynet.be>
	<46AF720C.4010903@gmail.com> <46AF7828.1060508@skynet.be>
	<46AF7994.9030003@gmail.com>
Message-ID: <46AF806C.3070206@skynet.be>


Roland Tollenaar wrote:
> HI,
>
> Perfect! explains a lot. thanks. This all really seems to point 
> towards the watchdog timer. Have you got any idea how I can check/set 
> that?

Changing the watchdog time isn't implemented in EML, but feel free to 
implement it :-).

I'm not sure if the watchdog is the problem since it's disabled in the 
configuration you use. Enabling/disabling the watchdog can be done by 
changing the sixth argument of the EC_SyncMan of the used module
See 
https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_slave_memory.cxx?op=file&rev=0&sc=0

>
> Regards,
>
> Roland.
>
> Tom Panis wrote:
>> Roland Tollenaar schreef:
>>> Hi,
>>>
>>> Thanks for the insight. I had not noticed that. Am I correct in 
>>> stating that the EML frame has a single telegram all LWR? Its surely 
>>> getting my digital inputs so there seems to be no problem there. 
>>> Still the command in the header of the data for the ouputs is 
>>> different to that in the EML one  0x0b as opposed to 0x0c so are you 
>>> /sure/ that EML is operating LWR on the outputs? What am I missing?
>>
>> EML doesn't use a LWR command (= logical write) but a LRW command (= 
>> logical read write). With this LRW command there can be read from and 
>> written to the slaves at the same time and using the same telegram.
>>
>> 0x0b stands for LWR and 0x0c stands for LRW.  So because EML uses 
>> only one telegram, it has to be 0x0c. Twincat splits the read and 
>> write commands and therefore you'll see 0x0b at a Twincat scan. And 
>> I'm pretty sure you'll also see 0x0a (LRD) in another frame of the 
>> same telegram for reading data. An overview of all the Ethercat 
>> commands can be found in the spec at page 69 ff.
>>
>> Ps. I'm not 100% sure but I think somewhere in the configuration of 
>> TwinCAT, you can choose between using LRW commands or LRD and LWR 
>> commands.
>>
>>> Roland
>>>
>>> Tom Panis wrote:
>>>> Roland Tollenaar wrote:
>>>>> Hi Klaas,
>>>>>
>>>>> Thanks. The LWR should be fine but its a bit strange that Twincat 
>>>>> does a logical RD. That would imply that no data is written to the 
>>>>> slaves but this does not correspond to the outputs being set?
>>>>>   
>>>> Ethercat usually sends frames with a couple of telegrams inside. 
>>>> Looking at the scan Sa?d posted you'll see that there is a LWR 
>>>> telegram for the analog and digital outputs a LRD for the digital 
>>>> inputs, a second LRD for the mailbox and a BRD.
>>>>
>>>>
>>>>> Have you received the mail about the watchdog timer? Could you 
>>>>> advise on how to read/ set this with EML?
>>>>>
>>>>> Regards,
>>>>>
>>>>> Roland
>>>>>
>>>>> Klaas Gadeyne wrote:
>>>>>  
>>>>>> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>>>>>>   
>>>>>>> Hi,
>>>>>>>
>>>>>>> Please give some assistance wrt to the ethercat dataframes. I am 
>>>>>>> having
>>>>>>> trouble with the documentation.
>>>>>>>
>>>>>>> In particular at the moment the EC datagram header is what I am
>>>>>>> interested in.
>>>>>>>
>>>>>>> This is what the header looks like.
>>>>>>>
>>>>>>>    Cmd    /Idx    /Addr    /Offset    /11bit length/R/C/R/M    /IRQ
>>>>>>> TC  0b    00    00 00    01 00    05 80            00 00
>>>>>>> EML 0c    46    00 00    01 00    05 00            00 00
>>>>>>>
>>>>>>> Now the questions are:
>>>>>>>
>>>>>>> Where do I find documentation on the Cmd values that must be 
>>>>>>> used. Why
>>>>>>> would EML have a different command? (0xc instead of 0x0b)
>>>>>>>       
>>>>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>>>>
>>>>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>>>>
>>>>>>
>>>>>> So it seems you (or EML code, since I don't know _when_ this 
>>>>>> frame is
>>>>>> send)) are performing a logical read-write, while twincat is doing a
>>>>>> logical read.
>>>>>>
>>>>>>   
>>>>>>> The Index Idx has 0x46 instead of 00. Again I have missed 
>>>>>>> (cannot for
>>>>>>> the life of me find it this morning because I think I have seen
>>>>>>> something about it) the part in the documentation that tells me 
>>>>>>> what the
>>>>>>> index does. Why will EML have a different value here?
>>>>>>>       
>>>>>> AFAIK (please check in the spec) the spec only says that the master
>>>>>> should check if the index is unaltered when a message returns, its
>>>>>> real value doesn't matter.
>>>>>>
>>>>>>   
>>>>>>> Then we see a difference in the RCRM part of the header. I have 
>>>>>>> no idea
>>>>>>> what they mean. C is recirculating, M means More datagrams.
>>>>>>>       
>>>>>> Me neither, I guess that is the module specific data?
>>>>>>
>>>>>>   
>>>>>>> Finally my question is how to establish the lenght out of the 11 
>>>>>>> bit
>>>>>>> length. This may be obvious but what confuses me is the part in the
>>>>>>> Ethercat Header (main header not the one in the datagram)
>>>>>>>
>>>>>>> This part is
>>>>>>> TC   0x39 0x10
>>>>>>> EML  0x11 0x10
>>>>>>>
>>>>>>> Which I don;t understnad because according to the documentation 
>>>>>>> the last
>>>>>>> 4 bits indicate the type and 1 should be Ethercat. But neither 
>>>>>>> TC nor
>>>>>>> EML have a 1 in that position? Or is LSB and MSB turned around?
>>>>>>>       
>>>>>> I don't understand your question here, but ethercat is little 
>>>>>> endian IIRC
>>>>>>
>>>>>>   
>>>>>>> I get a feeling that the differences in this header may be the 
>>>>>>> cause for
>>>>>>> the problem. It may even be the length which IMHO seems to 
>>>>>>> differ but I
>>>>>>> am not sure because there is so much info I am lacking.
>>>>>>>       
>>>>>>     
>>>>> _______________________________________________
>>>>> Ethercatmaster-users mailing list
>>>>> Ethercatmaster-users at lists.berlios.de
>>>>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>>>>
>>>>>   
>>>> _______________________________________________
>>>> Ethercatmaster-users mailing list
>>>> Ethercatmaster-users at lists.berlios.de
>>>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>>>
>> _______________________________________________
>> Ethercatmaster-users mailing list
>> Ethercatmaster-users at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>
>


From rwatollenaar at gmail.com  Tue Jul 31 20:36:13 2007
From: rwatollenaar at gmail.com (Roland Tollenaar)
Date: Tue, 31 Jul 2007 20:36:13 +0200
Subject: [Ethercatmaster-users] understanding the datagrams
In-Reply-To: <46AF806C.3070206@skynet.be>
References: <46AF1F30.1060907@gmail.com>	<Pine.LNX.4.64.0707311809240.21073@ampere.labo01.fmtc.be>	<46AF62AD.8040009@gmail.com>	<46AF6E4D.3040200@skynet.be>	<46AF720C.4010903@gmail.com>
	<46AF7828.1060508@skynet.be>	<46AF7994.9030003@gmail.com>
	<46AF806C.3070206@skynet.be>
Message-ID: <46AF811D.6060502@gmail.com>

Hi,

Well that makes it all the more interesting then. Because somewhere 
between the frame twincat uses and the frame EML uses there is something 
that is causing the difference in behaviour. Perhaps Said should try 
setting Twincat to use LRW so that we can determine whether the 2004 
modules does not perhaps respond badly to the LRW command? I don;t have 
Twincat running and no opportunity to do so.

Any other suggestions?

Roland

Tom Panis wrote:
> Roland Tollenaar wrote:
>> HI,
>>
>> Perfect! explains a lot. thanks. This all really seems to point 
>> towards the watchdog timer. Have you got any idea how I can check/set 
>> that?
> 
> Changing the watchdog time isn't implemented in EML, but feel free to 
> implement it :-).
> 
> I'm not sure if the watchdog is the problem since it's disabled in the 
> configuration you use. Enabling/disabling the watchdog can be done by 
> changing the sixth argument of the EC_SyncMan of the used module
> See 
> https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_slave_memory.cxx?op=file&rev=0&sc=0
> 
>> Regards,
>>
>> Roland.
>>
>> Tom Panis wrote:
>>> Roland Tollenaar schreef:
>>>> Hi,
>>>>
>>>> Thanks for the insight. I had not noticed that. Am I correct in 
>>>> stating that the EML frame has a single telegram all LWR? Its surely 
>>>> getting my digital inputs so there seems to be no problem there. 
>>>> Still the command in the header of the data for the ouputs is 
>>>> different to that in the EML one  0x0b as opposed to 0x0c so are you 
>>>> /sure/ that EML is operating LWR on the outputs? What am I missing?
>>> EML doesn't use a LWR command (= logical write) but a LRW command (= 
>>> logical read write). With this LRW command there can be read from and 
>>> written to the slaves at the same time and using the same telegram.
>>>
>>> 0x0b stands for LWR and 0x0c stands for LRW.  So because EML uses 
>>> only one telegram, it has to be 0x0c. Twincat splits the read and 
>>> write commands and therefore you'll see 0x0b at a Twincat scan. And 
>>> I'm pretty sure you'll also see 0x0a (LRD) in another frame of the 
>>> same telegram for reading data. An overview of all the Ethercat 
>>> commands can be found in the spec at page 69 ff.
>>>
>>> Ps. I'm not 100% sure but I think somewhere in the configuration of 
>>> TwinCAT, you can choose between using LRW commands or LRD and LWR 
>>> commands.
>>>
>>>> Roland
>>>>
>>>> Tom Panis wrote:
>>>>> Roland Tollenaar wrote:
>>>>>> Hi Klaas,
>>>>>>
>>>>>> Thanks. The LWR should be fine but its a bit strange that Twincat 
>>>>>> does a logical RD. That would imply that no data is written to the 
>>>>>> slaves but this does not correspond to the outputs being set?
>>>>>>   
>>>>> Ethercat usually sends frames with a couple of telegrams inside. 
>>>>> Looking at the scan Sa?d posted you'll see that there is a LWR 
>>>>> telegram for the analog and digital outputs a LRD for the digital 
>>>>> inputs, a second LRD for the mailbox and a BRD.
>>>>>
>>>>>
>>>>>> Have you received the mail about the watchdog timer? Could you 
>>>>>> advise on how to read/ set this with EML?
>>>>>>
>>>>>> Regards,
>>>>>>
>>>>>> Roland
>>>>>>
>>>>>> Klaas Gadeyne wrote:
>>>>>>  
>>>>>>> On Tue, 31 Jul 2007, Roland Tollenaar wrote:
>>>>>>>   
>>>>>>>> Hi,
>>>>>>>>
>>>>>>>> Please give some assistance wrt to the ethercat dataframes. I am 
>>>>>>>> having
>>>>>>>> trouble with the documentation.
>>>>>>>>
>>>>>>>> In particular at the moment the EC datagram header is what I am
>>>>>>>> interested in.
>>>>>>>>
>>>>>>>> This is what the header looks like.
>>>>>>>>
>>>>>>>>    Cmd    /Idx    /Addr    /Offset    /11bit length/R/C/R/M    /IRQ
>>>>>>>> TC  0b    00    00 00    01 00    05 80            00 00
>>>>>>>> EML 0c    46    00 00    01 00    05 00            00 00
>>>>>>>>
>>>>>>>> Now the questions are:
>>>>>>>>
>>>>>>>> Where do I find documentation on the Cmd values that must be 
>>>>>>>> used. Why
>>>>>>>> would EML have a different command? (0xc instead of 0x0b)
>>>>>>>>       
>>>>>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_device_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>>>>>
>>>>>>> <https://svn.berlios.de/wsvn/ethercatmaster/trunk/src/dll/ethercat_logical_addressed_telegram.cxx?op=file&rev=0&sc=0> 
>>>>>>>
>>>>>>>
>>>>>>> So it seems you (or EML code, since I don't know _when_ this 
>>>>>>> frame is
>>>>>>> send)) are performing a logical read-write, while twincat is doing a
>>>>>>> logical read.
>>>>>>>
>>>>>>>   
>>>>>>>> The Index Idx has 0x46 instead of 00. Again I have missed 
>>>>>>>> (cannot for
>>>>>>>> the life of me find it this morning because I think I have seen
>>>>>>>> something about it) the part in the documentation that tells me 
>>>>>>>> what the
>>>>>>>> index does. Why will EML have a different value here?
>>>>>>>>       
>>>>>>> AFAIK (please check in the spec) the spec only says that the master
>>>>>>> should check if the index is unaltered when a message returns, its
>>>>>>> real value doesn't matter.
>>>>>>>
>>>>>>>   
>>>>>>>> Then we see a difference in the RCRM part of the header. I have 
>>>>>>>> no idea
>>>>>>>> what they mean. C is recirculating, M means More datagrams.
>>>>>>>>       
>>>>>>> Me neither, I guess that is the module specific data?
>>>>>>>
>>>>>>>   
>>>>>>>> Finally my question is how to establish the lenght out of the 11 
>>>>>>>> bit
>>>>>>>> length. This may be obvious but what confuses me is the part in the
>>>>>>>> Ethercat Header (main header not the one in the datagram)
>>>>>>>>
>>>>>>>> This part is
>>>>>>>> TC   0x39 0x10
>>>>>>>> EML  0x11 0x10
>>>>>>>>
>>>>>>>> Which I don;t understnad because according to the documentation 
>>>>>>>> the last
>>>>>>>> 4 bits indicate the type and 1 should be Ethercat. But neither 
>>>>>>>> TC nor
>>>>>>>> EML have a 1 in that position? Or is LSB and MSB turned around?
>>>>>>>>       
>>>>>>> I don't understand your question here, but ethercat is little 
>>>>>>> endian IIRC
>>>>>>>
>>>>>>>   
>>>>>>>> I get a feeling that the differences in this header may be the 
>>>>>>>> cause for
>>>>>>>> the problem. It may even be the length which IMHO seems to 
>>>>>>>> differ but I
>>>>>>>> am not sure because there is so much info I am lacking.
>>>>>>>>       
>>>>>>>     
>>>>>> _______________________________________________
>>>>>> Ethercatmaster-users mailing list
>>>>>> Ethercatmaster-users at lists.berlios.de
>>>>>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>>>>>
>>>>>>   
>>>>> _______________________________________________
>>>>> Ethercatmaster-users mailing list
>>>>> Ethercatmaster-users at lists.berlios.de
>>>>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>>>>
>>> _______________________________________________
>>> Ethercatmaster-users mailing list
>>> Ethercatmaster-users at lists.berlios.de
>>> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
>>>
> _______________________________________________
> Ethercatmaster-users mailing list
> Ethercatmaster-users at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/ethercatmaster-users
> 


